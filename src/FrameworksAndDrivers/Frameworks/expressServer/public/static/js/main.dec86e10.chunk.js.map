{"version":3,"sources":["Components/LoginForm/LoginFormReducer.ts","Components/Spinner/Spinner.tsx","Constants/colors.ts","Components/LoginForm/LoginForm.style.tsx","Components/App/contextHelper.ts","Components/UserCreationForm/userCreationFormReducers.ts","Components/LoginForm/LoginForm.tsx","Components/LoginForm/helper.ts","Components/UserCreationForm/UserCreation.style.tsx","Constants/UserRoles.ts","Components/UserDashBoard/AdminDashBoard/ContextHelper.ts","Components/UserCreationForm/helper.ts","Components/UserCreationForm/UserCreationForm.tsx","Components/Modal/Modal.style.tsx","Components/Modal/Modal.tsx","Components/Dialogs/Dialog.style.tsx","Components/Dialogs/ConfirmationDialog.tsx","Components/Header/Helper.style.tsx","Components/Header/Header.tsx","Components/UserViewer/UserContainer.style.tsx","Components/Dialogs/AlertDialog.tsx","Components/UserViewer/UserContainer.tsx","Components/UserViewer/UserViwer.style.tsx","Components/UserViewer/SearchDiv.tsx","Components/UserViewer/helpers.ts","Components/UserViewer/UsersViewer.tsx","Components/UserDashBoard/DashboardLayout.tsx","Interfaces/TokenBase.ts","Components/UserDashBoard/AdminDashBoard/Contents/TokenBaseContentHelpers/CategorySelectionForm.tsx","Components/UserDashBoard/AdminDashBoard/Contents/TokenBaseContentHelpers/DateSelectionForm.tsx","Components/UserDashBoard/AdminDashBoard/Contents/TokenBaseContentHelpers/StatusSelectionForm.tsx","Components/UserDashBoard/AdminDashBoard/Headers/TokenBaseHeader.tsx","Components/UserDashBoard/AdminDashBoard/Contents/TokenBaseContentHelpers/StatusAndDateSelectionForm.tsx","Components/PluginConfigFormGenerator/ConfigToElementToMapper.tsx","Components/UserDashBoard/AdminDashBoard/Headers/UsersHeader.tsx","Components/UserDashBoard/AdminDashBoard/Headers/CustomersHeader.tsx","Components/UserDashBoard/AdminDashBoard/Headers/HomeHeader.tsx","Components/UserDashBoard/AdminDashBoard/Headers/TokenCountHeader.tsx","Components/UserDashBoard/AdminDashBoard/Headers/PluginsHeader.tsx","Components/UserDashBoard/AdminDashBoard/Containers/DashboardHeader.tsx","Components/UserDashBoard/AdminDashBoard/Containers/Sidebar.tsx","Components/Cards/CardContainer.tsx","Components/UserDashBoard/AdminDashBoard/Contents/HomeContents.tsx","Components/Cards/TokenProcessingCard.tsx","Components/Cards/TokenCard.tsx","Components/UserDashBoard/AdminDashBoard/Contents/TokenBasesContent.tsx","Components/UserDashBoard/AdminDashBoard/Contents/UserContents.tsx","Components/CustomerForms/CustomerCreationForm.style.tsx","Components/CustomerForms/CustomerCreationForm.tsx","Components/Cards/CustomerCard.tsx","Components/Search/Search.tsx","Components/UserDashBoard/AdminDashBoard/Contents/CustomerContent.style.tsx","Components/UserDashBoard/AdminDashBoard/Contents/CustomersContent.tsx","Components/Cards/OperatorCard.tsx","Components/UserDashBoard/AdminDashBoard/HelperComponents/OperatorCounterForm.style.tsx","Components/UserDashBoard/AdminDashBoard/HelperComponents/OperatorCounterForm.tsx","Components/UserDashBoard/AdminDashBoard/Contents/CounterContent.tsx","Components/CategoryCreationForm/CategoryCreationForm.style.tsx","Components/CategoryCreationForm/CategoryCreationForm.tsx","Components/Cards/CategoryCard.tsx","Components/UserDashBoard/AdminDashBoard/Contents/CategoryContent.tsx","Components/Cards/TokenCountCard.tsx","Components/UserDashBoard/AdminDashBoard/Contents/TokenCountContent.tsx","Components/PluginView/PluginView.tsx","Components/UserDashBoard/OperatorDashboard/Containers/Content.tsx","Components/PluginConfigFormGenerator/ConfigArrayToFormMapper.tsx","Components/PluginConfigFormGenerator/ConfigComponent.tsx","Components/PluginActivationComponent/PluginActivationComponent.tsx","Components/UserDashBoard/AdminDashBoard/Contents/PluginManagement.tsx","Components/UserDashBoard/AdminDashBoard/Containers/Content.tsx","Components/UserDashBoard/AdminDashBoard/AdminDashBoard.tsx","Components/UserDashBoard/OperatorDashboard/ContextHelper.tsx","Components/UserDashBoard/OperatorDashboard/Containers/Content.style.tsx","Components/RandomCallForm/RandomCall.style.tsx","Components/RandomCallForm/RandomCallForm.tsx","Components/UserDashBoard/OperatorDashboard/Containers/ContentContainer.tsx","Components/UserDashBoard/OperatorDashboard/OperatorDashboard.tsx","Components/UserDashBoard/OperatorDashboard/Containers/Header.tsx","Components/UserDashBoard/RegistratorDashboard/ContextHelper.tsx","Components/App/appReducer.ts","Components/UserDashBoard/RegistratorDashboard/Contents/CustomerContent.style.tsx","Components/UserDashBoard/RegistratorDashboard/Contents/CustomersContent.tsx","Components/UserDashBoard/RegistratorDashboard/Contents/HomeContents.tsx","Components/UserDashBoard/RegistratorDashboard/Contents/TokenCountContent.tsx","Components/UserDashBoard/RegistratorDashboard/Containers/Content.tsx","Components/UserDashBoard/RegistratorDashboard/Headers/CustomersHeader.tsx","Components/UserDashBoard/RegistratorDashboard/Headers/HomeHeader.tsx","Components/UserDashBoard/RegistratorDashboard/Headers/TokenCountHeader.tsx","Components/UserDashBoard/RegistratorDashboard/Containers/Header.tsx","Components/UserDashBoard/RegistratorDashboard/Containers/Sidebar.tsx","Components/UserDashBoard/RegistratorDashboard/RegistratorDashboard.tsx","Components/UserDashBoard/UserDashBoard.tsx","Components/App/App.style.tsx","Components/App/helper.ts","Components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionTypes","StyledSpinner","styled","ImSpinner3","Spinner","colors","red","green","blue","lightBlack","darkBlack","white","StyledForm","form","AppContext","React","createContext","UserCreationFormActionTypes","initialState","username","password","isLoading","message","invalidLoginInfoStatus","loginFormReducer","state","action","type","SETINVALIDLOGININFOSTATUS","payLoad","SETISLOADING","SETMESSAGE","SETPASSWORD","SETUSERNAME","Error","LoginForm","setLoggedIn","useReducer","dispatch","textRef","createRef","passwordRef","context","useContext","argObject","useEffect","current","focus","handleUserInputChange","event","currentTarget","value","length","style","borderColor","handleInputChangeFunction","onSubmit","preventDefault","args","validateLoginCredentialsInput","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","error","document","cookie","token","user","_userInfo","setLoggedInUser","setToken","sendLoginRequest","className","placeholder","onChange","ref","disabled","id","UserRoles","success","userCreationFormReducer","SETSUCCESS","Categories","HeaderCategories","validateInputs","createSuperAdminOrUser","userType","SUPERADMIN","createSuperAdmin","createUser","getRequestOptions","catch","toString","closeModal","setUser","updateUser","ADMIN","updateAdmin","updateNonAdmin","updateDisplableUser","role","UserCreationForm","handleInputChangeFn","handleFormSubmitFunction","onClick","stopPropagation","div","Modal","modalVisibility","resetModalVisibility","children","ReactDOM","createPortal","getElementById","Wrapper","section","ConfirmationDialog","params","useState","actionMessage","setActionMessage","setIsLoading","onConfirmArg1Fn","status","onConfirmArg2Fn","title","onConfirm","onReject","StyledHeader","header","Header","setModalVisibility","loggedInUser","setMessage","window","location","reload","UserHolder","handleWrapperClcik","AlertDialog","props","UserContainer","editTrueDeleteFalse","setEditTrueDeleteFalse","showUser","setShowUser","confirmationDialogBodyText","userDisplayJSX","visibility","deleteUserFromUI","UsersViwerWrapper","ListWrapper","SearchDiv","handleSearchChange","searchVisible","setSearchVisible","width","UsersViwer","users","setUsers","displableUsers","setDisplableUsers","addUserVisibility","setAddUserVisibility","admins","map","userInfoContainer","sort","a","b","getAdmins","filter","getUsers","updateFn","loopUser","deleteUser","includes","GridContainer","DashboardLayout","TokenStatus","initialAdminContext","category","HOME","setCategory","headerCategory","NOHEADERS","setHeaderCategory","tokenFetchURL","setTokenFetchURL","url","reloadEnhancer","setReloadEnhancer","AdminContext","CategorySelectionForm","closeForm","adminContext","appContext","selectedCategory","setSelectedCategory","categoryName","currentTokenCount","latestCustomerTokenCount","allCategories","setAllCategories","categories","categoryInteface","DateSelectionForm","selectedDate","setSelectedDate","stringDate","Date","TokenFilterCategories","StatusSelectionForm","ASSIGNED","selectedStatus","setSelectedStatus","BYPASS","CALLAGAIN","FORWARD","PROCESSED","RANDOMPROCESSED","UNPROCESSED","StatusAndDateSelectionForm","StyledSelect","select","IconContainer","EraserDiv","StyledListItem","li","ConfigTypes","TokenBaseHeader","categoryModalVisibility","setCategoryModalVisibility","dateModalVisibility","setDateModalVisibility","statusModalVisibility","setStatusModalVisibility","statusAndDateModalVisibility","setStatusAndDateModalVisibility","SHOWALL","filterOption","setFilterOption","eraserModal","setEraserModalVisible","DATE","CATEGORY","STATUS","STATUSANDDATE","UNCATEGORIZED","setLoading","UsersHeader","OPERATORS","handleHeaderIconClcik","REGISTRATORS","CustomersHeader","TODAYSCUSTOMERS","ALLCUSTOMERS","StyledH2","h2","HomeHeader","StyledHeading","TokenCountHeader","StyledDiv","StyledSection","PluginsHeader","selectedFile","setSelectedFile","successMessage","setSuccessMessage","progress","setProgress","fileInputRef","axiosInstance","axios","create","baseURL","filesCollection","files","firstFile","formData","FormData","append","post","onUploadProgress","Math","round","loaded","total","name","max","HamburgerHolder","DashboardHeader","setHeader","activeAssign","setActiveAssign","hamburgerExpand","setHamburgerExpand","USERS","TOKENBASES","CUSTOMERS","TOKENCOUNT","PLUGINMANAGEMENT","handleClick","CATEGORIES","COUNTERMANAGEMENT","Sidebar","Container","CardContainer","HomeContents","categoryCards","setCategoryCards","today","todaysTokens","push","undefined","forEach","categoryInterface","tokensOfCategory","tokenBase","_token","tokenCategory","totalTokens","unprocessed","tokenbase","_currentStatus","categoryCard","symbol","cards","ProcessingCardContainer","TokenProcessingCard","tokenProcessing","_operator","counter","_status","_timeStamp","toLocaleDateString","toLocaleTimeString","Card","TokenProcessingCardHolder","TokenCard","tokenNumber","tokenId","date","tokenProcessingInfo","index","TokenBasesContent","tokenbases","setTokenbases","loadingModal","setLoadingModal","mounted","tokenBases","UserContents","content","REGISTRATOR","OPERATOR","CustomerCreationForm","customer","updateCustomersList","modalClose","updateCustomerInUI","customerName","setCustomerName","remarks","setRemarks","setTokenCategory","setSuccess","customerNameRef","remarksRef","tokenCategoryRef","allCategoriesObject","stateCategories","defaultCategory","localStorage","getItem","find","categoryObject","setItem","createCustomer","updateCustomer","customerId","removeItem","StyledCard","article","CustomerCard","updateCustomerOnUI","dialogBodyJSX","toLocaleString","SearchContainer","Search","placeholderText","ContentContainer","CustomersContent","allCustomers","setAllCustomers","displableCustomers","setDisplableCustomers","confirmationModalVisibility","setConfirmationModalVisibility","requiredCustomers","tokenDate","getDate","getMonth","getFullYear","filteredCustomers","operator","cardClickFunction","OperatorCounterForm","closeModalFn","updateAnOperatorFn","counterText","setCounterText","toUpperCase","CounterContent","operatorsList","setOperatorsList","selectedOperator","setSelectedOperator","datas","operators","console","log","loopOperator","CategoryCreationForm","addNewCategory","updateACategory","categoryNameRef","categoryRef","stateCategory","setStateCategory","stateCategoryName","setStateCategoryName","updateCategory","createCategory","maxLength","target","CategoryCard","dialogVisibility","setDialogVisibility","latestCustomerCount","currentCustomerCount","deleteAcategory","StyledCategoryContent","CategoryContent","modalVisible","setModalVisible","tokenCategories","setTokenCategories","loopCategory","deleteACategory","CountCard","TokenCountCard","setCurrentCustomerCount","setLatestCustomerCount","currentFetchURL","highestFetchURL","currentCustomerCountOfCategory","currentCustomerTokenCount","lastCustomerCount","lastCustomerTokenCount","size","TokenCountContent","setCategories","categoryInterfaces","uncategorizedCategoryInterface","unshift","StyledView","PluginView","pluginID","plugin","setPlugin","requestMethod","pluginInfo","pluginId","pluginDescription","version","minCoreVersion","ProcessingType","LocalStorageConstant","getElementFromConfigObject","pluginConfigElement","Jsx","configType","TEXT","NUMBER","RADIO","SELECT","CHECKBOX","GetElementForConfigTypeTextOrNumber","defaultValue","GetElementForConfigTypeRadio","typeOfValue","radioButtonCollections","choiceOptions","choiceOption","defaultChecked","GetElementForConfigTypeSelect","setDefaultValue","optionCollections","GetElementForConfigTypeCheckbox","values","radioButton","ConfigToElementToMapper","configArgs","ConfigArrayToFormMapper","loading","formChildrens","pluginConfigElements","getConfigElementsOfSubmittedForm","configElements","configElement","element","RadioNodeList","setElementsFromCheckboxOrRadioInput","child","checked","updateConfig","pluginConfigs","bodyData","pluginsConfig","ConfigComponent","configProps","setPluginConfigElements","selectedPlugin","setSelectedPlugin","PluginActivationComponent","serialKeyValue","setSerialKeyValue","pluginValidatorId","PluginCard","PluginManagement","pluginsResponse","setPluginsResponse","configModalVisible","setConfigModalVisible","deleteModalVisible","setDeleteModalVisible","activationModalVisible","setActivationModalVisible","selectedPluginId","setSelectedPluginId","handleDeleteClick","pluginResponse","valid","handleConfigClick","handleActivationClick","responset","Content","setContent","AdminDashBoard","setReloadEnhancerValue","beginningContext","Provider","OperatorDummyContext","availableCategories","setAvailableCategories","OperatorContext","TokenDisplay","Operation","FormContainer","RandomCallForm","setTokenNumber","isCallProcessOngoing","setIsCallProcessOngoing","actedTokenNumber","selectedForwardCounter","setSelectedForwardCounter","randomCallModalVisible","setRandomCallModalVisible","onDoubleClick","processingToken","setProcessingToken","PROCESSINGTOKEN","handlePrimaryTokenProcessing","isCallAgainProcessing","COMPLETED","isCompletedProcessing","isBypassProcessing","allOperators","handleTokenForward","isForwardProcessing","OperatorCategory","setAllOperators","setIsBypassProcessing","setIsCallAgainProcessing","setIsForwardProcessing","setIsCompletedProcessing","operatorContext","dummyToken","parse","processingDate","areDateSame","currentUser","userData","getBodyOfRequest","processingType","processedCategory","getForwardBody","forwardCounter","counterToForward","getURLFromProcessingType","setAllProcessingToFalse","propsToContentContainer","request","Section","RegistratorCategories","OperatorDashboard","initialContext","convertedCounter","savedCategory","convertedCategory","dummyContext","TODAYSTOKENBASES","RegistratorContext","registratorContext","loopCustomer","ALLTOKENBASES","RegistratorDashboard","registratorCategory","setRegistratorCategory","UserDashBoard","superAdminCondition","adminCondition","registratorCondition","operatorCondition","UsersViewer","AppWrapper","connectionError","isLoggedIn","pageLoading","superAdminExistance","appReducer","SETCONNECTIONERROR","SETISLOGGEDIN","SETPAGELOADING","SETSUPERADMINEXISTANCE","SETUSER","SETTOKEN","verifySuperAdminExistance","margin","padding","setUserIfValidTokenPresent","split","App","effectFunction","initialContextObject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.dec86e10.chunk.js","sourcesContent":["import React from \"react\";\n\nexport enum ActionTypes {\n  SETUSERNAME = \"setUsername\",\n  SETPASSWORD = \"setPassword\",\n  SETISLOADING = \"setIsLoading\",\n  SETMESSAGE = \"setMessage\",\n  SETINVALIDLOGININFOSTATUS = \"setInvalidLoginInfoStatus\"\n}\n\nexport interface State {\n  username: string;\n  password: string;\n  isLoading: boolean;\n  message: string;\n  invalidLoginInfoStatus: boolean;\n}\n\nexport const initialState: State = {\n  username: '',\n  password: '',\n  isLoading: false,\n  message: '',\n  invalidLoginInfoStatus: false\n}\n\nexport interface Action {\n  type: ActionTypes;\n  payLoad: boolean | string;\n}\n\nconst loginFormReducer: React.Reducer<State, Action> = (state: State, action: Action): State => {\n  switch (action.type) {\n    case ActionTypes.SETINVALIDLOGININFOSTATUS:\n      return { ...state, invalidLoginInfoStatus: action.payLoad as boolean }\n    case ActionTypes.SETISLOADING:\n      return { ...state, isLoading: action.payLoad as boolean };\n    case ActionTypes.SETMESSAGE:\n      return { ...state, message: action.payLoad as string };\n    case ActionTypes.SETPASSWORD:\n      return { ...state, password: action.payLoad as string };\n    case ActionTypes.SETUSERNAME:\n      return { ...state, username: action.payLoad as string };\n    default:\n      throw new Error();\n  }\n}\n\nexport default loginFormReducer;","import React from 'react';\nimport { ImSpinner3 } from 'react-icons/im';\nimport styled from 'styled-components';\n\nconst StyledSpinner = styled(ImSpinner3)`\n  @keyframes spinning {\n    from {transform: rotate(0deg);}\n    to {transform: rotate(360deg);}\n  }\n\n  animation-name: spinning;\n  animation-duration: .8s;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n`\n\nconst Spinner: React.FC = (): JSX.Element => {\n  return (\n    <StyledSpinner />\n  )\n}\n\nexport default Spinner;","const colors = {\n  red: \"#f00\",\n  green: \"green\",\n  blue: \"#2A43A3\",\n  lightBlack: \"lightslategrey\",\n  darkBlack: \"#444\",\n  white: \"#fff\"\n}\n\nexport default colors;","import styled from \"styled-components\";\nimport colors from \"../../Constants/colors\";\n\nconst StyledForm = styled.form`\n  width: 80vw;\n  @media (min-width: 800px) {\n    width: 30vw;\n  }\n  .heading{\n    width: 100%;\n    font-size: 1.5em;\n    margin: 0;\n    margin-bottom: .5em;\n    padding: 0;\n    color: ${colors.lightBlack};\n  }\n  div{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: .2em;\n  }\n\n  input {\n    border: none;\n    border-bottom: 3px solid lightslategrey;\n    font-size: 1em;\n    background: inherit;\n    padding: .5em;\n    color: ${colors.lightBlack};\n    margin: .3em;\n    width: 100%;\n  \n    &:focus, &:hover {\n      outline: none;\n      border-color: ${colors.blue};\n      color: ${colors.blue};\n    }\n  }\n\n  button {\n    background: ${colors.lightBlack};\n    border: none;\n    outline: none;\n    color: #eee;\n    width: 100%;\n    padding: .3em;\n    font-size: 1.2em;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 1em;\n    \n    span#left {\n      flex: 1 1 50%;\n      text-align: center;\n    }\n    \n    \n    &:hover, &:active {\n      cursor: pointer;\n      background: ${colors.blue};\n    }\n  }\n\n  .textMessage {\n    color: indianred;\n    display: block;\n    height: 1.2em;\n  }\n\n`;\n\nexport default StyledForm;","import React from \"react\";\nimport UserInterface from \"../../Interfaces/UserInterface\";\n\nexport interface AppContextInterface {\n  loggedInUser: UserInterface | null;\n  token: string;\n  setLoggedInUser: (user: UserInterface | null) => void;\n  setToken: (token: string) => void;\n}\n\nconst AppContext = React.createContext<AppContextInterface | null>(null);\n\nexport default AppContext;","import React from \"react\";\n\nexport enum UserCreationFormActionTypes {\n  SETUSERNAME = \"setUsername\",\n  SETPASSWORD = \"setPassword\",\n  SETISLOADING = \"setIsLoading\",\n  SETMESSAGE = \"setMessage\",\n  SETINVALIDLOGININFOSTATUS = \"setInvalidLoginInfoStatus\",\n  SETSUCCESS = \"setSuccess\"\n}\n\nexport interface UserCreationFormState {\n  username: string;\n  password: string;\n  isLoading: boolean;\n  message: string;\n  invalidLoginInfoStatus: boolean;\n  success: boolean;\n}\n\nexport const initialState: UserCreationFormState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  message: '',\n  invalidLoginInfoStatus: false,\n  success: false,\n}\n\nexport interface UserCreationFormAction {\n  type: UserCreationFormActionTypes;\n  payLoad: boolean | string;\n}\n\nconst userCreationFormReducer: React.Reducer<UserCreationFormState, UserCreationFormAction> =\n  (state: UserCreationFormState, action: UserCreationFormAction): UserCreationFormState => {\n    switch (action.type) {\n      case UserCreationFormActionTypes.SETINVALIDLOGININFOSTATUS:\n        return { ...state, invalidLoginInfoStatus: action.payLoad as boolean };\n      case UserCreationFormActionTypes.SETISLOADING:\n        return { ...state, isLoading: action.payLoad as boolean };\n      case UserCreationFormActionTypes.SETMESSAGE:\n        return { ...state, message: action.payLoad as string };\n      case UserCreationFormActionTypes.SETPASSWORD:\n        return { ...state, password: action.payLoad as string };\n      case UserCreationFormActionTypes.SETUSERNAME:\n        return { ...state, username: action.payLoad as string };\n      case UserCreationFormActionTypes.SETSUCCESS:\n        return { ...state, success: action.payLoad as boolean };\n      default:\n        throw new Error();\n    }\n  }\n\nexport default userCreationFormReducer;","import React, { FormEvent, useContext, useEffect, useReducer } from 'react';\nimport Spinner from '../Spinner/Spinner';\nimport StyledForm from './LoginForm.style';\nimport { FaUserAlt } from 'react-icons/fa';\nimport AppContext from '../App/contextHelper';\nimport loginFormReducer, { initialState } from './LoginFormReducer';\nimport { handleInputChangeFunction, sendLoginRequest, validateLoginCredentialsInput } from './helper';\n\ninterface PropInterface {\n  setLoggedIn: () => void;\n}\n\nconst LoginForm: React.FC<PropInterface> = ({ setLoggedIn }: PropInterface): JSX.Element => {\n  const [state, dispatch] = useReducer(loginFormReducer, initialState);\n  const textRef = React.createRef<HTMLInputElement>();\n  const passwordRef = React.createRef<HTMLInputElement>();\n  const context = useContext(AppContext);\n\n  const argObject = {\n    state,\n    dispatch,\n    textRef,\n    passwordRef,\n    context,\n    setLoggedIn,\n  }\n\n  useEffect(() => {\n    if (textRef.current) {\n      textRef.current.focus();\n    }\n  }, []);\n\n\n\n  const handleUserInputChange = (event: FormEvent<HTMLInputElement>) => {\n    handleInputChangeFunction(event, dispatch);\n  }\n\n  const handleFormSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (validateLoginCredentialsInput(argObject)) {\n      sendLoginRequest(argObject);\n    }\n  }\n\n  return (\n    <StyledForm onSubmit={handleFormSubmit}>\n      <div className=\"heading\">User Login<FaUserAlt /></div>\n      <div>\n        <input type=\"text\" placeholder=\"Username\" onChange={handleUserInputChange} value={state.username} ref={textRef} />\n      </div>\n      <div>\n        <input type=\"password\" placeholder=\"password\" onChange={handleUserInputChange} value={state.password} ref={passwordRef} />\n      </div>\n      <button disabled={state.invalidLoginInfoStatus}>\n        <span id=\"left\">Login</span>\n        {state.isLoading && <Spinner />}\n      </button>\n      <div className=\"textMessage\">{state.message}</div>\n    </StyledForm>\n  )\n}\n\nexport default LoginForm;","import React from \"react\";\nimport colors from \"../../Constants/colors\";\nimport UserInterface from \"../../Interfaces/UserInterface\";\nimport { AppContextInterface } from \"../App/contextHelper\";\nimport { Action, ActionTypes, State } from \"./LoginFormReducer\";\n\nexport const handleInputChangeFunction = (event: React.FormEvent<HTMLInputElement>, dispatch: React.Dispatch<Action>) => {\n  if (event.currentTarget.type === 'text') {\n    dispatch({ type: ActionTypes.SETUSERNAME, payLoad: event.currentTarget.value });\n  } else if (event.currentTarget.type === 'password') {\n    dispatch({ type: ActionTypes.SETPASSWORD, payLoad: event.currentTarget.value });\n  }\n  if (event.currentTarget.value.length < 3) {\n    event.currentTarget.style.borderColor = \"indianred\";\n    dispatch({ type: ActionTypes.SETINVALIDLOGININFOSTATUS, payLoad: true });\n    dispatch({ type: ActionTypes.SETMESSAGE, payLoad: \"Username or Password must be at least 3 characters long\" });\n  } else {\n    event.currentTarget.style.borderColor = colors.green;\n    event.currentTarget.style.borderColor = colors.green;\n    dispatch({ type: ActionTypes.SETINVALIDLOGININFOSTATUS, payLoad: false });\n    dispatch({ type: ActionTypes.SETMESSAGE, payLoad: '' });\n  }\n}\n\nexport interface Arguments {\n  state: State;\n  dispatch: React.Dispatch<Action>;\n  textRef: React.RefObject<HTMLInputElement>;\n  passwordRef: React.RefObject<HTMLInputElement>;\n  context: AppContextInterface | null;\n  setLoggedIn: () => void;\n}\n\nexport const validateLoginCredentialsInput = (args: Arguments): boolean => {\n  if (args.state.username.length < 3) {\n    if (args.textRef.current) {\n      args.textRef.current.focus();\n      args.dispatch({ type: ActionTypes.SETMESSAGE, payLoad: 'Username or Password must be at least 3 characters long ' });\n      return false;\n    }\n  } else if (args.state.password.length < 3) {\n    if (args.passwordRef.current) {\n      args.passwordRef.current.focus();\n      args.dispatch({ type: ActionTypes.SETMESSAGE, payLoad: 'Username or Password must be at least 3 characters long ' });\n      return false;\n    }\n  }\n  return true;\n}\n\nexport const sendLoginRequest = (args: Arguments) => {\n  args.dispatch({ type: ActionTypes.SETISLOADING, payLoad: true });\n  args.dispatch({ type: ActionTypes.SETMESSAGE, payLoad: '' });\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      username: args.state.username,\n      password: args.state.password,\n    })\n  }\n\n  fetch('/users/login', requestOptions).then(response => response.json()).then(data => {\n    args.dispatch({ type: ActionTypes.SETISLOADING, payLoad: false });\n    if (data.error) {\n      args.dispatch({ type: ActionTypes.SETMESSAGE, payLoad: data.error });\n    } else {\n      document.cookie = `token=${data.token}; expires=Thu, 18 Dec 2078 12:00:00 UTC`;\n      const user: UserInterface = data.user._userInfo;\n      args.context?.setLoggedInUser(user);\n      args.context?.setToken(data.token);\n      args.setLoggedIn();\n    }\n  });\n}","import styled from \"styled-components\";\nimport colors from \"../../Constants/colors\";\n\nconst StyledForm = styled.form`\n  width: 80vw;\n  @media (min-width: 800px) {\n    width: 30vw;\n  }\n  .heading{\n    width: 100%;\n    font-size: 1.5em;\n    margin: 0;\n    margin-bottom: .5em;\n    padding: 0;\n    color: ${colors.lightBlack};\n  }\n  div{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: .2em;\n  }\n\n  input {\n    border: none;\n    border-bottom: 3px solid lightslategrey;\n    font-size: 1em;\n    background: inherit;\n    padding: .5em;\n    color: ${colors.lightBlack};\n    margin: .3em;\n    width: 100%;\n  \n    &:focus, &:hover {\n      outline: none;\n      border-color: ${colors.blue};\n      color: ${colors.blue};\n    }\n  }\n\n  button {\n    background: ${colors.lightBlack};\n    border: none;\n    outline: none;\n    color: #eee;\n    width: 100%;\n    padding: .3em;\n    font-size: 1.2em;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 1em;\n    \n    span#left {\n      flex: 1 1 50%;\n      text-align: center;\n    }\n    \n    \n    &:hover, &:active {\n      cursor: pointer;\n      background: ${colors.blue};\n    }\n  }\n\n  .textMessage {\n    color: ${colors.red};\n    display: block;\n    height: 1.2em;\n  }\n\n  .green {\n    color: ${colors.green}\n  }\n\n`;\n\nexport default StyledForm;","enum UserRoles {\n  OPERATOR = 'Operator',\n  ADMIN = 'Administrator',\n  REGISTRATOR = 'Registrator',\n  SUPERADMIN = 'SuperAdministrator'\n}\n\nexport default UserRoles;","import React from \"react\";\n\nexport enum Categories {\n  HOME = \"Home\",\n  USERS = \"Users\",\n  CUSTOMERS = \"Customers\",\n  TOKENBASES = \"Token Bases\",\n  COUNTERMANAGEMENT = \"Counter Management\",\n  CATEGORIES = \"Token Categories\",\n  TOKENCOUNT = \"Token Count\",\n  PLUGINMANAGEMENT = \"Plugin Management\"\n}\n\nexport enum HeaderCategories {\n  OPERATORS = \"Operators\",\n  REGISTRATORS = \"Registrators\",\n  NOHEADERS = \"\",\n  ALLCUSTOMERS = \"AllCustomers\",\n  TODAYSCUSTOMERS = \"TODAYSCUSTOMERS\",\n}\n\nexport interface AdminContextInterface {\n  category: Categories;\n  setCategory: (category: Categories) => void;\n  headerCategory: HeaderCategories;\n  setHeaderCategory: (category: HeaderCategories) => void;\n  tokenFetchURL: string;\n  setTokenFetchURL: (url: string) => void;\n  reloadEnhancer: boolean;\n  setReloadEnhancer: () => void\n}\n\nexport const initialAdminContext: AdminContextInterface = {\n  category: Categories.HOME,\n  setCategory: (category: Categories) => { },\n  headerCategory: HeaderCategories.NOHEADERS,\n  setHeaderCategory: (category: string) => { },\n  tokenFetchURL: '',\n  setTokenFetchURL: (url: string) => { },\n  reloadEnhancer: false,\n  setReloadEnhancer: () => { }\n}\n\nexport const AdminContext = React.createContext<AdminContextInterface>(initialAdminContext);\n","import React from \"react\";\nimport colors from \"../../Constants/colors\";\nimport UserRoles from \"../../Constants/UserRoles\";\nimport UserInterface from \"../../Interfaces/UserInterface\";\nimport { AppContextInterface } from \"../App/contextHelper\";\nimport { UserCreationFormAction, UserCreationFormActionTypes, UserCreationFormState } from \"./userCreationFormReducers\";\n\nexport const handleInputChangeFn = (state: UserCreationFormState, dispatch: React.Dispatch<UserCreationFormAction>, event: React.FormEvent<HTMLInputElement>) => {\n  if (event.currentTarget.type === 'text') {\n    dispatch({ type: UserCreationFormActionTypes.SETUSERNAME, payLoad: event.currentTarget.value });\n  } else if (event.currentTarget.type === 'password') {\n    dispatch({ type: UserCreationFormActionTypes.SETPASSWORD, payLoad: event.currentTarget.value });\n  }\n  if ((event.currentTarget.type === 'text' && event.currentTarget.value.length < 3) ||\n    (event.currentTarget.type === 'password' && event.currentTarget.value.length < 8)) {\n    event.currentTarget.style.borderColor = \"indianred\";\n    dispatch({ type: UserCreationFormActionTypes.SETINVALIDLOGININFOSTATUS, payLoad: true });\n    dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: \"Username - 3 and Password 8 characters required!\" })\n  } else {\n    event.currentTarget.style.borderColor = colors.green;\n    event.currentTarget.style.borderColor = colors.green;\n    dispatch({ type: UserCreationFormActionTypes.SETINVALIDLOGININFOSTATUS, payLoad: false });\n    dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: '' });\n  }\n}\n\nexport interface Arguments {\n  state: UserCreationFormState;\n  textRef: React.RefObject<HTMLInputElement>;\n  passwordRef: React.RefObject<HTMLInputElement>;\n  dispatch: React.Dispatch<UserCreationFormAction>;\n  userType: UserRoles;\n  closeModal: (() => void) | undefined;\n  setUser: ((user: UserInterface) => void) | undefined;\n  context: AppContextInterface | null;\n  updateDisplableUser?: ((user: UserInterface) => void);\n  user?: UserInterface;\n}\n\nexport const handleFormSubmitFunction = (args: Arguments) => {\n  const { dispatch } = args;\n  if (validateInputs(args)) {\n    dispatch({ type: UserCreationFormActionTypes.SETISLOADING, payLoad: true });\n    dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: '' });\n    if (!args.user) {\n      createSuperAdminOrUser(args);\n    } else {\n      updateUser(args);\n    }\n  }\n}\n\nconst validateInputs = ({ state, textRef, passwordRef, dispatch }: Arguments): boolean => {\n  if (state.username.length < 3) {\n    if (textRef.current) {\n      textRef.current.focus();\n      dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: 'Username - 3 and Password 8 characters required! ' });\n      return false;\n    }\n  }\n\n  if (state.password.length < 8) {\n    if (passwordRef.current) {\n      passwordRef.current.focus();\n      dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: 'Username - 3 and Password 8 characters required! ' });\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconst createSuperAdminOrUser = (args: Arguments) => {\n  const { userType } = args;\n  if (userType === UserRoles.SUPERADMIN) {\n    createSuperAdmin(args);\n  } else {\n    createUser(args);\n  }\n}\n\nconst createSuperAdmin = (args: Arguments) => {\n  const { dispatch, userType } = args;\n  const requestOptions = getRequestOptions(args);\n\n  fetch('/users/superAdmin', requestOptions).then(response => response.json()).then(data => {\n    dispatch({ type: UserCreationFormActionTypes.SETISLOADING, payLoad: false })\n    if (data.error) {\n      dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: data.error });\n    } else {\n      dispatch({ type: UserCreationFormActionTypes.SETSUCCESS, payLoad: true });\n      dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: `${userType} Created! Please Reload the page` });\n    }\n  }).catch(error => {\n    dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: error.toString() });\n  });\n}\n\nconst createUser = (args: Arguments) => {\n  const { dispatch, closeModal, setUser, userType } = args;\n  const requestOptions = getRequestOptions(args);\n\n  fetch('/users', requestOptions).then(response => response.json()).then(data => {\n    dispatch({ type: UserCreationFormActionTypes.SETISLOADING, payLoad: false });\n    if (data.error) {\n      dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: data.error });\n    } else {\n      dispatch({ type: UserCreationFormActionTypes.SETSUCCESS, payLoad: true });\n      dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: `${userType} Created! Please Reload the page` });\n      closeModal && closeModal();\n      setUser && setUser(data._userInfo as UserInterface);\n    }\n  }).catch(error => {\n    dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: error.toString() });\n  });\n}\n\nconst updateUser = (args: Arguments) => {\n  if (args.userType === UserRoles.ADMIN) {\n    updateAdmin(args);\n  } else {\n    updateNonAdmin(args);\n  }\n}\n\nconst updateAdmin = (args: Arguments) => {\n  const { dispatch, closeModal, updateDisplableUser, userType } = args;\n  const requestOptions = getRequestOptions(args);\n\n  fetch(`/users/admins/${args.user?.id}`, requestOptions).then(response => response.json()).then(data => {\n    dispatch({ type: UserCreationFormActionTypes.SETISLOADING, payLoad: false });\n    if (data.error) {\n      dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: data.error });\n    } else {\n      dispatch({ type: UserCreationFormActionTypes.SETSUCCESS, payLoad: true });\n      dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: `${userType} Created! Please Reload the page` });\n      closeModal && closeModal();\n      updateDisplableUser && updateDisplableUser(data._userInfo as UserInterface);\n    }\n  }).catch(error => {\n    dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: error.toString() });\n  });\n}\n\nconst updateNonAdmin = (args: Arguments) => {\n  const { dispatch, closeModal, updateDisplableUser, userType } = args;\n  const requestOptions = getRequestOptions(args);\n\n  fetch(`/users/${args.user?.id}`, requestOptions).then(response => response.json()).then(data => {\n    dispatch({ type: UserCreationFormActionTypes.SETISLOADING, payLoad: false });\n    if (data.error) {\n      dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: data.error });\n    } else {\n      dispatch({ type: UserCreationFormActionTypes.SETSUCCESS, payLoad: true });\n      dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: `${userType} Created! Please Reload the page` });\n      closeModal && closeModal();\n      updateDisplableUser && updateDisplableUser(data._userInfo as UserInterface);\n    }\n  }).catch(error => {\n    dispatch({ type: UserCreationFormActionTypes.SETMESSAGE, payLoad: error.toString() });\n  });\n}\n\n\n\nconst getRequestOptions = ({ state, userType, context, user }: Arguments) => {\n  return {\n    method: user ? 'PATCH' : 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${context?.token}`\n    },\n    body: JSON.stringify({\n      username: state.username,\n      password: state.password,\n      role: userType\n    })\n  }\n}","import React, { FormEvent, useContext, useEffect, useReducer } from 'react';\nimport Spinner from '../Spinner/Spinner';\nimport { FaUserAlt } from 'react-icons/fa';\nimport UserRoles from '../../Constants/UserRoles';\nimport AppContext from '../App/contextHelper';\nimport UserInterface from '../../Interfaces/UserInterface';\nimport StyledForm from './UserCreation.style';\nimport userCreationFormReducer, { initialState, UserCreationFormActionTypes } from './userCreationFormReducers';\nimport { Arguments, handleFormSubmitFunction, handleInputChangeFn } from './helper';\n\n\ninterface UserCreationProps {\n  userType: UserRoles;\n  closeModal?: () => void;\n  setUser?: (user: UserInterface) => void;\n  user?: UserInterface;\n  updateDisplableUser?: (user: UserInterface) => void;\n}\n\nconst UserCreationForm: React.FC<UserCreationProps> = ({ userType, closeModal, setUser, user, updateDisplableUser }: UserCreationProps): JSX.Element => {\n\n  const [state, dispatch] = useReducer(userCreationFormReducer, initialState);\n  const context = useContext(AppContext);\n  const textRef = React.createRef<HTMLInputElement>();\n  const passwordRef = React.createRef<HTMLInputElement>();\n\n  useEffect(() => {\n    if (user) {\n      dispatch({ type: UserCreationFormActionTypes.SETUSERNAME, payLoad: user.username });\n    }\n  }, []);\n\n  const args: Arguments = {\n    state,\n    textRef,\n    passwordRef,\n    dispatch,\n    userType,\n    closeModal,\n    setUser,\n    context,\n    user,\n    updateDisplableUser\n  }\n\n  useEffect(() => {\n    if (textRef.current) {\n      textRef.current.focus();\n    }\n  }, []);\n\n  const handleUserInputChange = (event: FormEvent<HTMLInputElement>) => {\n    handleInputChangeFn(state, dispatch, event);\n  }\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    handleFormSubmitFunction(args);\n  }\n\n  const handleClick = (event: React.MouseEvent<HTMLFormElement>) => {\n    event.stopPropagation();\n  }\n\n  return (\n    <StyledForm onSubmit={handleFormSubmit} onClick={handleClick}>\n      <div className=\"heading\">{user ? \"Update\" : \"Create\"} {userType}<FaUserAlt /></div>\n      <div>\n        <input type=\"text\" placeholder=\"Username\" onChange={handleUserInputChange} value={state.username} ref={textRef} />\n      </div>\n      <div>\n        <input type=\"password\" placeholder=\"password\" onChange={handleUserInputChange} value={state.password} ref={passwordRef} />\n      </div>\n      <button disabled={state.invalidLoginInfoStatus}>\n        <span id=\"left\">{user ? \"Update\" : \"Create\"}</span>\n        {state.isLoading && <Spinner />}\n      </button>\n      <div className={`${state.success ? 'textMessage green' : 'textMessage'}`}>{state.message}</div>\n    </StyledForm>\n  )\n}\n\nexport default UserCreationForm;","import styled from \"styled-components\";\n\nexport default styled.div`\n  background: rgba(0,0,0,.7);\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: 0;\n  z-index: 100000;\n\n  \n\n  &>* {\n\n    @keyframes fall {\n      from {top: -100%;}\n      to {top: 0%;}\n    }\n\n    position: relative;\n    background: #fff;\n    padding: 2em;\n    animation-name: fall;\n    animation-duration: .5s;\n    animation-timing-function: ease-in;\n\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ModalContainer from './Modal.style';\n\ninterface ModalProps {\n  modalVisibility: boolean;\n  resetModalVisibility: () => void;\n}\n\nexport const Modal: React.FC<ModalProps> = ({ modalVisibility, resetModalVisibility, children }): JSX.Element => {\n  if (modalVisibility) {\n    return (\n      ReactDOM.createPortal(\n        <ModalContainer onClick={(event: React.MouseEvent<HTMLDivElement>) => {\n          event.stopPropagation();\n          resetModalVisibility();\n        }}>\n          {children}\n        </ModalContainer>\n        , document.getElementById('portal') as HTMLElement)\n    );\n  } else {\n    return <></>;\n  }\n}\n\nexport default Modal;","import styled from \"styled-components\";\nimport colors from \"../../Constants/colors\";\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 1em .5em 1em .5em;\n  width: 80vw;\n  @media (min-width: 800px) {\n    width: 30vw;\n  }\n\n  header {\n    font-weight: bold;\n    color: ${colors.lightBlack};\n    border-bottom: 2px solid ${colors.blue};\n    width: 100%;\n    padding: 0 0 .2em 0;\n    font-size: 1.3em;\n    margin-bottom: .2em;\n  }\n\n  article {\n    color: ${colors.darkBlack};\n    padding: .5em 0;\n  }\n  section {\n    margin-top: .3em;\n    align-self: flex-end;\n    display: flex;\n\n    button#confirmButton {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      * {\n        margin: 0 .5em;\n      }\n    }\n\n    button {\n      display: block;\n      margin:0 .5em;\n      background: ${colors.lightBlack};\n      border: 0;\n      padding: .5em;\n      color: white;\n      cursor: pointer;\n\n      &:hover {\n        background: ${colors.blue};\n      }\n    }\n  }\n\n  div {\n    height: .5em;\n    color: red;\n    border-top: 2px solid ${colors.blue};\n    width: 100%;\n    margin-top: 1em;\n    font-size: .8em;\n    padding-top: .5em;\n  }\n`;\n\nexport default Wrapper;","import React, { useState } from 'react'\nimport Spinner from '../Spinner/Spinner';\nimport Wrapper from './Dialog.style';\n\ninterface ConfirmationParameters {\n  title: string;\n  body: string;\n  onConfirm: (setLoading: (status: boolean) => void, setMessage: (message: string) => void) => void;\n  onReject: () => void;\n}\n\nconst ConfirmationDialog: React.FC<ConfirmationParameters> = (params: ConfirmationParameters) => {\n\n  const [actionMessage, setActionMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleWrapperClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation();\n  }\n\n  const onConfirmArg1Fn = (status: boolean) => {\n    setIsLoading(status);\n  }\n\n  const onConfirmArg2Fn = (message: string) => {\n    setActionMessage(message);\n  }\n\n  return (\n    <Wrapper onClick={handleWrapperClick}>\n      <header>{params.title}</header>\n      <article>{params.body}</article>\n      <section>\n        <button id=\"confirmButton\" onClick={() => { params.onConfirm(onConfirmArg1Fn, onConfirmArg2Fn) }}>Confirm {isLoading && <Spinner />}</button>\n        <button onClick={params.onReject}>Cancel</button>\n      </section>\n      <div>{actionMessage}</div>\n    </Wrapper>\n  )\n}\n\nexport default ConfirmationDialog;\n","import styled from \"styled-components\";\nimport colors from \"../../Constants/colors\";\n\nconst StyledHeader = styled.header`\n  position: fixed;\n  width: 100%;\n  top: 0;\n  z-index: 1;\n  height: 3.5em;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${colors.lightBlack};\n\n  #userInfo{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    \n    span {\n      font-size: 1.5em;\n      color: ${colors.blue};\n      padding: 0 .5em 0 2em;\n    }\n  }\n\n  .logout {\n    font-size: 2em;\n    color: ${colors.lightBlack};\n    padding: 0 1.5em;\n    cursor: pointer;\n\n    &:hover{\n      color: ${colors.red};\n    }\n  }\n\n  @media(min-width: 800px) {\n    width: 60vw;\n    #userInfo span {\n      padding: 0 .5em 0 .5em;\n    }\n    .logout {\n      padding: 0 .4em;\n    }\n  }\n  @media(min-width: 1080px) {\n    width: 50vw;\n    #userInfo span {\n      padding: 0 .5em 0 .5em;\n    }\n    .logout {\n      padding: 0 .4em;\n    }\n  }\n\n`\n\nexport default StyledHeader;","import React, { useState } from 'react'\nimport { useContext } from 'react'\nimport AppContext from '../App/contextHelper'\nimport { BiUser } from 'react-icons/bi';\nimport { RiLogoutCircleLine } from 'react-icons/ri'\nimport Modal from '../Modal/Modal'\nimport ConfirmationDialog from '../Dialogs/ConfirmationDialog'\nimport StyledHeader from './Helper.style';\n\nconst Header = () => {\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const context = useContext(AppContext);\n\n  const logoutUser = (event: React.MouseEvent<HTMLDivElement>) => {\n    setModalVisibility(true);\n  };\n\n  const logoutConfirmationBody = \"Are you suer to logout?\";\n  const title = \"Logging Out\";\n  const onRejectFn = () => {\n    setModalVisibility(false);\n  };\n  const onConfirmationFn = (setIsLoading: (status: boolean) => void, setMessage: (message: string) => void) => {\n    setIsLoading(true);\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${context?.token}`\n      }\n    };\n\n    fetch('/users/logout', requestOptions).then(response => response.status).then(data => {\n      if (data === 200) {\n        context?.setLoggedInUser(null);\n        setModalVisibility(false);\n        document.cookie = \"token=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n        window.location.reload();\n      }\n    });\n\n  }\n\n  return (\n    <StyledHeader>\n      <div id=\"userInfo\">\n        <span><BiUser /></span>\n        {context?.loggedInUser?.username}, {context?.loggedInUser?.role}\n      </div>\n      <div className=\"logout\" onClick={logoutUser}>\n        <RiLogoutCircleLine />\n      </div>\n      <Modal modalVisibility={modalVisibility} resetModalVisibility={() => { setModalVisibility(false) }}>\n        <ConfirmationDialog body={logoutConfirmationBody} title={title} onConfirm={onConfirmationFn} onReject={onRejectFn} />\n      </Modal>\n    </StyledHeader>\n  )\n}\n\nexport default Header","import styled from \"styled-components\";\nimport colors from \"../../Constants/colors\";\n\nconst UserHolder = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\ncolor: ${colors.lightBlack};\nfont-size: 1.3em;\nfont-weight: bold;\nheight: 2.5em;\nbox-shadow: 3px 3px 3px #ccc;\npadding: 1.5em;\nmargin-bottom: 1em;\nwidth: 95%;\nbox-sizing: border-box;\n\n&:hover{\n  color: ${colors.blue};\n  cursor: pointer;\n}\n\nspan * {\n  margin-right: 1em;\n  transition: all .1s linear;\n}\n\nspan *:hover {\n  cursor: pointer;\n  transform: translate(0px, -1px);\n}\n\nspan .delete {\n  color: ${colors.red}\n}\n\n\nspan .edit{\n  color: ${colors.green};\n}\n`;\n\nexport default UserHolder;","import React from 'react';\nimport Wrapper from './Dialog.style';\n\ninterface AlertDialogInterface {\n  title: string;\n  body: JSX.Element;\n}\n\nconst handleWrapperClcik = (event: React.MouseEvent<HTMLElement>) => {\n  event.stopPropagation();\n}\n\nconst AlertDialog: React.FC<AlertDialogInterface> = (props: AlertDialogInterface): JSX.Element => {\n  return (\n    <Wrapper onClick={handleWrapperClcik}>\n      <header>{props.title}</header>\n      <article>{props.body}</article>\n      <section></section>\n      <div></div>\n    </Wrapper>\n  )\n}\n\nexport default AlertDialog\n","import React, { useContext, useState } from 'react'\nimport UserInterface from '../../Interfaces/UserInterface';\nimport { FaRegEdit } from 'react-icons/fa';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport UsersHolder from './UserContainer.style';\nimport Modal from '../Modal/Modal';\nimport UserCreationForm from '../UserCreationForm/UserCreationForm';\nimport UserRoles from '../../Constants/UserRoles';\nimport ConfirmationDialog from '../Dialogs/ConfirmationDialog';\nimport AppContext from '../App/contextHelper';\nimport AlertDialog from '../Dialogs/AlertDialog';\ninterface Arguments {\n  user: UserInterface;\n  updateDisplableUser: (user: UserInterface) => void;\n  deleteUserFromUI: (user: UserInterface) => void;\n}\n\nconst UserContainer: React.FC<Arguments> = (props: Arguments) => {\n  const [editTrueDeleteFalse, setEditTrueDeleteFalse] = useState(true);\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [showUser, setShowUser] = useState(false);\n  const context = useContext(AppContext);\n\n  const handleEditClick = (event: React.MouseEvent<SVGElement>) => {\n    event.stopPropagation();\n    setEditTrueDeleteFalse(true);\n    setModalVisibility(visibility => !visibility);\n  }\n\n  const handleDeleteClick = (event: React.MouseEvent<SVGElement>) => {\n    event.stopPropagation();\n    setEditTrueDeleteFalse(false);\n    setModalVisibility(visibility => !visibility);\n  }\n\n  const onRejectFn = () => {\n    setModalVisibility(false);\n  }\n\n  const onConfirmFn = (setIsLoading: (status: boolean) => void, setActionMessage: (message: string) => void) => {\n    setIsLoading(true);\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${context?.token}`\n      }\n    }\n    if (props.user.role === UserRoles.ADMIN) {\n      fetch(`users/admins/${props.user.id}`, requestOptions).then(response => response.status).then(status => {\n        if (status === 200) {\n          setIsLoading(false);\n          props.deleteUserFromUI(props.user);\n        } else {\n          setIsLoading(false);\n          setActionMessage(`Error Occured Status Code ${status}`)\n        }\n      }).catch(error => {\n        setActionMessage(error.toString());\n      });\n    } else {\n      fetch(`users/${props.user.id}`, requestOptions).then(response => response.status).then(status => {\n        if (status === 200) {\n          setIsLoading(false);\n          props.deleteUserFromUI(props.user);\n        } else {\n          setIsLoading(false);\n          setActionMessage(`Error Occured Status Code ${status}`)\n        }\n      }).catch(error => {\n        setActionMessage(error.toString());\n      });\n    }\n  }\n  const confirmationDialogBodyText = `Are you sure to delete user ${props.user.username}?`;\n\n  const showUserFn = () => {\n    setShowUser(true);\n    setModalVisibility(true);\n  }\n\n  const resetModalVisibilityFn = () => {\n    setModalVisibility(false);\n    setShowUser(false);\n  }\n\n  const userDisplayJSX: JSX.Element = (<>\n    <p>Username: {props.user.username}</p>\n    <p>Role: {props.user.role}</p>\n  </>);\n\n  return (\n    <UsersHolder onClick={showUserFn}>\n      {props.user.username}\n      <span><FaRegEdit className=\"edit\" onClick={handleEditClick} /><RiDeleteBin6Line className=\" delete\" onClick={handleDeleteClick} /></span>\n      <Modal resetModalVisibility={resetModalVisibilityFn} modalVisibility={modalVisibility}>\n        {showUser ? <AlertDialog title=\"User Information\" body={userDisplayJSX} /> :\n          editTrueDeleteFalse ?\n            <UserCreationForm userType={props.user.role as UserRoles} user={props.user} closeModal={() => { setModalVisibility(false) }} updateDisplableUser={props.updateDisplableUser} />\n            : <ConfirmationDialog title=\"User Confirmation\" body={confirmationDialogBodyText} onConfirm={onConfirmFn} onReject={onRejectFn} />\n        }\n      </Modal>\n    </UsersHolder>\n  )\n}\n\nexport default UserContainer\n","import styled from \"styled-components\";\nimport colors from \"../../Constants/colors\";\n\nconst UsersViwerWrapper = styled.section`\n  display: flex;\n  align-self: center;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  max-width: 700px;\n  padding: .5em;\n  height: 100%;\n\n  div.search {\n    margin-top: 1.5em;\n    color: ${colors.white};\n    background: ${colors.red};\n    display: flex;\n    font-size: 2em;\n    border-radius: 2em;\n    border: 0;\n    cursor: pointer;\n    align-self: flex-end;\n    transition: all .4s;\n    overflow: hidden;\n    justify-content: flex-end;\n    flex: 0 0 1.5em;\n\n    .search-icon {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex: 0 0 1.5em;\n    }\n\n\n    input {\n      border-radius: inherit;\n      background: ${colors.red};\n      color: ${colors.white};\n      border: 0;\n      outline: none;\n      width: 90%;\n      font-size: .7em;\n      padding-left: .5em;\n\n      &::placeholder {\n        font-family: Arial, sans-serif;\n        color: ${colors.lightBlack};\n      }\n    }\n  }\n\n  div.header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    position: sticky;\n    top: 0em;\n    background: ${colors.white};\n    padding: 1em;\n    box-sizing: border-box;\n    color: ${colors.blue};\n  }\n\n  div>span.icon {\n    font-size: 2em;\n    cursor: pointer;\n  }\n`;\n\nconst ListWrapper = styled.section`\n  width: 100%;\n  height: 90%;\n  padding: .5em;\n  overflow: auto;\n  scrollbar-color: ${colors.red} ${colors.white};\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  h3{\n    color: ${colors.blue};\n  }\n\n  &::-webkit-scrollbar {\n    width: 7px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${colors.red};\n    border-radius: 5px;\n  }\n\n  @media (min-width: 900px) {\n  }\n`;\n\nexport { ListWrapper, UsersViwerWrapper }","import React, { useState } from 'react'\nimport { FaSearch } from 'react-icons/fa';\n\nexport interface SearchProps {\n  handleSearchChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst SearchDiv: React.FC<SearchProps> = ({ handleSearchChange }: SearchProps): JSX.Element => {\n\n\n  const toggleSearchVIsible = (event: React.MouseEvent<HTMLElement> | React.FocusEvent<HTMLInputElement>) => {\n    event.stopPropagation();\n    setSearchVisible(visibility => !visibility);\n  }\n\n  const handleInputClick = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.stopPropagation();\n  }\n\n  const [searchVisible, setSearchVisible] = useState(false);\n  return (\n    <div className=\"search\" style={{ width: `${searchVisible ? \"100%\" : \"1.5em\"}` }} onClick={toggleSearchVIsible}>\n      <input type=\"search\" onClick={handleInputClick} placeholder=\"search username\" onChange={handleSearchChange} />\n      <span className=\"search-icon\" ><FaSearch /></span>\n    </div>\n  )\n}\n\nexport default SearchDiv;\n","import React from \"react\";\nimport UserRoles from \"../../Constants/UserRoles\";\nimport UserInterface from \"../../Interfaces/UserInterface\";\n\ninterface ReceivedDataFormat {\n  _userInfo: UserInterface;\n}\n\nexport const getAdmins =\n  (token: string, setUsers: React.Dispatch<React.SetStateAction<UserInterface[]>>, setDisplableUsers: React.Dispatch<React.SetStateAction<UserInterface[]>>) => {\n    const requestOptions = getRequestOptions(token);\n\n    fetch('/users/admins', requestOptions).then(response => response.json()).then(data => {\n      const admins = (data as ReceivedDataFormat[]).map(userInfoContainer => userInfoContainer._userInfo);\n      setUsers(admins.sort((a, b) => (b.id - a.id)));\n      setDisplableUsers(admins.sort((a, b) => (b.id - a.id)));\n    });\n  }\n\nexport const getUsers =\n  (token: string, setUsers: React.Dispatch<React.SetStateAction<UserInterface[]>>,\n    setDisplableUsers: React.Dispatch<React.SetStateAction<UserInterface[]>>,\n    userType: UserRoles) => {\n    const requestOptions = getRequestOptions(token);\n    fetch('/users', requestOptions).then(response => response.json()).then(data => {\n      let users = (data as ReceivedDataFormat[]).map(userInfoContainer => userInfoContainer._userInfo);\n      users = users.filter(user => user.role === userType);\n      setUsers(users.sort((a, b) => (b.id - a.id)));\n      setDisplableUsers(users.sort((a, b) => (b.id - a.id)));\n    });\n  }\n\nexport const getRequestOptions = (token: string) => {\n  return {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }\n}","import React, { useEffect, useState } from 'react';\nimport UserInterface from '../../Interfaces/UserInterface';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport UserCreationForm from '../UserCreationForm/UserCreationForm';\nimport Modal from '../Modal/Modal';\nimport UserRoles from '../../Constants/UserRoles';\nimport UserContainer from './UserContainer';\nimport { ListWrapper, UsersViwerWrapper } from './UserViwer.style';\nimport SearchDiv from './SearchDiv';\nimport { getAdmins, getUsers } from './helpers';\nimport { useContext } from 'react';\nimport AppContext from '../App/contextHelper';\nimport Spinner from '../Spinner/Spinner';\n\nexport interface UserViewProps {\n  userType: UserRoles;\n}\n\nconst UsersViwer: React.FC<UserViewProps> = ({ userType }: UserViewProps) => {\n  const [users, setUsers] = useState<UserInterface[]>([]);\n  const [displableUsers, setDisplableUsers] = useState<UserInterface[]>([]);\n  const [addUserVisibility, setAddUserVisibility] = useState(false);\n\n  const context = useContext(AppContext)\n  useEffect(() => {\n    if (userType === UserRoles.ADMIN) {\n      getAdmins(context ? context.token : '', setUsers, setDisplableUsers);\n    } else {\n      getUsers(context ? context.token : '', setUsers, setDisplableUsers, userType);\n    }\n  }, [context, userType]);\n\n  const handleAddClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAddUserVisibility(true);\n  }\n\n  const setUserFn = (user: UserInterface) => {\n    setUsers(users => [user, ...users]);\n    setDisplableUsers(users => [user, ...users]);\n  }\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDisplableUsers(users.filter(user => user.username.includes(event.currentTarget.value)));\n  }\n\n  const updateUser = (user: UserInterface) => {\n    setDisplableUsers(updateFn(user));\n    setUsers(updateFn(user));\n  }\n\n  const updateFn = (user: UserInterface) => {\n    return users.map(loopUser => {\n      if (user.id === loopUser.id) {\n        return user;\n      }\n      return loopUser;\n    });\n  }\n\n  const deleteUser = (user: UserInterface) => {\n    setUsers(users => users.filter(loopUser => user.id !== loopUser.id));\n    setDisplableUsers(users => users.filter(loopUser => user.id !== loopUser.id));\n  }\n\n  return (\n    <UsersViwerWrapper>\n      <div className=\"header\"><h2>{userType}s</h2> <span className=\"icon\" onClick={handleAddClick}><IoMdPersonAdd /></span></div>\n      {\n        users.length ?\n          <ListWrapper>\n            {users.length ? displableUsers.map(user =>\n              <UserContainer user={user} key={user.id} updateDisplableUser={updateUser} deleteUserFromUI={deleteUser} />) : \"\"}\n          </ListWrapper> :\n          <><Spinner /> <h3>No users to Show</h3></>\n      }\n      <Modal modalVisibility={addUserVisibility} resetModalVisibility={() => { setAddUserVisibility(false) }}>\n        <UserCreationForm userType={userType} closeModal={() => { setAddUserVisibility(false) }} setUser={setUserFn} />\n      </Modal>\n      <SearchDiv handleSearchChange={handleSearchChange} />\n    </UsersViwerWrapper>\n  )\n}\n\nexport default UsersViwer;\n","import React from 'react'\nimport styled from 'styled-components'\nimport colors from '../../Constants/colors';\n\nconst GridContainer = styled.section`\n\n  display: flex;\n  flex-direction: column;\n  height: 80%;\n  width: 100%;\n\n  @media (min-width: 600px) {\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: 3em 1fr;\n    grid-template-areas: \n              'sidebar header'\n              'sidebar content';\n   \n  }\n\n  .grid-header {\n    grid-area: header;\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n      \n      nav {\n        color: ${colors.darkBlack};\n        ul {\n          list-style-type: None;\n          display: flex;\n          justify-content: space-around;\n          width: 100%;\n\n          li.active{\n            color: ${colors.green};\n            font-weight: bold;\n\n            &:hover {\n              color: ${colors.green};\n              font-weight: bold;\n            }\n          }\n\n          li{\n            display: inline;\n            padding-right: 1.5em;\n            cursor: pointer;\n\n            &:hover {\n              color: ${colors.red};\n              font-weight: bold;\n\n              span {\n                color: ${colors.darkBlack};\n              }\n            }\n\n            span{\n              font-size: 1.5em;\n              text-align: center;\n            }\n          }\n        }\n      }\n    @media (min-width: 600px) {\n      justify-content: center;\n    }\n  }\n\n\n\n\n\n  .grid-sidebar {\n    align-items: flex-start;\n    justify-content: flex-start;\n    display: none;\n\n    @media (min-width: 600px){\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        color: ${colors.darkBlack};\n      }\n\n\n    ul {\n      margin: 0;\n      padding: 0;\n      list-style-type: none;\n      width: 100%;\n\n      li {\n        margin: 0;\n        padding: .5em;\n        box-sizing: border-box;\n        cursor: pointer;\n        \n        &:hover {\n          font-weight: bold;\n          color: ${colors.green};\n        }\n\n        span {\n          color: ${colors.darkBlack};\n          padding: .5em .3em;\n        }\n      }\n\n      li.active {\n        background: ${colors.lightBlack};\n        border-left: 5px solid ${colors.darkBlack};\n        color: ${colors.white};\n      }\n    }\n\n    @media (min-width: 600px) {\n      display: flex;\n      grid-area: sidebar;\n    }\n  }\n\n  .grid-content {\n    grid-area: content;\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    min-height: 70%;\n  }\n\n  @media (min-width: 800px) {\n    width: 60vw;\n  }\n  @media (min-width: 1080px) {\n    width: 50vw;\n  }\n`;\n\nconst DashboardLayout: React.FC = ({ children }) => {\n  return (\n    <GridContainer>\n      {children}\n    </GridContainer>\n  )\n}\n\nexport default DashboardLayout\n","import UserRoles from \"../Constants/UserRoles\";\nimport Token from \"./Token\";\n\nexport enum TokenStatus {\n  CALLAGAIN = \"CallAgain\",\n  BYPASS = \"ByPass\",\n  FORWARD = \" Forward\",\n  UNPROCESSED = \"Unprocessed\",\n  PROCESSED = \"Processed\",\n  ASSIGNED = \"Assigned\",\n  RANDOMPROCESSED = \"RandomlyProcessed\"\n}\n\nexport interface UserData {\n  id: number;\n  username: string;\n  role: UserRoles;\n  password: string;\n  counter?: string;\n}\n\nexport interface TokenProcessing {\n  _operator: { _userInfo: UserData };\n  _status: TokenStatus;\n  _timeStamp: Date;\n}\n\ninterface TokenBase {\n  _currentStatus: TokenStatus;\n  tokenProcessingInfo: TokenProcessing[];\n  _token: Token;\n}\n\nexport default TokenBase;","import React, { useEffect, useState } from 'react'\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport colors from '../../../../../Constants/colors';\nimport CateogryInterface from '../../../../../Interfaces/CategoryInterface';\nimport AppContext from '../../../../App/contextHelper';\nimport { AdminContext } from '../../ContextHelper';\n\nconst StyledForm = styled.form`\n  select {\n    padding: .3em;\n    margin: .3em;\n    border :none;\n    border-bottom: 2px solid ${colors.blue};\n    color: ${colors.darkBlack};\n    outline: none;\n\n    &:hover{\n      cursor: pointer;\n    }\n  }\n\n  button {\n    padding: .3em;\n    margin: .3em;\n    background: ${colors.lightBlack};\n    border: none;\n    cursor: pointer;\n    color: ${colors.white};\n\n    &:hover {\n      cursor: pointer;\n      background: ${colors.blue};\n    }\n  }\n`;\n\ninterface PropsInterface {\n  closeForm: () => void\n}\n\nconst CategorySelectionForm: React.FC<PropsInterface> = ({ closeForm }) => {\n  const adminContext = useContext(AdminContext);\n  const appContext = useContext(AppContext);\n\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [allCategories, setAllCategories] = useState<CateogryInterface[]>([{\n    category: '',\n    categoryName: 'None',\n    currentTokenCount: 0,\n    latestCustomerTokenCount: 0\n  }]);\n\n  useEffect(() => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n    fetch('tokenbase/getalltokencategories', requestOptions).then(response => response.json()).then(data => {\n      setAllCategories(categories => [...categories, ...data as CateogryInterface[]]);\n    });\n\n  }, [appContext]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    adminContext.setTokenFetchURL(`tokenbase/filterbycategory/${selectedCategory}`);\n    closeForm();\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedCategory(event.currentTarget.value);\n  }\n\n  return (\n    <StyledForm onSubmit={handleSubmit} onClick={(event) => { event.stopPropagation() }}>\n      <select onChange={handleChange}>\n        {allCategories.map(categoryInteface => {\n          return <option value={categoryInteface.category} key={categoryInteface.category}>\n            {categoryInteface.category}-{categoryInteface.categoryName}\n          </option>\n        })}\n      </select>\n      <button>Filter</button>\n    </StyledForm>\n  )\n}\n\nexport default CategorySelectionForm\n","import React, { useState } from 'react';\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport colors from '../../../../../Constants/colors';\nimport { AdminContext } from '../../ContextHelper';\n\nconst StyledForm = styled.form`\n  input {\n    padding: .3em;\n    margin: .3em;\n    border: none;\n    border-bottom: 2px solid ${colors.blue};\n    color: ${colors.darkBlack};\n    outline: none;\n    cursor: pointer;\n  }\n\n  button {\n    padding: .3em;\n    margin: .3em;\n    background: ${colors.lightBlack};\n    color: ${colors.white};\n    border: none;\n    cursor: pointer;\n\n    &:hover{\n      background: ${colors.blue};\n    }\n  }\n`;\n\ninterface DateSelectionFormInterface {\n  closeForm: () => void;\n}\n\nconst DateSelectionForm: React.FC<DateSelectionFormInterface> = ({ closeForm }) => {\n  const [selectedDate, setSelectedDate] = useState('');\n\n  const adminContext = useContext(AdminContext);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const stringDate = new Date(selectedDate).toString();\n    adminContext.setTokenFetchURL(`tokenbase/filterbydate/${stringDate}`);\n    closeForm();\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedDate(event.currentTarget.value)\n  }\n  return (\n    <StyledForm onSubmit={handleSubmit} onClick={(event) => event.stopPropagation()}>\n      Select Date :  <input type=\"date\" onChange={handleChange} />\n      <button>Submit</button>\n    </StyledForm>\n  )\n}\n\nexport default DateSelectionForm;\n","import React, { useState } from 'react'\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport colors from '../../../../../Constants/colors';\nimport { TokenStatus } from '../../../../../Interfaces/TokenBase';\nimport { AdminContext } from '../../ContextHelper';\n\nconst StyledForm = styled.form`\n  select {\n    padding: .3em;\n    margin: .3em;\n    border :none;\n    border-bottom: 2px solid ${colors.blue};\n    color: ${colors.darkBlack};\n    outline: none;\n\n    &:hover{\n      cursor: pointer;\n    }\n  }\n\n  button {\n    padding: .3em;\n    margin: .3em;\n    background: ${colors.lightBlack};\n    border: none;\n    cursor: pointer;\n    color: ${colors.white};\n\n    &:hover {\n      cursor: pointer;\n      background: ${colors.blue};\n    }\n  }\n`;\n\ninterface PropsInterface {\n  closeForm: () => void\n}\n\nconst StatusSelectionForm: React.FC<PropsInterface> = ({ closeForm }) => {\n  const adminContext = useContext(AdminContext);\n  const [selectedStatus, setSelectedStatus] = useState(TokenStatus.ASSIGNED);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    adminContext.setTokenFetchURL(`tokenbase/filterbystatus/${selectedStatus}`);\n    closeForm();\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedStatus(event.currentTarget.value as TokenStatus);\n  }\n\n  return (\n    <StyledForm onSubmit={handleSubmit} onClick={(event) => { event.stopPropagation() }}>\n      <select onChange={handleChange}>\n        <option value={TokenStatus.ASSIGNED}>{TokenStatus.ASSIGNED}</option>\n        <option value={TokenStatus.BYPASS}>{TokenStatus.BYPASS}</option>\n        <option value={TokenStatus.CALLAGAIN}>{TokenStatus.CALLAGAIN}</option>\n        <option value={TokenStatus.FORWARD}>{TokenStatus.FORWARD}</option>\n        <option value={TokenStatus.PROCESSED}>{TokenStatus.PROCESSED}</option>\n        <option value={TokenStatus.RANDOMPROCESSED}>{TokenStatus.RANDOMPROCESSED}</option>\n        <option value={TokenStatus.UNPROCESSED}>{TokenStatus.UNPROCESSED}</option>\n      </select>\n      <button>Filter</button>\n    </StyledForm>\n  )\n}\n\nexport default StatusSelectionForm;\n","import React, { useState } from 'react';\nimport { RiFilter2Line } from 'react-icons/ri';\nimport styled from 'styled-components';\nimport colors from '../../../../Constants/colors';\nimport { AdminContext } from '../ContextHelper';\nimport { useContext } from 'react';\nimport { BiEraser } from 'react-icons/bi';\nimport Modal from '../../../Modal/Modal';\nimport CategorySelectionForm from '../Contents/TokenBaseContentHelpers/CategorySelectionForm';\nimport DateSelectionForm from '../Contents/TokenBaseContentHelpers/DateSelectionForm';\nimport StatusSelectionForm from '../Contents/TokenBaseContentHelpers/StatusSelectionForm';\nimport StatusAndDateSelectionForm from '../Contents/TokenBaseContentHelpers/StatusAndDateSelectionForm';\nimport ConfirmationDialog from '../../../Dialogs/ConfirmationDialog';\nimport AppContext from '../../../App/contextHelper';\n\nconst StyledSelect = styled.select`\n  border: 0;\n  background: ${colors.white};\n  color: ${colors.darkBlack};\n  font-size: .9em;\n  outline: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst IconContainer = styled.div`\n  display: inline-block;\n  font-size: 1.1em;\n`;\n\nconst EraserDiv = styled.div`\n  font-size: 1.7em;\n  color: ${colors.red};\n  width: fit-content;\n  transition: all .2s;\n  &:hover{\n    transform: scale(1.1);\n  }\n`;\n\nconst StyledListItem = styled.li`\n  border-bottom: 2px solid ${colors.blue};\n  height: fit-content;\n  width: fit-content;\n  padding: 0 !important;\n  \n  button{\n    border: none;\n    background: ${colors.lightBlack};\n    color: ${colors.white};\n    padding: .3em;\n\n    &: hover {\n      background: ${colors.blue};\n      cursor: pointer;\n    }\n  }\n`;\n\nenum TokenFilterCategories {\n  SHOWALL = \"Show All\",\n  STATUS = \"Status\",\n  STATUSANDDATE = \"Status & Date\",\n  DATE = \"Date\",\n  UNCATEGORIZED = \"Uncategorized\",\n  CATEGORY = \"Category\",\n}\n\nconst TokenBaseHeader = () => {\n  const adminContext = useContext(AdminContext);\n  const appContext = useContext(AppContext);\n\n  const [categoryModalVisibility, setCategoryModalVisibility] = useState(false);\n  const [dateModalVisibility, setDateModalVisibility] = useState(false);\n  const [statusModalVisibility, setStatusModalVisibility] = useState(false);\n  const [statusAndDateModalVisibility, setStatusAndDateModalVisibility] = useState(false);\n  const [filterOption, setFilterOption] = useState(TokenFilterCategories.SHOWALL);\n  const [eraserModal, setEraserModalVisible] = useState(false);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterOption(event.currentTarget.value as TokenFilterCategories);\n  }\n\n  const handleButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (filterOption === TokenFilterCategories.CATEGORY)\n      setCategoryModalVisibility(true);\n    else if (filterOption === TokenFilterCategories.DATE)\n      setDateModalVisibility(true);\n    else if (filterOption === TokenFilterCategories.SHOWALL)\n      adminContext.setTokenFetchURL('/tokenbase');\n    else if (filterOption === TokenFilterCategories.STATUS)\n      setStatusModalVisibility(true);\n    else if (filterOption === TokenFilterCategories.STATUSANDDATE)\n      setStatusAndDateModalVisibility(true);\n    else if (filterOption === TokenFilterCategories.UNCATEGORIZED)\n      adminContext.setTokenFetchURL('/tokenbase/filterbycategory');\n  }\n\n  const deleteAllTokenBases = (setLoading: (status: boolean) => void, setMessage: (message: string) => void) => {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n\n    setLoading(true);\n    fetch('/tokenbase', requestOptions).then(response => response.status).then(status => {\n      if (status === 200) {\n        setEraserModalVisible(false);\n        adminContext.setTokenFetchURL('/');\n        adminContext.setTokenFetchURL('/tokenbase');\n      } else {\n        setMessage(`Deletion Failed with status code ${status}`);\n      }\n    });\n  }\n\n  const handleEraserClick = (event: React.MouseEvent<HTMLOrSVGElement>) => {\n    setEraserModalVisible(true);\n  }\n\n  return (\n    <nav>\n      <ul>\n        <StyledListItem>\n          <IconContainer>\n            <RiFilter2Line />\n          </IconContainer>\n          <StyledSelect onChange={handleChange}>\n            <option value={TokenFilterCategories.SHOWALL}>{TokenFilterCategories.SHOWALL}</option>\n            <option value={TokenFilterCategories.DATE}>{TokenFilterCategories.DATE}</option>\n            <option value={TokenFilterCategories.CATEGORY}>{TokenFilterCategories.CATEGORY}</option>\n            <option value={TokenFilterCategories.STATUS}>{TokenFilterCategories.STATUS}</option>\n            <option value={TokenFilterCategories.STATUSANDDATE}>{TokenFilterCategories.STATUSANDDATE}</option>\n            <option value={TokenFilterCategories.UNCATEGORIZED}>{TokenFilterCategories.UNCATEGORIZED}</option>\n          </StyledSelect>\n          <button onClick={handleButtonClick}>Filter</button>\n        </StyledListItem>\n        <li>\n          <EraserDiv>\n            <BiEraser onClick={handleEraserClick} />\n          </EraserDiv>\n        </li>\n      </ul>\n      <Modal modalVisibility={categoryModalVisibility} resetModalVisibility={() => { setCategoryModalVisibility(false) }}>\n        <CategorySelectionForm closeForm={() => { setCategoryModalVisibility(false) }} />\n      </Modal>\n      <Modal modalVisibility={dateModalVisibility} resetModalVisibility={() => { setDateModalVisibility(false) }}>\n        <DateSelectionForm closeForm={() => { setDateModalVisibility(false) }} />\n      </Modal>\n      <Modal modalVisibility={statusModalVisibility} resetModalVisibility={() => { setStatusModalVisibility(false) }}>\n        <StatusSelectionForm closeForm={() => { setStatusModalVisibility(false) }} />\n      </Modal>\n      <Modal modalVisibility={statusAndDateModalVisibility} resetModalVisibility={() => { setStatusAndDateModalVisibility(false) }}>\n        <StatusAndDateSelectionForm closeForm={() => { setStatusAndDateModalVisibility(false) }} />\n      </Modal>\n      <Modal modalVisibility={eraserModal} resetModalVisibility={() => { setEraserModalVisible(false) }}>\n        <ConfirmationDialog body={\"This will delete all the tokens from storage\"} title={\"Confirm Delete?\"}\n          onConfirm={deleteAllTokenBases} onReject={() => setEraserModalVisible(false)} />\n      </Modal>\n    </nav>\n  )\n}\n\nexport default TokenBaseHeader;","import React, { useState } from 'react'\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport colors from '../../../../../Constants/colors';\nimport { TokenStatus } from '../../../../../Interfaces/TokenBase';\nimport { AdminContext } from '../../ContextHelper';\n\nconst StyledForm = styled.form`\n\n  fieldset {\n    border: 2px solid ${colors.lightBlack};\n\n    legend {\n      font-size: .8em;\n      color: ${colors.green};\n    }\n  }\n  select {\n    padding: .3em;\n    margin: .3em;\n    border :none;\n    border-bottom: 2px solid ${colors.blue};\n    color: ${colors.darkBlack};\n    outline: none;\n\n    &:hover{\n      cursor: pointer;\n    }\n  }\n\n  input {\n    padding: .3em;\n    margin: .3em;\n    border: none;\n    border-bottom: 2px solid ${colors.blue};\n    color: ${colors.darkBlack};\n    outline: none;\n    cursor: pointer;\n  }\n\n  button {\n    padding: .3em;\n    margin: .3em;\n    background: ${colors.lightBlack};\n    border: none;\n    cursor: pointer;\n    color: ${colors.white};\n\n    &:hover {\n      cursor: pointer;\n      background: ${colors.blue};\n    }\n  }\n`;\n\ninterface PropsInterface {\n  closeForm: () => void\n}\n\nconst StatusAndDateSelectionForm: React.FC<PropsInterface> = ({ closeForm }) => {\n  const adminContext = useContext(AdminContext);\n  const [selectedStatus, setSelectedStatus] = useState(TokenStatus.ASSIGNED);\n  const [selectedDate, setSelectedDate] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    adminContext.setTokenFetchURL(`tokenbase/filterbystatusanddate/${selectedStatus}/${selectedDate}`);\n    closeForm();\n  }\n\n  const handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedStatus(event.currentTarget.value as TokenStatus);\n  }\n\n  const handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedDate(event.currentTarget.value);\n  }\n\n  return (\n    <StyledForm onSubmit={handleSubmit} onClick={(event) => { event.stopPropagation() }}>\n      <fieldset>\n        <legend>Status</legend>\n        <select onChange={handleStatusChange}>\n          <option value={TokenStatus.ASSIGNED}>{TokenStatus.ASSIGNED}</option>\n          <option value={TokenStatus.BYPASS}>{TokenStatus.BYPASS}</option>\n          <option value={TokenStatus.CALLAGAIN}>{TokenStatus.CALLAGAIN}</option>\n          <option value={TokenStatus.FORWARD}>{TokenStatus.FORWARD}</option>\n          <option value={TokenStatus.PROCESSED}>{TokenStatus.PROCESSED}</option>\n          <option value={TokenStatus.RANDOMPROCESSED}>{TokenStatus.RANDOMPROCESSED}</option>\n          <option value={TokenStatus.UNPROCESSED}>{TokenStatus.UNPROCESSED}</option>\n        </select>\n      </fieldset>\n      <fieldset>\n        <legend>Date</legend>\n        <input type=\"date\" onChange={handleDateChange} />\n      </fieldset>\n      <button>Filter</button>\n    </StyledForm>\n  )\n}\n\nexport default StatusAndDateSelectionForm;\n","import React, { useEffect, useState } from 'react'\nimport PluginConfigElement from './PluginConfigElement'\n\nenum ConfigTypes {\n  TEXT = \"text\",\n  NUMBER = \"number\",\n  RADIO = \"radio\",\n  SELECT = \"select\",\n  CHECKBOX = \"checkbox\"\n}\n\ninterface ConfigArgs {\n  pluginConfigElement: PluginConfigElement\n}\n\nconst ConfigToElementToMapper: React.FC<ConfigArgs> = (configArgs: ConfigArgs) => {\n  return (\n    <>\n      {getElementFromConfigObject(configArgs.pluginConfigElement)}\n    </>\n  )\n}\n\nconst getElementFromConfigObject = (pluginConfigElement: PluginConfigElement): JSX.Element => {\n  let Jsx: JSX.Element = <></>;\n  if (pluginConfigElement.configType === ConfigTypes.TEXT) {\n    Jsx = <GetElementForConfigTypeTextOrNumber {...pluginConfigElement} />\n  } else if (pluginConfigElement.configType === ConfigTypes.NUMBER) {\n    Jsx = <GetElementForConfigTypeTextOrNumber {...pluginConfigElement} />\n  } else if (pluginConfigElement.configType === ConfigTypes.RADIO) {\n    Jsx = <GetElementForConfigTypeRadio {...pluginConfigElement} />\n  } else if (pluginConfigElement.configType === ConfigTypes.SELECT) {\n    Jsx = <GetElementForConfigTypeSelect {...pluginConfigElement} />;\n  } else if (pluginConfigElement.configType === ConfigTypes.CHECKBOX) {\n    Jsx = <GetElementForConfigTypeCheckbox {...pluginConfigElement} />\n  }\n\n  return Jsx;\n}\n\nconst GetElementForConfigTypeTextOrNumber: React.FC<PluginConfigElement> = (pluginConfigElement: PluginConfigElement): JSX.Element => {\n  return (\n    <span>\n      {pluginConfigElement.name} : <input type={pluginConfigElement.configType} name={pluginConfigElement.name} defaultValue={pluginConfigElement.value} />\n    </span>\n  );\n}\n\nconst GetElementForConfigTypeRadio: React.FC<PluginConfigElement> = (pluginConfigElement: PluginConfigElement): JSX.Element => {\n  const typeOfValue = typeof pluginConfigElement.value;\n  const radioButtonCollections = pluginConfigElement.choiceOptions?.map((choiceOption, index) => {\n    return (\n      <span key={index}>\n        <input type={pluginConfigElement.configType} value={choiceOption} name={pluginConfigElement.name}\n          defaultChecked={(typeOfValue === \"string\") ? ((pluginConfigElement.value === choiceOption) ? true : false) : false} /> {choiceOption}\n      </span>\n    )\n  });\n  return (\n    <span>\n      {pluginConfigElement.name} : {radioButtonCollections}\n    </span>\n  );\n}\n\nconst GetElementForConfigTypeSelect: React.FC<PluginConfigElement> = (pluginConfigElement: PluginConfigElement): JSX.Element => {\n  const [defaultValue, setDefaultValue] = useState('');\n\n  useEffect(() => {\n    setDefaultValue(pluginConfigElement.value as string);\n  }, []);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setDefaultValue(event.currentTarget.value);\n  }\n  const optionCollections = pluginConfigElement.choiceOptions?.map((choiceOption, index) => {\n    return (\n      <option value={choiceOption} key={index}>\n        {choiceOption}\n      </option>\n    );\n  });\n  return (<>\n    <span>\n      {pluginConfigElement.name} : <select name={pluginConfigElement.name} value={defaultValue} onChange={handleChange}>\n        {optionCollections}\n      </select>\n    </span>\n  </>);\n}\n\nconst GetElementForConfigTypeCheckbox: React.FC<PluginConfigElement> = (pluginConfigElement: PluginConfigElement): JSX.Element => {\n  const typeOfValue = typeof pluginConfigElement.value;\n  const values = pluginConfigElement.value as string[];\n  const radioButtonCollections = pluginConfigElement.choiceOptions?.map((choiceOption, index) => {\n    return (\n      <span key={index}>\n        <input type={pluginConfigElement.configType} value={choiceOption} name={pluginConfigElement.name}\n          defaultChecked={(typeOfValue !== \"string\") ? ((values.find(value => value === choiceOption)) ? true : false) : false} /> {choiceOption}\n      </span>\n    )\n  });\n  return (\n    <span>\n      {pluginConfigElement.name} : {radioButtonCollections?.map(radioButton => radioButton)}\n    </span>\n  );\n}\n\nexport default ConfigToElementToMapper\n","import React, { useEffect } from 'react'\nimport { FaUserEdit } from 'react-icons/fa';\nimport { ImUserTie } from 'react-icons/im';\nimport { AdminContext, HeaderCategories } from '../ContextHelper';\nimport { useContext } from 'react';\n\nconst UsersHeader = () => {\n  const adminContext = useContext(AdminContext);\n\n  useEffect(() => {\n    adminContext.setHeaderCategory(HeaderCategories.OPERATORS);\n  }, []);\n\n  const handleHeaderIconClcik = (headerCategory: HeaderCategories) => {\n    if (headerCategory === HeaderCategories.OPERATORS) {\n      adminContext.setHeaderCategory(headerCategory);\n    } else if (headerCategory === HeaderCategories.REGISTRATORS) {\n      adminContext.setHeaderCategory(headerCategory);\n    }\n  }\n\n  return (\n    <nav>\n      <ul>\n        <li className={adminContext.headerCategory === HeaderCategories.OPERATORS ? \"active\" : \"\"} onClick={() => { handleHeaderIconClcik(HeaderCategories.OPERATORS) }}>\n          <span>\n            <ImUserTie />\n          </span> Operators\n        </li>\n        <li className={adminContext.headerCategory === HeaderCategories.REGISTRATORS ? \"active\" : \"\"} onClick={() => { handleHeaderIconClcik(HeaderCategories.REGISTRATORS) }}>\n          <span >\n            <FaUserEdit />\n          </span> Registrators\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default UsersHeader;\n","import React, { useContext } from 'react';\nimport { ImUserTie } from 'react-icons/im';\nimport { FaUserEdit } from 'react-icons/fa';\nimport { AdminContext, HeaderCategories } from '../ContextHelper';\n\n\nconst CustomersHeader = () => {\n  const adminContext = useContext(AdminContext);\n\n  const handleHeaderIconClcik = (category: HeaderCategories) => {\n    adminContext.setHeaderCategory(category);\n  }\n\n\n  return (\n    <nav>\n      <ul>\n        <li className={adminContext.headerCategory === HeaderCategories.TODAYSCUSTOMERS ? \"active\" : \"\"} onClick={() => { handleHeaderIconClcik(HeaderCategories.TODAYSCUSTOMERS) }}>\n          <span >\n            <FaUserEdit />\n          </span> Today's Customers\n        </li>\n        <li className={adminContext.headerCategory === HeaderCategories.ALLCUSTOMERS ? \"active\" : \"\"} onClick={() => { handleHeaderIconClcik(HeaderCategories.ALLCUSTOMERS) }}>\n          <span>\n            <ImUserTie />\n          </span> All Customers\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default CustomersHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport colors from '../../../../Constants/colors'\n\nconst StyledH2 = styled.h2`\n  color: ${colors.blue};\n  font-size: 1.3em;\n  padding-left: 1em;\n`\n\nconst HomeHeader = () => {\n  return (\n    <StyledH2>Today's Statistics</StyledH2>\n  )\n}\n\nexport default HomeHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport colors from '../../../../Constants/colors';\nimport {\n  TiWarningOutline\n} from 'react-icons/ti';\nconst StyledHeading = styled.h2`\n  color: ${colors.red};\n  font-size: 1.1em;\n  font-weight: normal;\n\n  .warning {\n    vertical-align: bottom;\n    font-size: 2em;\n  }\n`;\n\nconst TokenCountHeader = () => {\n  return (\n    <StyledHeading><TiWarningOutline className=\"warning\" /> Caution! Use Setting Functionalities Carefully</StyledHeading>\n  )\n}\n\nexport default TokenCountHeader\n","import React, { useState, useContext, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport colors from '../../../../Constants/colors';\nimport Modal from '../../../Modal/Modal';\nimport { FaFileArchive } from 'react-icons/fa';\nimport axios from 'axios';\nimport AppContext from '../../../App/contextHelper';\nimport { AdminContext } from '../ContextHelper';\n\nconst StyledDiv = styled.div`\n  color: ${colors.blue};\n  font-size: 2em;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  width: 100%;\n  box-sizing: border-box;\n  cursor: pointer;\n  margin-right: .5em;\n`;\n\nconst StyledSection = styled.section`\n  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2em;\n  min-width: 40%;\n\n  form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    article {\n      padding: 1em;\n      border-radius: 50%;\n      background: ${colors.lightBlack};\n      color: ${colors.darkBlack};\n      font-size: 2em;\n      cursor: pointer;\n    }\n  \n    button {\n      background: ${colors.blue};\n      color: ${colors.white};\n      border: none;\n      padding: .5em;\n      margin-top: 1em;\n      border-radius: .3em;\n    }\n\n    div {\n      margin-top: 1em;\n      font-family: Arial, sans-serif;\n      color: ${colors.green};\n    }\n\n    progress {\n      margin-top: 1em;\n    }\n\n    div {\n      font-family: Arial, sans-serif;\n      color: ${colors.green};\n    }\n\n    input[type=\"file\"] {\n      display: none;\n    }\n  }\n  `;\n\nconst PluginsHeader = () => {\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [selectedFile, setSelectedFile] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [progress, setProgress] = useState(0);\n\n  const context = useContext(AppContext);\n  const adminContext = useContext(AdminContext);\n\n  const fileInputRef = React.createRef<HTMLInputElement>();\n\n  const axiosInstance = axios.create({\n    baseURL: '/plugins'\n  });\n\n  const handleAddClick = () => {\n    setModalVisibility(true);\n  }\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const filesCollection = fileInputRef.current?.files;\n    if (filesCollection) {\n      const firstFile = filesCollection[0];\n      setSelectedFile(firstFile.name);\n      setProgress(0);\n      setSuccessMessage('');\n    }\n  }\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const filesCollection = fileInputRef.current?.files;\n    if (filesCollection) {\n      const firstFile = filesCollection[0];\n      if (firstFile && (firstFile.type === \"application/x-zip-compressed\" || firstFile.type === \"application/zip\")) {\n        const formData = new FormData();\n        formData.append('pluginZip', firstFile);\n        axiosInstance.post(\"/installFromArchive\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            \"Authorization\": `Bearer ${context?.token}`\n          },\n          onUploadProgress: data => {\n            setProgress(Math.round((100 * data.loaded) / data.total));\n          }\n        }).then(response => {\n          if (response.status === 200) {\n            setSuccessMessage(\"Plugin Uploaded Successfully\");\n            adminContext.setReloadEnhancer();\n          }\n        });\n      } else {\n        setSelectedFile(\"Please Select a Zip file\");\n      }\n    }\n  }\n\n  const resetModalVisibility = () => {\n    setModalVisibility(false);\n    setSelectedFile('');\n    setSuccessMessage('');\n    setProgress(0);\n  }\n\n\n  return (\n    <StyledDiv onClick={handleAddClick}>\n      <IoIosAddCircle />\n      <Modal modalVisibility={modalVisibility} resetModalVisibility={resetModalVisibility}>\n        <StyledSection onClick={(event) => event.stopPropagation()}>\n          <form onSubmit={handleFormSubmit}>\n            <label>\n              <article>\n                <FaFileArchive />\n              </article>\n              <input type=\"file\" ref={fileInputRef} onChange={handleFileChange} />\n            </label>\n            <div>\n              {selectedFile}\n            </div>\n            <button>Upload</button>\n            {progress !== 0 && <progress max=\"100\" value={progress}></progress>}\n            <div>\n              {successMessage}\n            </div>\n          </form>\n        </StyledSection>\n      </Modal>\n    </StyledDiv>\n  )\n}\n\nexport default PluginsHeader;\n","import React, { useContext, useEffect } from 'react'\nimport { useState } from 'react';\nimport { AdminContext, Categories } from '../ContextHelper';\nimport TokenBaseHeader from '../Headers/TokenBaseHeader';\nimport UsersHeader from '../Headers/UsersHeader';\nimport { TiThMenu } from 'react-icons/ti';\nimport styled from 'styled-components';\nimport colors from '../../../../Constants/colors';\nimport { FaHome, FaRestroom, FaLayerGroup } from 'react-icons/fa';\nimport { ImUsers } from 'react-icons/im';\nimport { GoPerson } from 'react-icons/go';\nimport { GiMeepleGroup, GiCard7Clubs, GiPlug } from 'react-icons/gi';\nimport CustomersHeader from '../Headers/CustomersHeader';\nimport HomeHeader from '../Headers/HomeHeader';\nimport TokenCountHeader from '../Headers/TokenCountHeader';\nimport PluginsHeader from '../Headers/PluginsHeader';\n\nconst HamburgerHolder = styled.div`\n  font-size: 1.5em;\n  align-self: center;\n  color: ${colors.red};\n  cursor: pointer;\n\n  @media (min-width: 600px) {\n    display: none;\n  }\n\n  ul {\n    margin: 0;\n    padding: .6em 0;\n    list-style-type: none;\n    font-size: .7em;\n    position: absolute;\n    background: ${colors.white};\n    border: 1px solid ${colors.lightBlack};\n    width: 40%;\n    z-index: 100000;\n\n    li {\n      margin: 0;\n      padding: .5em;\n      box-sizing: border-box;\n      cursor: pointer;\n      color: ${colors.darkBlack};\n      \n      &:hover {\n        font-weight: bold;\n        color: ${colors.green};\n      }\n\n      span {\n        color: ${colors.darkBlack};\n        padding: .5em .3em;\n      }\n    }\n\n    li.active {\n      background: ${colors.lightBlack};\n      border-left: 5px solid ${colors.darkBlack};\n      color: ${colors.white};\n    }\n\n`;\n\nconst DashboardHeader = () => {\n\n  const adminContext = useContext(AdminContext);\n  const [header, setHeader] = useState(<></>);\n  const [activeAssign, setActiveAssign] = useState(Categories.HOME);\n  const [hamburgerExpand, setHamburgerExpand] = useState(false);\n\n  useEffect(() => {\n    setActiveAssign(adminContext.category ? adminContext.category : Categories.HOME);\n    setHamburgerExpand(false);\n    if (adminContext.category === Categories.USERS)\n      setHeader(<UsersHeader />);\n    else if (adminContext.category === Categories.TOKENBASES)\n      setHeader(<TokenBaseHeader />);\n    else if (adminContext.category === Categories.CUSTOMERS)\n      setHeader(<CustomersHeader />);\n    else if (adminContext.category === Categories.HOME)\n      setHeader(<HomeHeader />);\n    else if (adminContext.category === Categories.TOKENCOUNT)\n      setHeader(<TokenCountHeader />);\n    else if (adminContext.category === Categories.PLUGINMANAGEMENT) {\n      setHeader(<PluginsHeader />);\n    }\n    else\n      setHeader(<></>);\n  }, [adminContext]);\n\n  const handleClick = (category: Categories) => {\n    setActiveAssign(category);\n    adminContext.setCategory(category);\n  }\n\n  const toggleHamburgerExpand = () => {\n    setHamburgerExpand(hamburgerExpand => !hamburgerExpand);\n  }\n\n  return (\n    <section className=\"grid-header\">\n      <HamburgerHolder>\n        <TiThMenu onClick={toggleHamburgerExpand} />\n        {hamburgerExpand &&\n          <ul>\n            <li className={activeAssign === Categories.HOME ? 'active' : ''} onClick={() => handleClick(Categories.HOME)}>\n              <span><FaHome /></span> Home\n            </li>\n            <li className={activeAssign === Categories.USERS ? 'active' : ''} onClick={() => handleClick(Categories.USERS)}>\n              <span><ImUsers /></span>Users\n            </li>\n            <li className={activeAssign === Categories.CATEGORIES ? 'active' : ''} onClick={() => handleClick(Categories.CATEGORIES)}>\n              <span><GiMeepleGroup /></span>Categories\n            </li>\n            <li className={activeAssign === Categories.CUSTOMERS ? 'active' : ''} onClick={() => handleClick(Categories.CUSTOMERS)}>\n              <span><GoPerson /></span>Customers\n            </li>\n            <li className={activeAssign === Categories.TOKENBASES ? 'active' : ''} onClick={() => handleClick(Categories.TOKENBASES)}>\n              <span><FaLayerGroup /></span>Token Bases\n            </li>\n            <li className={activeAssign === Categories.COUNTERMANAGEMENT ? 'active' : ''} onClick={() => handleClick(Categories.COUNTERMANAGEMENT)}>\n              <span><FaRestroom /></span>Counters\n            </li>\n            <li className={adminContext.category === Categories.TOKENCOUNT ? 'active' : ''} onClick={() => { handleClick(Categories.TOKENCOUNT) }}>\n              <span><GiCard7Clubs /></span>TokenCount\n            </li>\n            <li className={adminContext.category === Categories.PLUGINMANAGEMENT ? 'active' : ''} onClick={() => { handleClick(Categories.PLUGINMANAGEMENT) }}>\n              <span><GiPlug /></span>Plugins\n            </li>\n          </ul>}\n      </HamburgerHolder>\n      {header}\n    </section>\n  )\n}\n\nexport default DashboardHeader;\n","import React, { useEffect } from 'react'\nimport { useState } from 'react';\nimport { FaHome, FaRestroom, FaLayerGroup } from 'react-icons/fa';\nimport { ImUsers } from 'react-icons/im';\nimport { GoPerson } from 'react-icons/go';\nimport { GiMeepleGroup, GiCard7Clubs } from 'react-icons/gi';\nimport { useContext } from 'react';\nimport { AdminContext, Categories } from '../ContextHelper';\nimport { GiPlug } from 'react-icons/gi';\n\n\n\nconst Sidebar = () => {\n  const adminContext = useContext(AdminContext);\n\n  const [activeAssign, setActiveAssign] = useState(Categories.HOME);\n\n  const handleClick = (category: Categories) => {\n    setActiveAssign(category);\n    adminContext.setCategory(category);\n  }\n\n  useEffect(() => {\n    adminContext.category ? setActiveAssign(adminContext.category) : setActiveAssign(Categories.HOME);\n  }, [adminContext]);\n\n  return (\n    <nav className=\"grid-sidebar\">\n      <ul>\n        <li className={activeAssign === Categories.HOME ? 'active' : ''} onClick={() => handleClick(Categories.HOME)}>\n          <span><FaHome /></span> Home\n        </li>\n        <li className={activeAssign === Categories.USERS ? 'active' : ''} onClick={() => handleClick(Categories.USERS)}>\n          <span><ImUsers /></span>Users\n        </li>\n        <li className={activeAssign === Categories.CATEGORIES ? 'active' : ''} onClick={() => handleClick(Categories.CATEGORIES)}>\n          <span><GiMeepleGroup /></span>Categories\n        </li>\n        <li className={activeAssign === Categories.CUSTOMERS ? 'active' : ''} onClick={() => handleClick(Categories.CUSTOMERS)}>\n          <span><GoPerson /></span>Customers\n        </li>\n        <li className={activeAssign === Categories.TOKENBASES ? 'active' : ''} onClick={() => handleClick(Categories.TOKENBASES)}>\n          <span><FaLayerGroup /></span>Token Bases\n        </li>\n        <li className={activeAssign === Categories.COUNTERMANAGEMENT ? 'active' : ''} onClick={() => handleClick(Categories.COUNTERMANAGEMENT)}>\n          <span><FaRestroom /></span>Counters\n        </li>\n        <li className={adminContext.category === Categories.TOKENCOUNT ? 'active' : ''} onClick={() => { handleClick(Categories.TOKENCOUNT) }}>\n          <span><GiCard7Clubs /></span>TokenCount\n        </li>\n        <li className={adminContext.category === Categories.PLUGINMANAGEMENT ? 'active' : ''} onClick={() => { handleClick(Categories.PLUGINMANAGEMENT) }}>\n          <span><GiPlug /></span>Plugins\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Sidebar\n","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../../Constants/colors';\n\nconst Container = styled.section`\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  padding: .5em;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  align-content: flex-start;\n  scrollbar-color: ${colors.red} ${colors.white};\n  scrollbar-width: 5px;\n\n  &::-webkit-scrollbar {\n    width: 7px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${colors.red};\n    border-radius: 5px;\n  }\n`;\n\nconst CardContainer: React.FC = ({ children }) => {\n  return (\n    <Container>\n      {children}\n    </Container>\n  )\n}\n\nexport default CardContainer\n","import React, { useEffect } from 'react'\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport colors from '../../../../Constants/colors';\nimport CateogryInterface from '../../../../Interfaces/CategoryInterface';\nimport TokenBase, { TokenStatus } from '../../../../Interfaces/TokenBase';\nimport AppContext from '../../../App/contextHelper';\nimport CardContainer from '../../../Cards/CardContainer';\nimport Spinner from '../../../Spinner/Spinner';\n\nconst StyledSection = styled.section`\n  margin: .3em;\n  padding: .3em;\n  box-shadow: 3px 3px 3px #ccc;\n  border-radius: .3em;\n  flex: 1 1 auto;\n  color: ${colors.darkBlack};\n\n  h3{\n    color: ${colors.blue};\n    border-bottom: 2px solid ${colors.blue};\n    font-size: 1em;\n    margin: 0;\n  }\n\n  article {\n    padding: .3em;\n\n    p{\n      margin: 0;\n      paddig: 0;\n      font-size: .9em;\n\n      span {\n        font-weight: bold;\n      }\n\n      span.green {\n        color: ${colors.green};\n      }\n      span.blue{\n        color: ${colors.blue};\n      }\n      span.red{\n        color: ${colors.red};\n      }\n    }\n  }\n`;\n\ninterface CategoryCard {\n  symbol: string | undefined;\n  name: string;\n  totalTokens: number;\n  unprocessed: number;\n}\n\nconst HomeContents = () => {\n  const appContext = useContext(AppContext);\n  const [categoryCards, setCategoryCards] = useState<CategoryCard[]>([]);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${appContext?.token}`\n      }\n    }\n\n    fetch('/tokenbase/getalltokencategories', requestOptions).then(response => response.json()).then(category => {\n      const today = new Date();\n      fetch(`tokenbase/filterbydate/${today.toString()}`, requestOptions).then(response => response.json()).then(todaysTokens => {\n        if (todaysTokens.error) {\n          setMessage('No tokens in tokenbase');\n        } else {\n          (category as CateogryInterface[]).push({\n            category: undefined,\n            categoryName: 'Uncategorized',\n            currentTokenCount: 0,\n            latestCustomerTokenCount: 0\n          });\n          (category as CateogryInterface[]).forEach(categoryInterface => {\n            const tokensOfCategory = (todaysTokens as TokenBase[]).filter(tokenBase => tokenBase._token.tokenCategory === categoryInterface.category);\n            const name = categoryInterface.categoryName;\n            const totalTokens = tokensOfCategory.length;\n            const unprocessed = tokensOfCategory.filter(tokenbase => tokenbase._currentStatus === TokenStatus.UNPROCESSED).length;\n\n            const categoryCard: CategoryCard = {\n              name,\n              symbol: categoryInterface.category,\n              totalTokens,\n              unprocessed\n            }\n            setCategoryCards(cards => [categoryCard, ...cards]);\n          })\n        }\n      });\n    });\n\n  }, [appContext])\n\n  return (\n    <CardContainer>\n      {\n        categoryCards.length ?\n          categoryCards.map(categoryCard => {\n            return (\n              <StyledSection key={categoryCard.symbol ? categoryCard.symbol : '-'}>\n                <h3>Category: {categoryCard.symbol}</h3>\n                <article>\n                  <p>Name: <span className=\"green\">{categoryCard.name}</span></p>\n                  <p>Total Tokens: <span className=\"blue\">{categoryCard.totalTokens}</span></p>\n                  <p>Unprocessed: <span className=\"red\">{categoryCard.unprocessed}</span></p>\n                </article>\n              </StyledSection>\n            )\n          }) :\n          <div>\n            <p>{message}</p>\n            <Spinner />\n          </div>\n      }\n    </CardContainer>\n  )\n}\n\nexport default HomeContents;\n","import React from 'react'\nimport { TokenProcessing } from '../../Interfaces/TokenBase';\nimport { MdDateRange } from 'react-icons/md';\nimport { AiOutlineClockCircle } from 'react-icons/ai';\nimport styled from 'styled-components';\nimport colors from '../../Constants/colors';\n\ninterface TokenProcessingCardInterface {\n  tokenProcessing: TokenProcessing;\n}\n\nconst ProcessingCardContainer = styled.section`\n  color: ${colors.darkBlack};\n  font-size: .9em;\n  border-bottom: 2px solid ${colors.darkBlack};\n  margin: .5em 0;\n  padding: .5em 0;\n  \n  h3.cardHeading{\n    font-size: 1.2em;\n  }\n\n  article {\n    span {\n      font-size: .9em;\n      display: inline-block;\n      color: ${colors.darkBlack};\n    }\n\n    .icon {\n      vertical-align: top;\n      color: ${colors.darkBlack};\n    }\n  }\n`;\n\nconst TokenProcessingCard: React.FC<TokenProcessingCardInterface> = ({ tokenProcessing }) => {\n\n  return (\n    <ProcessingCardContainer>\n      <h3 className=\"cardHeading\">Processed By : {tokenProcessing._operator._userInfo.username}</h3>\n      <article>\n        Counter: {tokenProcessing._operator._userInfo.counter} <br />\n        Status: {tokenProcessing._status}<br />\n        <MdDateRange className=\"icon\" /> <span>{new Date(tokenProcessing._timeStamp).toLocaleDateString()}</span> <br />\n        <AiOutlineClockCircle className=\"icon\" /> <span>{new Date(tokenProcessing._timeStamp).toLocaleTimeString()}</span>\n      </article>\n    </ProcessingCardContainer>\n  )\n}\n\nexport default TokenProcessingCard;\n","import React, { useState } from 'react'\nimport styled from 'styled-components';\nimport colors from '../../Constants/colors';\nimport TokenBase from '../../Interfaces/TokenBase';\nimport Modal from '../Modal/Modal';\nimport { MdDateRange } from 'react-icons/md';\nimport { AiOutlineClockCircle } from 'react-icons/ai';\nimport TokenProcessingCard from './TokenProcessingCard';\n\nconst Card = styled.section`\n  flex: 1 1 auto;\n  box-sizing: border-box;\n  box-shadow: 3px 3px 3px #ccc;\n  display: flex;\n  flex-direction: column;\n  padding: .5em;\n  border-radius: .3em;\n  cursor: pointer;\n  margin: .3em;\n  color: ${colors.darkBlack};\n\n  &:hover {\n    box-shadow: 3px 3px 5px #ccc;\n  }\n\n  h3{\n    padding: 0;\n    margin: 0;\n    color: ${colors.blue};\n    display: flex;\n    justify-content: space-between;\n    border-bottom: 2px solid ${colors.blue};\n\n    span {\n      color: ${colors.lightBlack};\n      font-size: 1.3em;\n\n      &:hover {\n        color: ${colors.red};\n      }\n    }\n  }\n  article {\n    margin-top: .3em;\n    font-size: .9em;\n    color: ${colors.darkBlack};\n\n    span {\n      font-weight: bold;\n      color: ${colors.green};\n      padding-left: .3em;\n    }\n  }\n`;\n\nconst TokenProcessingCardHolder = styled.section`\n  padding: 1em .5em;\n  max-height: 60vh;\n  overflow: auto;\n  scrollbar-color: ${colors.red} ${colors.white};\n  scrollbar-width: 5px;\n\n  &::-webkit-scrollbar {\n    width: 7px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${colors.red};\n    border-radius: 5px;\n  }\n\n  h2{\n    color: ${colors.blue};\n    margin: 0;\n    padding: 0;\n    font-size: 1.3em;\n    border-bottom: 3px solid ${colors.blue};\n  }\n\n  article {\n    h3{\n      font-size: 1em;\n      color: ${colors.darkBlack};\n      margin: .3em 0 0 0;\n      padding: 0;\n    }\n\n    p{\n      font-size: .8em;\n      margin: .5em 0;\n\n      span {\n        color: ${colors.green}\n      }\n    }\n\n    div {\n      font-size: .8em;\n      color: ${colors.red};\n    }\n  }\n`;\n\ninterface TokneCardInteface {\n  tokenBase: TokenBase;\n}\n\n\nconst TokenCard: React.FC<TokneCardInteface> = ({ tokenBase }) => {\n  const [modalVisibility, setModalVisibility] = useState(false);\n  return (\n    <Card onClick={() => setModalVisibility(true)}>\n      <h3>Token No. : {tokenBase._token.tokenCategory ? tokenBase._token.tokenCategory : \"\"}{tokenBase._token.tokenNumber}</h3>\n      <article>\n        <section>Token I.D : <span>{tokenBase._token.tokenId}</span> </section>\n        <section><MdDateRange /> <span>{new Date(tokenBase._token.date).toLocaleDateString()}</span></section>\n        <section><AiOutlineClockCircle /> <span>{new Date(tokenBase._token.date).toLocaleTimeString()}</span></section>\n      </article>\n      <Modal modalVisibility={modalVisibility} resetModalVisibility={() => setModalVisibility(false)}>\n        <TokenProcessingCardHolder>\n          <h2>Token No : {tokenBase._token.tokenCategory}{tokenBase._token.tokenNumber}, ID : {tokenBase._token.tokenId}</h2>\n          <article>\n            <h3>Token Processing Information: </h3>\n            <p>Current Status : <span>{tokenBase._currentStatus}</span></p>\n            {tokenBase.tokenProcessingInfo.length ?\n              tokenBase.tokenProcessingInfo.map((tokenProcessing, index) => <TokenProcessingCard tokenProcessing={tokenProcessing} key={index} />)\n              : <div>No Token Processing Information</div>}\n          </article>\n        </TokenProcessingCardHolder>\n      </Modal>\n    </Card>\n  )\n}\n\nexport default TokenCard\n","import React from 'react'\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport TokenBase from '../../../../Interfaces/TokenBase';\nimport AppContext from '../../../App/contextHelper';\nimport CardContainer from '../../../Cards/CardContainer';\nimport TokenCard from '../../../Cards/TokenCard';\nimport Modal from '../../../Modal/Modal';\nimport Spinner from '../../../Spinner/Spinner';\nimport { AdminContext } from '../ContextHelper';\n\nconst TokenBasesContent = () => {\n  const [tokenbases, setTokenbases] = useState<TokenBase[]>([]);\n  const adminContext = useContext(AdminContext);\n  const appContext = useContext(AppContext);\n\n  const [loadingModal, setLoadingModal] = useState(false);\n\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted && adminContext.tokenFetchURL !== '/') {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${appContext?.token}`\n        }\n      }\n      setLoadingModal(true);\n      fetch(adminContext.tokenFetchURL, requestOptions).then(response => response.json()).then(data => {\n        if ((data as TokenBase[]).length) {\n          const tokenBases: TokenBase[] = (data as TokenBase[]).sort((a, b) => (b._token.tokenId - a._token.tokenNumber));\n          setTokenbases(tokenBases);\n        } else {\n          setTokenbases([]);\n        }\n        setLoadingModal(false);\n      });\n    }\n    return () => { mounted = false };\n\n  }, [appContext, adminContext.tokenFetchURL]);\n\n  return (\n    <CardContainer>\n      {tokenbases.length ? tokenbases.map(tokenBase => <TokenCard tokenBase={tokenBase} key={tokenBase._token.tokenId} />) : <Spinner />}\n      <Modal modalVisibility={loadingModal} resetModalVisibility={() => { setLoadingModal(false) }}>\n        <div>\n          Loading... <Spinner />\n        </div>\n      </Modal>\n    </CardContainer>\n  )\n}\n\nexport default TokenBasesContent;\n","import React, { useContext, useEffect } from 'react'\nimport UserRoles from '../../../../Constants/UserRoles';\nimport UsersViwer from '../../../UserViewer/UsersViewer';\nimport { AdminContext, HeaderCategories } from '../ContextHelper';\n\nconst UserContents = () => {\n  const adminContext = useContext(AdminContext);\n\n  useEffect(() => {\n    adminContext.setHeaderCategory(HeaderCategories.OPERATORS);\n  }, []);\n\n  const content = adminContext.headerCategory === HeaderCategories.REGISTRATORS ?\n    <UsersViwer userType={UserRoles.REGISTRATOR} /> :\n    <UsersViwer userType={UserRoles.OPERATOR} />;\n\n  return (\n    <>\n      {content}\n    </>\n  );\n}\n\nexport default UserContents;","import styled from \"styled-components\";\nimport colors from \"../../Constants/colors\";\n\nconst StyledForm = styled.form`\n  width: 80vw;\n  @media (min-width: 800px) {\n    width: 30vw;\n  }\n  .heading{\n    width: 100%;\n    font-size: 1.5em;\n    margin: 0;\n    margin-bottom: .5em;\n    padding: 0;\n    color: ${colors.lightBlack};\n  }\n\n  div{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: .2em;\n  }\n\n  fieldset {\n    border: 2px solid ${colors.blue};\n    \n    legend {\n      font-size: .8em;\n      color: ${colors.green};\n    }\n\n    div.tokenCategory {\n      justify-content: flex-start;\n      display: flex;\n      flex-direction: row;\n      \n      select {\n        padding: .3em;\n        margin: .5em;\n        border: none;\n        border-bottom: 3px solid ${colors.lightBlack};\n        color: ${colors.darkBlack};\n        outline: none;\n  \n        option {\n          color: ${colors.darkBlack};\n        }\n      }\n      \n      label {\n        color: ${colors.darkBlack};\n      }\n  \n      button {\n        margin: .3em;\n        font-size: .8em;\n      }\n\n      button:disabled{\n        &:hover {\n          background: ${colors.lightBlack};\n        }\n      }\n    }\n  }\n\n  input {\n    border: none;\n    border-bottom: 3px solid lightslategrey;\n    font-size: 1em;\n    background: inherit;\n    padding: .5em;\n    color: ${colors.lightBlack};\n    margin: .3em;\n    width: 100%;\n  \n    &:focus, &:hover {\n      outline: none;\n      border-color: ${colors.blue};\n      color: ${colors.blue};\n    }\n  }\n\n  button {\n    background: ${colors.lightBlack};\n    border: none;\n    outline: none;\n    color: #eee;\n    width: 100%;\n    padding: .3em;\n    font-size: 1.2em;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 1em;\n    \n    span#left {\n      flex: 1 1 50%;\n      text-align: center;\n    }\n    \n    \n    &:hover, &:active {\n      cursor: pointer;\n      background: ${colors.blue};\n    }\n  }\n\n  .textMessage {\n    color: ${colors.red};\n    display: block;\n    height: 1.2em;\n  }\n\n  .green {\n    color: ${colors.green}\n  }\n\n`;\n\nexport default StyledForm;","import React, { useState } from 'react';\nimport Customer from '../../Interfaces/Customer';\nimport StyledForm from './CustomerCreationForm.style';\nimport { FaUserAlt } from 'react-icons/fa';\nimport Spinner from '../Spinner/Spinner';\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport AppContext from '../App/contextHelper';\nimport CategoryInterface from '../../Interfaces/CategoryInterface';\n\ninterface CustomerCreationProps {\n  customer?: Customer;\n  updateCustomersList?: (customer: Customer) => void;\n  modalClose: () => void;\n  updateCustomerInUI?: (customer: Customer) => void;\n}\n\nconst CustomerCreationForm: React.FC<CustomerCreationProps> = ({ customer, updateCustomersList, modalClose, updateCustomerInUI }) => {\n\n  const appContext = useContext(AppContext);\n\n  const [customerName, setCustomerName] = useState('');\n  const [remarks, setRemarks] = useState('');\n  const [tokenCategory, setTokenCategory] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [allCategories, setAllCategories] = useState<CategoryInterface[]>([{\n    category: '',\n    categoryName: 'None',\n    currentTokenCount: 0,\n    latestCustomerTokenCount: 0\n  }]);\n\n  const customerNameRef = React.createRef<HTMLInputElement>();\n  const remarksRef = React.createRef<HTMLInputElement>();\n  const tokenCategoryRef = React.createRef<HTMLInputElement>();\n\n  useEffect(() => {\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n\n    fetch('/tokenbase/getalltokencategories', requestOptions).then(response => response.json()).then(data => {\n      const allCategoriesObject = data as CategoryInterface[];\n      setAllCategories(stateCategories => [...stateCategories, ...allCategoriesObject]);\n      const defaultCategory = localStorage.getItem(\"registrationCategory\");\n      if (defaultCategory) {\n        const categoryExists = allCategoriesObject.find(categoryObject => categoryObject.category === defaultCategory);\n        if (categoryExists) {\n          setTokenCategory(defaultCategory);\n        } else {\n          setTokenCategory('');\n          localStorage.setItem('registrationCategory', '');\n        }\n      }\n    }).catch(error => {\n      setMessage(error.toString());\n    });\n    if (customer) {\n      setCustomerName(customer.customerName);\n      setRemarks(customer.remarks ? customer.remarks : '');\n      setTokenCategory(customer.token.tokenCategory ? customer.token.tokenCategory : '');\n    }\n  }, []);\n\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    setCustomerName(event.currentTarget.value);\n  }\n\n  const handleRemarksChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    setRemarks(event.currentTarget.value);\n  }\n\n  const handleFormClick = (event: React.MouseEvent<HTMLFormElement>) => {\n    event.stopPropagation();\n  }\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (customerName.length) {\n      if (customer) {\n        updateCustomer();\n      } else {\n        createCustomer();\n      }\n    } else {\n      setMessage('Name must not be empty');\n    }\n  }\n\n  const createCustomer = () => {\n    setIsLoading(true);\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      },\n      body: JSON.stringify({ customerName, tokenCategory, remarks })\n    }\n\n    fetch('/customer', requestOptions).then(response => response.json()).then(data => {\n      if (data.error) {\n        setSuccess(false);\n        setMessage(data.error);\n      } else {\n        setSuccess(true);\n        setMessage(\"Customer Created\");\n        updateCustomersList && updateCustomersList(data as Customer);\n        modalClose();\n      }\n      setIsLoading(false);\n    }).catch(error => {\n      setSuccess(false);\n      setMessage(error.toString());\n      setIsLoading(false);\n    });\n  }\n\n  const updateCustomer = () => {\n    setIsLoading(true);\n    const requestOptions = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      },\n      body: JSON.stringify({ customerName, tokenCategory, remarks })\n    }\n\n    fetch(`customer/${customer?.customerId}`, requestOptions).then(response => response.json()).then(data => {\n      if (data.error) {\n        setSuccess(false);\n        setMessage(data.error);\n      } else {\n        setSuccess(true);\n        setMessage(\"Customer Updated\");\n        updateCustomerInUI && updateCustomerInUI(data as Customer);\n        modalClose();\n      }\n      setIsLoading(false);\n    }).catch(error => {\n      setSuccess(false);\n      setMessage(error.toString());\n      setIsLoading(false);\n    });\n  }\n  const handleDefaultClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    localStorage.setItem(\"registrationCategory\", tokenCategory);\n  }\n\n  const handleClearClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if (tokenCategoryRef.current) {\n      tokenCategoryRef.current.value = '';\n    }\n    localStorage.removeItem(\"registrationCategory\");\n  }\n\n  const handleDropDownChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTokenCategory(event.currentTarget.value);\n  }\n\n  return (\n    <StyledForm onClick={handleFormClick} onSubmit={handleFormSubmit}>\n      <div className=\"heading\">{customer ? \"Update\" : \"Create\"} Customer<FaUserAlt /></div>\n      <div>\n        <input type=\"text\" placeholder=\"Customer Name\" onChange={handleNameChange} value={customerName} ref={customerNameRef} />\n      </div>\n      <div>\n        <input type=\"text\" placeholder=\"Remarks\" onChange={handleRemarksChange} value={remarks} ref={remarksRef} />\n      </div>\n      <fieldset>\n        <legend>Category</legend>\n        <div className=\"tokenCategory\">\n          <select onChange={handleDropDownChange} disabled={customer ? true : false} value={tokenCategory}>\n            {allCategories.map(category =>\n              <option value={category.category} key={category.category}>\n                {category.category} - {category.categoryName}\n              </option>)}\n          </select>\n          <button type=\"button\" onClick={handleDefaultClick} disabled={customer ? true : false}>Default</button>\n          <button type=\"button\" onClick={handleClearClick} disabled={customer ? true : false}>Clear</button>\n        </div>\n      </fieldset>\n      <button>\n        <span id=\"left\">{customer ? \"Update\" : \"Create\"}</span>\n        {isLoading && <Spinner />}\n      </button>\n      <div className={`${success ? 'textMessage green' : 'textMessage'}`}>{message}</div>\n    </StyledForm>\n  )\n}\n\nexport default CustomerCreationForm\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport colors from '../../Constants/colors'\nimport Customer from '../../Interfaces/Customer'\nimport { MdDateRange } from 'react-icons/md'\nimport { AiOutlineClockCircle } from 'react-icons/ai';\nimport Modal from '../Modal/Modal'\nimport CustomerCreationForm from '../CustomerForms/CustomerCreationForm'\nimport AlertDialog from '../Dialogs/AlertDialog'\n\nconst StyledCard = styled.article`\n  background: ${colors.white};\n  box-shadow: 2px 2px 5px #ccc;\n  margin: .6em;\n  box-sizing: border-box;\n  padding: .5em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  tranition: all .4s;\n  border-radius: .3em;\n  flex: 1 1 auto;\n  height: max-content;\n\n  h3{\n    margin: 0;\n    padding: 0;\n    color: ${colors.lightBlack};\n    font-size: 1.3em;\n  }\n\n  header {\n    color: ${colors.darkBlack};\n    font-size: .9em;\n    border-bottom: 2px solid ${colors.lightBlack};\n    margin-top: .2em;\n    width: 100%;\n    span{\n      color: ${colors.green};\n      font-weight: bold;\n    }\n  }\n  \n  section {\n    margin: .5em 0;\n    align-self: flex-start;\n    display: flex;\n    flex-direction: column;\n    font-size: .8em;\n    color: ${colors.darkBlack};\n\n    span{\n      margin: .1em 0;\n      color: ${colors.darkBlack};\n      .icon{\n        color: ${colors.darkBlack};\n        padding: .5em;\n      }\n    }\n\n  }\n\n  \n  &:hover {\n    cursor: pointer;\n    box-shadow: 2px 2px 10px #ccc;\n    h3{\n      color: green;\n    }\n  }\n`;\n\n\ninterface CardContainerPropsInterface {\n  customer: Customer;\n  updateCustomerOnUI?: (customer: Customer) => void;\n}\n\nconst CustomerCard: React.FC<CardContainerPropsInterface> = ({ customer, updateCustomerOnUI }) => {\n\n  const [modalVisibility, setModalVisibility] = useState(false);\n\n  const dialogBodyJSX = <>\n    <p>\n      Customer ID: {customer.customerId}<br />\n      Token ID: {customer.token.tokenId}<br />\n      Token Number: {customer.token.tokenCategory}{customer.token.tokenNumber}<br />\n      Remarks: {customer.remarks}<br />\n      Timestamp: {new Date(customer.token.date).toLocaleString()}\n    </p>\n  </>\n\n  return (\n    <StyledCard onClick={() => { setModalVisibility(true) }}>\n      <h3>{customer.customerName}</h3>\n      <header>Token No: <span>{customer.token.tokenCategory}{customer.token.tokenNumber}</span></header>\n      <section>\n        <span>\n          <span className=\"icon\"><MdDateRange /></span>\n          <span>{\n            new Date(customer.token.date).toLocaleDateString()}\n          </span>\n        </span>\n        <span>\n          <span className=\"icon\"><AiOutlineClockCircle /></span>\n          <span>{\n            new Date(customer.token.date).toLocaleTimeString()}\n          </span>\n        </span>\n      </section>\n      <Modal modalVisibility={modalVisibility} resetModalVisibility={() => setModalVisibility(false)}>\n        {\n          updateCustomerOnUI ?\n            <CustomerCreationForm modalClose={() => setModalVisibility(false)} customer={customer} updateCustomerInUI={updateCustomerOnUI} /> :\n            <AlertDialog body={dialogBodyJSX} title={customer.customerName} />\n        }\n      </Modal>\n    </StyledCard>\n  )\n}\n\nexport default CustomerCard\n","import React, { useState } from 'react'\nimport { FaSearch } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport colors from '../../Constants/colors';\n\nconst SearchContainer = styled.div`\nmargin-top: 1.5em;\ncolor: ${colors.white};\nbackground: ${colors.red};\ndisplay: flex;\nfont-size: 2em;\nborder-radius: 2em;\nborder: 0;\ncursor: pointer;\nalign-self: flex-end;\ntransition: all .4s;\noverflow: hidden;\njustify-content: flex-end;\nflex: 0 0 1.5em;\n\n.search-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 0 0 1.5em;\n}\n\n\ninput {\n  border-radius: inherit;\n  background: ${colors.red};\n  color: ${colors.white};\n  border: 0;\n  outline: none;\n  width: 90%;\n  font-size: .7em;\n  padding-left: .5em;\n\n  &::placeholder {\n    font-family: Arial, sans-serif;\n    color: ${colors.lightBlack};\n  }\n}\n`\n\nexport interface SearchProps {\n  handleSearchChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholderText: string;\n}\n\nconst Search: React.FC<SearchProps> = ({ handleSearchChange, placeholderText }: SearchProps): JSX.Element => {\n\n\n  const toggleSearchVIsible = (event: React.MouseEvent<HTMLElement> | React.FocusEvent<HTMLInputElement>) => {\n    event.stopPropagation();\n    setSearchVisible(visibility => !visibility);\n  }\n\n  const handleInputClick = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.stopPropagation();\n  }\n\n  const [searchVisible, setSearchVisible] = useState(false);\n  return (\n    <SearchContainer style={{ width: `${searchVisible ? \"100%\" : \"1.5em\"}` }} onClick={toggleSearchVIsible}>\n      <input type=\"search\" onClick={handleInputClick} placeholder={placeholderText} onChange={handleSearchChange} />\n      <span className=\"search-icon\" ><FaSearch /></span>\n    </SearchContainer>\n  );\n}\n\nexport default Search;","import styled from \"styled-components\";\nimport colors from \"../../../../Constants/colors\";\n\nconst ContentContainer = styled.div`\n    \n    padding: 1em .5em;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n    overflow: hidden;\n\n    div.search {\n      margin-top: 1.5em;\n      color: ${colors.white};\n      background: ${colors.red};\n      display: flex;\n      font-size: 2em;\n      border-radius: 2em;\n      border: 0;\n      cursor: pointer;\n      align-self: flex-end;\n      transition: all .4s;\n      overflow: hidden;\n      justify-content: flex-end;\n      flex: 0 0 1.5em;\n  \n      .search-icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex: 0 0 1.5em;\n      }\n  \n  \n      input {\n        border-radius: inherit;\n        background: ${colors.red};\n        color: ${colors.white};\n        border: 0;\n        outline: none;\n        width: 90%;\n        font-size: .7em;\n        padding-left: .5em;\n  \n        &::placeholder {\n          font-family: Arial, sans-serif;\n          color: ${colors.lightBlack};\n        }\n      }\n    }\n\n    section.list-container {\n      height: 100%;\n      overflow: scroll;\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      flex-wrap: wrap;\n      scrollbar-color: ${colors.red} ${colors.white};\n      scrollbar-width: 5px;\n\n      &::-webkit-scrollbar {\n        width: 7px;\n      }\n    \n      &::-webkit-scrollbar-thumb {\n        background-color: ${colors.red};\n        border-radius: 5px;\n      }\n    }\n\n\n    h2{\n      font-size: 1.5em;\n      padding: 0;\n      margin: 0;\n      margin-left: 3em;\n      color: ${colors.blue};\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n      align-items: center;\n      width: 100%;\n\n      section{\n        sup {\n          font-size: .5em;\n          box-sizing: border-box;\n          height: 2.3em;\n          width: 2.3em;\n          margin-left: .3em;\n          background: ${colors.red};\n          color: ${colors.white};\n          border-radius: 50%;\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        span.delete{\n          color: red;\n        }\n      }\n\n      span{\n        font-size: 1.5em;\n        cursor: pointer;\n      }\n    }\n  `;\nexport default ContentContainer;\n","import React, { useContext, useEffect } from 'react'\nimport { useState } from 'react';\nimport Customer from '../../../../Interfaces/Customer';\nimport AppContext from '../../../App/contextHelper';\nimport { HeaderCategories, AdminContext } from '../ContextHelper';\nimport Modal from '../../../Modal/Modal';\nimport CustomerCard from '../../../Cards/CustomerCard';\nimport Search from '../../../Search/Search';\nimport ContentContainer from './CustomerContent.style';\nimport ConfirmationDialog from '../../../Dialogs/ConfirmationDialog';\nimport Spinner from '../../../Spinner/Spinner';\n\nconst CustomersContent = () => {\n  const appContext = useContext(AppContext);\n  const adminContext = useContext(AdminContext);\n\n  const [allCustomers, setAllCustomers] = useState<Customer[]>([]);\n  const [displableCustomers, setDisplableCustomers] = useState<Customer[]>([]);\n  const [message, setMessage] = useState('');\n  const [confirmationModalVisibility, setConfirmationModalVisibility] = useState(false);\n\n\n  useEffect(() => {\n    let mounted = true;\n\n\n    adminContext.setHeaderCategory(adminContext.headerCategory === HeaderCategories.ALLCUSTOMERS || adminContext.headerCategory === HeaderCategories.TODAYSCUSTOMERS ?\n      adminContext.headerCategory : HeaderCategories.TODAYSCUSTOMERS);\n\n    if (mounted) {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Berer ${appContext?.token}`\n        }\n      }\n\n      fetch('/customer', requestOptions).then(response => response.json()).then(data => {\n        if (data.error)\n          setMessage(data.error.toString());\n        else {\n          if (adminContext.headerCategory === HeaderCategories.ALLCUSTOMERS) {\n            setAllCustomers((data as Customer[]).sort((a, b) => (b.customerId - a.customerId)));\n            setDisplableCustomers((data as Customer[]).sort((a, b) => (b.customerId - a.customerId)));\n          } else {\n            const requiredCustomers = (data as Customer[]).filter(customer => {\n              const tokenDate = new Date(customer.token.date);\n              const today = new Date();\n              return tokenDate.getDate() === today.getDate() && tokenDate.getMonth() === today.getMonth() && tokenDate.getFullYear() === today.getFullYear();\n            });\n            setAllCustomers(requiredCustomers.sort((a, b) => (b.customerId - a.customerId)));\n            setDisplableCustomers(requiredCustomers.sort((a, b) => (b.customerId - a.customerId)));\n          }\n        }\n      });\n    }\n    return () => { mounted = false };\n  }, [appContext?.token, adminContext]);\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const filteredCustomers = allCustomers.filter(customer => customer.customerName.includes(event.currentTarget.value));\n    setDisplableCustomers(filteredCustomers);\n  }\n\n  const onConfirmClick = (setLoading: (status: boolean) => void, setMessage: (message: string) => void) => {\n    setLoading(true);\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n\n    fetch('/customer/delete/allcustomers', requestOptions).then(response => response.status).then(status => {\n      if (status === 200) {\n        setAllCustomers([]);\n        setDisplableCustomers([]);\n        setConfirmationModalVisibility(false);\n      } else {\n        setMessage(`Error occured with status: ${status}`);\n      }\n    });\n  }\n\n  return (\n    <ContentContainer>\n      <h2>\n        <section>Customers<sup>{allCustomers.length}</sup></section>\n      </h2>\n      {message}\n      <section className=\"list-container\">\n        {allCustomers.length ? '' : <Spinner />}\n        {displableCustomers.map(customer => <CustomerCard customer={customer} key={customer.customerId} />)}\n      </section>\n      <Search handleSearchChange={handleSearchChange} placeholderText=\"Search By Customer Name\" />\n      <Modal modalVisibility={confirmationModalVisibility} resetModalVisibility={() => setConfirmationModalVisibility(false)}>\n        <ConfirmationDialog body=\"This will delete all Customers stored\" title=\"Delete All Customers?\" onConfirm={onConfirmClick} onReject={() => { setConfirmationModalVisibility(false) }} />\n      </Modal>\n\n    </ContentContainer >\n  )\n}\n\nexport default CustomersContent\n","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../../Constants/colors';\nimport UserInterface from '../../Interfaces/UserInterface';\n\nconst StyledCard = styled.article`\n  background: ${colors.white};\n  box-shadow: 2px 2px 5px #ccc;\n  margin: .6em;\n  box-sizing: border-box;\n  padding: .5em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  tranition: all .4s;\n  border-radius: .3em;\n  flex: 1 1 auto;\n\n  h3{\n    margin: 0;\n    padding: 0;\n    color: ${colors.lightBlack};\n    font-size: .9em;\n  }\n\n  p{\n    color: ${colors.green};\n  }\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 2px 2px 10px #ccc;\n    h3{\n      color: green;\n    }\n\n    p{\n      color: red;\n    }\n  }\n`;\n\ninterface CardInterface {\n  operator: UserInterface;\n  cardClickFunction: () => void;\n}\n\nconst Card: React.FC<CardInterface> = ({ operator, cardClickFunction }) => {\n  return (\n    <StyledCard onClick={cardClickFunction}>\n      <h3>{operator.username}</h3>\n      <p>{operator.counter ? operator.counter : '-'}</p>\n    </StyledCard>\n  )\n}\n\nexport default Card\n","import styled from \"styled-components\";\nimport colors from \"../../../../Constants/colors\";\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 1em .5em 1em .5em;\n  width: 80vw;\n  @media (min-width: 800px) {\n    width: 30vw;\n  }\n\n  header {\n    font-weight: bold;\n    color: ${colors.lightBlack};\n    border-bottom: 2px solid ${colors.blue};\n    width: 100%;\n    padding: 0 0 .2em 0;\n    font-size: 1.3em;\n    margin-bottom: .2em;\n  }\n\n  article {\n    color: ${colors.darkBlack};\n    padding: .5em 0;\n    \n    input {\n      border: none;\n      border-bottom: 2px solid ${colors.blue};\n      padding: .5em;\n      outline: none;\n      width: 3em;\n      text-align: center;\n      text-transform: uppercase;\n    }\n  }\n  section {\n    margin-top: .3em;\n    align-self: center;\n    display: flex;\n\n    button#confirmButton {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      * {\n        margin: 0 .5em;\n      }\n    }\n\n    button {\n      display: block;\n      margin:0 .5em;\n      background: ${colors.lightBlack};\n      border: 0;\n      padding: .5em;\n      color: white;\n      cursor: pointer;\n\n      &:hover {\n        background: ${colors.blue};\n      }\n    }\n  }\n\n  div {\n    height: .5em;\n    color: red;\n    border-top: 2px solid ${colors.blue};\n    width: 100%;\n    margin-top: 1em;\n    font-size: .8em;\n    padding-top: .5em;\n  }\n`;\n\nexport default Wrapper;","import React from 'react';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport UserInterface from '../../../../Interfaces/UserInterface';\nimport AppContext from '../../../App/contextHelper';\nimport Spinner from '../../../Spinner/Spinner';\nimport Wrapper from './OperatorCounterForm.style';\n\n\ninterface OperatorCounterFormInterface {\n  operator: UserInterface | null;\n  closeModalFn: () => void;\n  updateAnOperatorFn: (operator: UserInterface) => void;\n}\n\nconst OperatorCounterForm: React.FC<OperatorCounterFormInterface> = ({ operator, closeModalFn, updateAnOperatorFn }) => {\n\n  const [actionMessage, setActionMessage] = useState('');\n  const [counterText, setCounterText] = useState(operator?.counter ? operator.counter : '');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const context = useContext(AppContext);\n\n  const handleWrapperClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation();\n  }\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    setCounterText(event.currentTarget.value.toUpperCase());\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n    setActionMessage('');\n\n    const requestOptions = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${context && context.token}`\n      }\n    }\n\n    fetch(`users/setcounter/${operator?.id}/${counterText}`, requestOptions).then(response => response.status).then(status => {\n      if (status === 200) {\n        closeModalFn();\n        if (operator) {\n          operator.counter = counterText;\n          updateAnOperatorFn(operator);\n        }\n      } else if (status === 500) {\n        setActionMessage(`Error Counter : ${counterText} already occupied`);\n      } else {\n        setActionMessage(status.toString());\n      }\n      setIsLoading(false);\n    });\n  }\n\n  const handleCancelClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    closeModalFn && closeModalFn();\n  }\n\n\n  return (\n    <Wrapper onClick={handleWrapperClick}>\n      <header>\n        Counter for {operator?.username}\n      </header>\n      <form onSubmit={handleSubmit}>\n        <article>\n          Enter a counter Character:\n          <input type=\"text\" onChange={handleInputChange} value={counterText} />\n        </article>\n        <section>\n          <button id=\"confirmButton\">OK {isLoading && <Spinner />}</button>\n          <button onClick={handleCancelClick}>Cancel</button>\n        </section>\n      </form>\n      <div>{actionMessage}</div>\n\n    </Wrapper>\n  )\n}\n\nexport default OperatorCounterForm\n","import React, { useEffect, useState } from 'react'\nimport { useContext } from 'react';\nimport UserRoles from '../../../../Constants/UserRoles';\nimport UserInterface from '../../../../Interfaces/UserInterface';\nimport AppContext from '../../../App/contextHelper';\nimport Card from '../../../Cards/OperatorCard';\nimport CardContainer from '../../../Cards/CardContainer'\nimport Spinner from '../../../Spinner/Spinner';\nimport Modal from '../../../Modal/Modal';\nimport OperatorCounterForm from '../HelperComponents/OperatorCounterForm';\n\nconst CounterContent = () => {\n  const context = useContext(AppContext);\n  const [operatorsList, setOperatorsList] = useState<UserInterface[]>([]);\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [selectedOperator, setSelectedOperator] = useState<UserInterface | null>(null);\n\n  const cardClickFunction = (operator: UserInterface) => {\n    setModalVisibility(true);\n    setSelectedOperator(operator);\n  }\n\n  useEffect(() => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${context?.token}`\n      }\n    }\n    fetch('/users', requestOptions).then(response => response.json()).then(datas => {\n      type Data = {\n        _userInfo: UserInterface;\n      }\n\n      const operators = (datas as Data[]).map(data => data._userInfo).filter(operator => operator.role === UserRoles.OPERATOR);\n      setOperatorsList(operators);\n    });\n  }, [context]);\n\n  const updateAnOperator = (operator: UserInterface) => {\n    console.log(operator);\n    setOperatorsList(operatorsList => {\n      return operatorsList.map(loopOperator => {\n        if (loopOperator.username === operator.username) {\n          return operator;\n        }\n        return loopOperator;\n      });\n    })\n  }\n\n\n\n  return (\n    <>\n      <CardContainer>\n        {operatorsList.length ?\n          operatorsList.map(operator => <Card cardClickFunction={() => { cardClickFunction(operator) }} operator={operator} key={operator.id} />)\n          : <Spinner />}\n      </CardContainer>\n      <Modal modalVisibility={modalVisibility} resetModalVisibility={() => { setModalVisibility(false) }}>\n        <OperatorCounterForm operator={selectedOperator} closeModalFn={() => { setModalVisibility(false) }} updateAnOperatorFn={updateAnOperator} />\n      </Modal>\n    </>\n  )\n}\n\nexport default CounterContent\n","import styled from \"styled-components\";\nimport colors from \"../../Constants/colors\";\n\nconst StyledForm = styled.form`\n  width: 80vw;\n  @media (min-width: 800px) {\n    width: 30vw;\n  }\n  .heading{\n    width: 100%;\n    font-size: 1.5em;\n    margin: 0;\n    margin-bottom: .5em;\n    padding: 0;\n    color: ${colors.lightBlack};\n  }\n\n  div{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: .2em;\n  }\n\n  div.tokenCategory {\n    justify-content: flex-start;\n    \n    label {\n      color: ${colors.darkBlack};\n    }\n\n    input {\n      width: 1em;\n    }\n\n    button {\n      margin: 0 .3em;\n    }\n  }\n\n  input {\n    border: none;\n    border-bottom: 3px solid lightslategrey;\n    font-size: 1em;\n    background: inherit;\n    padding: .5em;\n    color: ${colors.lightBlack};\n    margin: .3em;\n    width: 100%;\n  \n    &:focus, &:hover {\n      outline: none;\n      border-color: ${colors.blue};\n      color: ${colors.blue};\n    }\n  }\n\n  button {\n    background: ${colors.lightBlack};\n    border: none;\n    outline: none;\n    color: #eee;\n    width: 100%;\n    padding: .3em;\n    font-size: 1.2em;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 1em;\n    \n    span#left {\n      flex: 1 1 50%;\n      text-align: center;\n    }\n    \n    \n    &:hover, &:active {\n      cursor: pointer;\n      background: ${colors.blue};\n    }\n  }\n\n  .textMessage {\n    color: ${colors.red};\n    display: block;\n    height: 1.2em;\n  }\n\n  .green {\n    color: ${colors.green}\n  }\n\n`;\n\nexport default StyledForm;","import React, { useContext } from 'react'\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport CateogryInterface from '../../Interfaces/CategoryInterface';\nimport AppContext from '../App/contextHelper';\nimport Spinner from '../Spinner/Spinner';\nimport StyledForm from './CategoryCreationForm.style';\n\ninterface CategoryFormInterface {\n  category?: string;\n  categoryName?: string;\n  addNewCategory?: (category: CateogryInterface) => void;\n  updateACategory?: (category: CateogryInterface) => void;\n}\n\nconst CategoryCreationForm: React.FC<CategoryFormInterface> = ({ category, categoryName, addNewCategory, updateACategory }) => {\n  const appContext = useContext(AppContext);\n\n  const categoryNameRef = React.createRef<HTMLInputElement>();\n  const categoryRef = React.createRef<HTMLInputElement>();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [message, setMessage] = useState('');\n  const [stateCategory, setStateCategory] = useState('');\n  const [stateCategoryName, setStateCategoryName] = useState('');\n\n  useEffect(() => {\n    if (category) {\n      setStateCategory(category);\n    }\n    if (categoryName) {\n      setStateCategoryName(categoryName);\n    }\n  }, [category, categoryName]);\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStateCategoryName(event.currentTarget.value);\n  }\n\n  const handleCategoryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStateCategory(event.target.value.toUpperCase());\n  }\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    setIsLoading(true);\n    event.preventDefault();\n    if (category) {\n      updateCategory();\n    } else {\n      createCategory();\n    }\n  }\n\n  const updateCategory = () => {\n    const requestOptions = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      },\n      body: JSON.stringify({\n        category: stateCategory,\n        categoryName: stateCategoryName\n      })\n    }\n\n    fetch('/tokenbase/updatecategoryname', requestOptions).then(response => response.status).then(status => {\n      if (status === 200) {\n        setSuccess(true);\n        setMessage(\"Category updated\");\n        updateACategory && updateACategory({\n          category: stateCategory,\n          categoryName: stateCategoryName,\n          currentTokenCount: 0,\n          latestCustomerTokenCount: 0\n        });\n\n      } else {\n        setSuccess(false);\n        setMessage(`Failed with staus code :${status}`);\n      }\n    }).catch(error => {\n      setSuccess(false);\n      setMessage(error.toString());\n    });\n  }\n\n  const createCategory = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      },\n      body: JSON.stringify({\n        category: stateCategory,\n        categoryName: stateCategoryName\n      })\n    }\n\n    fetch('/tokenbase/createtokencategory', requestOptions).then(response => response.status).then(status => {\n      if (status === 201) {\n        setSuccess(true);\n        setMessage(\"Category Created\");\n        addNewCategory && addNewCategory({\n          category: stateCategory,\n          categoryName: stateCategoryName,\n          currentTokenCount: 0,\n          latestCustomerTokenCount: 0\n        });\n      } else {\n        setSuccess(false);\n        setMessage(`Failed with staus code :${status}`);\n      }\n    }).catch(error => {\n      setSuccess(false);\n      setMessage(error.toString());\n    });\n  }\n\n  return (\n    <div>\n      <StyledForm onSubmit={handleFormSubmit} onClick={(event: React.MouseEvent<HTMLFormElement>) => { event.stopPropagation() }}>\n        <div className=\"heading\">{category ? \"Update\" : \"Create\"} Category</div>\n        <div>\n          <input type=\"text\" placeholder=\"Category Name\" onChange={handleNameChange} value={stateCategoryName} ref={categoryNameRef} />\n        </div>\n        <div>\n          <input type=\"text\" placeholder=\"Category Symbol (1 character)\"\n            maxLength={1} onChange={handleCategoryChange}\n            value={stateCategory} ref={categoryRef} disabled={category ? true : false} />\n        </div>\n        <button>\n          <span id=\"left\">{category ? \"Update\" : \"Create\"}</span>\n          {isLoading && <Spinner />}\n        </button>\n        <div className={`${success ? 'textMessage green' : 'textMessage'}`}>{message}</div>\n      </StyledForm>\n    </div>\n  )\n}\n\nexport default CategoryCreationForm\n","import React, { useContext } from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport colors from '../../Constants/colors';\nimport CategoryCreationForm from '../CategoryCreationForm/CategoryCreationForm';\nimport Modal from '../Modal/Modal';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport ConfirmationDialog from '../Dialogs/ConfirmationDialog';\nimport AppContext from '../App/contextHelper';\nimport CateogryInterface from '../../Interfaces/CategoryInterface';\n\n\nconst Card = styled.section`\n  flex: 1 1 auto;\n  box-sizing: border-box;\n  box-shadow: 3px 3px 3px #ccc;\n  display: flex;\n  flex-direction: column;\n  padding: .5em;\n  border-radius: .3em;\n  cursor: pointer;\n  margin: .3em;\n\n  &:hover {\n    box-shadow: 3px 3px 5px #ccc;\n  }\n\n  h3{\n    padding: 0;\n    margin: 0;\n    color: ${colors.blue};\n    display: flex;\n    justify-content: space-between;\n    border-bottom: 2px solid ${colors.blue};\n\n    span {\n      color: ${colors.lightBlack};\n      font-size: 1.3em;\n\n      &:hover {\n        color: ${colors.red};\n      }\n    }\n  }\n  article {\n    margin-top: .3em;\n    font-size: .9em;\n    color: ${colors.darkBlack};\n\n    span {\n      font-weight: bold;\n      color: ${colors.green};\n      padding-left: .3em;\n    }\n  }\n`;\n\ninterface CategoryProps {\n  category: string | undefined;\n  categoryName: string;\n  latestCustomerCount: number;\n  currentCustomerCount: number;\n  deleteAcategory: (category: string | undefined) => void;\n  updateACategory: (category: CateogryInterface) => void;\n}\n\nconst CategoryCard: React.FC<CategoryProps> = (props: CategoryProps) => {\n  const appContext = useContext(AppContext);\n\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [dialogVisibility, setDialogVisibility] = useState(false);\n\n  const handleClick = () => {\n    setModalVisibility(true);\n  }\n\n  const handleDeleteClick = (event: React.MouseEvent<HTMLSpanElement>) => {\n    event.stopPropagation();\n    setDialogVisibility(true);\n  }\n\n  const confirmationAction = (setLoading: (status: boolean) => void, setMessage: (message: string) => void) => {\n    setLoading(true);\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n    fetch(`/tokenbase/deletecategory/${props.category}`, requestOptions).then(response => response.status).then(status => {\n      if (status === 200) {\n        props.deleteAcategory(props.category);\n        setModalVisibility(false);\n      } else {\n        setMessage(`Error while deleting with status code : ${status}`)\n      }\n    }).catch(error => {\n      setMessage(error.toString());\n    });\n  }\n\n  const updateACategory = (category: CateogryInterface) => {\n    props.updateACategory(category);\n    setModalVisibility(false);\n  }\n\n  return (\n    <Card onClick={handleClick}>\n      <h3>{props.categoryName} <span onClick={handleDeleteClick}><AiOutlineCloseCircle /></span></h3>\n      <article>\n        <section>Category: <span>{props.category}</span> </section>\n        <section>No.Of Tokens: <span>{props.latestCustomerCount}</span></section>\n        <section>Currently Calling: <span>{props.currentCustomerCount}</span></section>\n      </article>\n      <Modal modalVisibility={modalVisibility} resetModalVisibility={() => { setModalVisibility(false) }}>\n        <CategoryCreationForm category={props.category} categoryName={props.categoryName}\n          updateACategory={updateACategory} />\n      </Modal>\n      <Modal modalVisibility={dialogVisibility} resetModalVisibility={() => { setDialogVisibility(false) }}>\n        <ConfirmationDialog onConfirm={confirmationAction}\n          onReject={() => { setDialogVisibility(false) }}\n          title={`Delete Category ${props.category}`}\n          body=\"Confirming this action will delete this category\" />\n      </Modal>\n    </Card>\n  )\n}\n\nexport default CategoryCard\n","import React, { useEffect, useState } from 'react'\nimport { useContext } from 'react';\nimport { BiMessageSquareAdd } from 'react-icons/bi';\nimport styled from 'styled-components';\nimport colors from '../../../../Constants/colors';\nimport AppContext from '../../../App/contextHelper';\nimport CardContainer from '../../../Cards/CardContainer';\nimport CategoryCreationForm from '../../../CategoryCreationForm/CategoryCreationForm';\nimport Modal from '../../../Modal/Modal';\nimport CateogryInterface from '../../../../Interfaces/CategoryInterface';\nimport CategoryCard from '../../../Cards/CategoryCard';\nimport Spinner from '../../../Spinner/Spinner';\n\nconst StyledCategoryContent = styled.section`\n  width: 100%;\n  height: 90%;\n  h2 {\n    font-size: 1.5em;\n    padding: 0;\n    margin: 0;\n    margin-left: 2em;\n    color: ${colors.blue};\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n    span {\n      cursor: pointer;\n      font-size: 1.5em;\n    }\n\n  }\n`;\n\nconst CategoryContent = () => {\n  const appContext = useContext(AppContext);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [tokenCategories, setTokenCategories] = useState<CateogryInterface[]>([]);\n\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${appContext?.token}`\n        }\n      }\n      fetch('/tokenbase/getalltokencategories', requestOptions).then(response => response.json()).then(data => {\n        setTokenCategories(data as CateogryInterface[]);\n      });\n    }\n\n    return () => { mounted = false };\n  }, [appContext]);\n\n  const handleClick = () => {\n    setModalVisible(true);\n  }\n\n  const addNewCategory = (category: CateogryInterface) => {\n    setTokenCategories(tokenCategories => [category, ...tokenCategories]);\n    setModalVisible(false);\n  }\n\n  const updateACategory = (category: CateogryInterface) => {\n    setTokenCategories(tokenCategories => {\n      const updatedCategories = tokenCategories.map(loopCategory => {\n        if (category.category === loopCategory.category)\n          return category;\n        return loopCategory;\n      });\n      return updatedCategories;\n    });\n  }\n\n  const deleteACategory = (category: string | undefined) => {\n    setTokenCategories(tokenCategories => {\n      return tokenCategories.filter(tokenCategory => tokenCategory.category !== category);\n    });\n  }\n\n  return (\n    <StyledCategoryContent>\n      <h2>Categories <span className=\"icon\" onClick={handleClick}><BiMessageSquareAdd /></span></h2>\n      <CardContainer>\n        {tokenCategories.length ? tokenCategories.map(tokenCategory => {\n          return <CategoryCard category={tokenCategory.category}\n            categoryName={tokenCategory.categoryName}\n            currentCustomerCount={tokenCategory.currentTokenCount}\n            latestCustomerCount={tokenCategory.latestCustomerTokenCount} key={tokenCategory.category}\n            deleteAcategory={deleteACategory}\n            updateACategory={updateACategory} />\n        }) : <Spinner />}\n      </CardContainer>\n      <Modal modalVisibility={modalVisible} resetModalVisibility={() => { setModalVisible(false) }}>\n        <CategoryCreationForm addNewCategory={addNewCategory} />\n      </Modal>\n    </StyledCategoryContent>\n  )\n}\n\nexport default CategoryContent\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport colors from '../../Constants/colors';\nimport CategoryInterface from '../../Interfaces/CategoryInterface';\nimport AppContext from '../App/contextHelper';\n\ninterface TokenCountCardInterface {\n  categoryInterface: CategoryInterface;\n}\n\nconst CountCard = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  margin: .3em;\n  box-shadow: 3px 3px 3px #ccc;\n  flex: 1 1 auto;\n\n  h3{\n    margin: 0;\n    padding: 0;\n    color: ${colors.blue};\n    border-bottom: 2px solid ${colors.blue};\n    width: 100%;\n    font-size: 1.1em;\n  }\n\n  article {\n    margin: .3em 0;\n    padding: 0;\n    font-size: .9em;\n    color: ${colors.darkBlack};\n\n    p{\n      margin: .3em 0;\n      padding: 0;\n\n      span{\n        color: ${colors.green};\n        font-weight: bold;\n      }\n    }\n    div {\n      margin: .3em;\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n\n      input {\n        border: none;\n        outline: none;\n        border-bottom: 2px solid ${colors.blue};\n        text-align: center;\n        font-weight :bold;\n        color: ${colors.green};\n        font-size: .9em;\n        cursor: pointer;\n      }\n\n      button {\n        border: none;\n        background: ${colors.lightBlack};\n        color: ${colors.white};\n        padding: .2em 1em;\n\n        &:hover {\n          background: ${colors.blue};\n        }\n      }\n    }\n\n    div.message {\n      min-height: 1.2em;\n      border-top: 1px solid ${colors.lightBlack};\n    }\n  }\n`;\n\nconst TokenCountCard: React.FC<TokenCountCardInterface> = ({ categoryInterface }) => {\n  const appContext = useContext(AppContext);\n\n  const [currentCustomerCount, setCurrentCustomerCount] = useState('');\n  const [latestCustomerCount, setLatestCustomerCount] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n    let currentFetchURL: string;\n    if (categoryInterface.category) {\n      currentFetchURL = `/tokencount/categorytokencount/${categoryInterface.category}`\n    } else {\n      currentFetchURL = '/tokencount'\n    }\n\n    fetch(currentFetchURL, requestOptions).then(response => response.json()).then(data => {\n      if (categoryInterface.category) {\n        setCurrentCustomerCount(data.currentCustomerCountOfCategory);\n      } else {\n        setCurrentCustomerCount(data.currentCustomerTokenCount);\n      }\n    });\n\n    let highestFetchURL: string;\n\n    if (categoryInterface.category) {\n      highestFetchURL = `tokencount/categorytokencount/latestcustomercount/${categoryInterface.category}`\n    } else {\n      highestFetchURL = `/tokencount/lastcustomertokencount`;\n    }\n\n    fetch(highestFetchURL, requestOptions).then(response => response.json()).then(data => {\n      if (categoryInterface.category) {\n        setLatestCustomerCount(data.lastCustomerCount);\n      } else {\n        setLatestCustomerCount(data.lastCustomerTokenCount);\n      }\n    });\n  }, [appContext?.token, categoryInterface.category]);\n\n  const handleCurrentCustomerChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrentCustomerCount(event.currentTarget.value);\n  }\n\n  const handleLatestCustomerChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLatestCustomerCount(event.currentTarget.value);\n  }\n\n  const handleCurrentButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      },\n      body: JSON.stringify({\n        category: categoryInterface.category\n      })\n    }\n\n    if (categoryInterface.category) {\n      const url = `tokencount/categorytokencount/categorycountpreset/${currentCustomerCount}`;\n      fetch(url, requestOptions).then(response => response.status).then(status => {\n        if (status === 200) {\n          setMessage(\"Set Successfully\");\n        } else {\n          setMessage(`Setting Failed Status : ${status}`);\n        }\n      });\n    } else {\n      const url = `tokencount/presettokencount/${currentCustomerCount}`;\n      fetch(url, requestOptions).then(response => response.status).then(status => {\n        if (status === 200) {\n          setMessage(\"Set Successfully\");\n        } else {\n          setMessage(`Setting Failed Status : ${status}`);\n        }\n      });\n    }\n  }\n\n  const handleLatestButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      },\n      body: JSON.stringify({\n        category: categoryInterface.category\n      })\n    }\n\n    if (categoryInterface.category) {\n      const url = `tokencount/categorytokencount/latestcustomercountset/${latestCustomerCount}`;\n      fetch(url, requestOptions).then(response => response.status).then(status => {\n        if (status === 200) {\n          setMessage(\"Set Successfully\");\n        } else {\n          setMessage(`Setting Failed Status : ${status}`);\n        }\n      });\n    } else {\n      const url = `tokencount/setlastcustomertokencount/${latestCustomerCount}`;\n      fetch(url, requestOptions).then(response => response.status).then(status => {\n        if (status === 200) {\n          setMessage(\"Set Successfully\");\n        } else {\n          setMessage(`Setting Failed Status : ${status}`);\n        }\n      });\n    }\n  }\n\n  return (\n    <CountCard>\n      <h3>Category: {categoryInterface.category}</h3>\n      <article>\n        <p>Category Name : <span>{categoryInterface.categoryName}</span></p>\n        <div>Token Calling : <input type=\"text\" size={3} value={currentCustomerCount} onChange={handleCurrentCustomerChange} />\n          <button onClick={handleCurrentButtonClick}>Set</button>\n        </div>\n        <div>Highest Count : <input type=\"text\" size={3} value={latestCustomerCount} onChange={handleLatestCustomerChange} />\n          <button onClick={handleLatestButtonClick}>Set</button>\n        </div>\n        <div className='message'>\n          {message}\n        </div>\n      </article>\n    </CountCard>\n  )\n}\n\nexport default TokenCountCard\n","import React, { useEffect, useState } from 'react';\nimport { useContext } from 'react';\nimport CateogryInterface from '../../../../Interfaces/CategoryInterface';\nimport AppContext from '../../../App/contextHelper';\nimport CardContainer from '../../../Cards/CardContainer';\nimport TokenCountCard from '../../../Cards/TokenCountCard';\n\n\nconst TokenCountContent = () => {\n  const [categories, setCategories] = useState<CateogryInterface[]>([]);\n  const appContext = useContext(AppContext);\n\n  useEffect(() => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n    fetch('tokenbase/getalltokencategories', requestOptions).then(response => response.json()).then(categoryInterfaces => {\n      const uncategorizedCategoryInterface: CateogryInterface = {\n        category: undefined,\n        categoryName: 'Uncategorized',\n        currentTokenCount: 0,\n        latestCustomerTokenCount: 0\n      };\n      (categoryInterfaces as CateogryInterface[]).unshift(uncategorizedCategoryInterface);\n      setCategories(categoryInterfaces);\n    });\n  }, [appContext]);\n\n  return (\n    <CardContainer>\n      {categories.map(category => <TokenCountCard categoryInterface={category} key={category.category ? category.category : '-'} />)}\n    </CardContainer>\n  )\n}\n\nexport default TokenCountContent\n","import React, { useContext, useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport colors from '../../Constants/colors';\nimport Plugin from '../../Interfaces/Plugin';\nimport AppContext from '../App/contextHelper';\n\nconst StyledView = styled.section`\n  color: ${colors.lightBlack};\n  font-family: Arial, sans-serif;\n`;\n\ninterface PluginIdHolder {\n  pluginID: number\n}\nconst PluginView: React.FC<PluginIdHolder> = ({ pluginID }) => {\n  const context = useContext(AppContext);\n  const [plugin, setPlugin] = useState<Plugin>();\n\n  useEffect(() => {\n    const requestMethod = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${context?.token}`\n      }\n    }\n    fetch(`/plugins/${pluginID}`, requestMethod).then(response => response.json()).then(data => {\n      const fetchedPlugin = data as Plugin;\n      setPlugin(fetchedPlugin);\n    })\n  }, [context?.token, pluginID]);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation();\n  }\n  return (\n    <StyledView onClick={handleClick}>\n      <table>\n        <tbody>\n          <tr>\n            <td>Plugin Name : </td>\n            <td>{plugin?.pluginInfo.name}</td>\n          </tr>\n          <tr>\n            <td>Plugin ID :  </td>\n            <td>{plugin?.pluginInfo.pluginId}</td>\n          </tr>\n          <tr>\n            <td>Description : </td>\n            <td>{plugin?.pluginInfo.pluginDescription}</td>\n          </tr>\n          <tr>\n            <td>Version : </td>\n            <td>{plugin?.pluginInfo.version}</td>\n          </tr>\n          <tr>\n            <td>Min Core Version : </td>\n            <td>{plugin?.pluginInfo.minCoreVersion}</td>\n          </tr>\n        </tbody>\n      </table>\n    </StyledView>\n  )\n}\n\nexport default PluginView\n","import React, { useState } from 'react'\nimport { useContext } from 'react';\nimport { useEffect } from 'react';\nimport UserRoles from '../../../../Constants/UserRoles';\nimport Token from '../../../../Interfaces/Token';\nimport UserInterface from '../../../../Interfaces/UserInterface';\nimport AppContext from '../../../App/contextHelper';\nimport { OperatorContext } from '../ContextHelper';\nimport ContentContainer from './ContentContainer';\n\ninterface FetchedUserData {\n  _userInfo: UserInterface;\n}\n\nexport enum ProcessingType {\n  CALLAGAIN = \"callagaintoken\",\n  COMPLETED = \"nexttoken\",\n  BYPASS = \"bypasstoken\",\n}\n\nexport enum LocalStorageConstant {\n  PROCESSINGTOKEN = \"ProcessingToken\"\n}\n\nexport interface PropsToContentContainer {\n  processingToken: Token | undefined;\n  setProcessingToken: (token: Token | undefined) => void;\n  allOperators: UserInterface[];\n  setAllOperators: (allOperators: UserInterface[]) => void;\n  message: string;\n  setMessage: (message: string) => void;\n  isBypassProcessing: boolean;\n  setIsBypassProcessing: (status: boolean) => void;\n  isCallAgainProcessing: boolean;\n  setIsCallAgainProcessing: (status: boolean) => void;\n  isForwardProcessing: boolean;\n  setIsForwardProcessing: (status: boolean) => void;\n  isCompletedProcessing: boolean;\n  setIsCompletedProcessing: (status: boolean) => void;\n  handlePrimaryTokenProcessing: (processingType: ProcessingType) => void;\n  handleTokenForward: (forwardcounter: string) => void;\n}\n\nconst Content = () => {\n\n  const [allOperators, setAllOperators] = useState<UserInterface[]>([]);\n  const [message, setMessage] = useState('');\n  const [isBypassProcessing, setIsBypassProcessing] = useState(false);\n  const [isCallAgainProcessing, setIsCallAgainProcessing] = useState(false);\n  const [isForwardProcessing, setIsForwardProcessing] = useState(false);\n  const [isCompletedProcessing, setIsCompletedProcessing] = useState(false);\n\n  const appContext = useContext(AppContext);\n  const operatorContext = useContext(OperatorContext);\n\n  const [processingToken, setProcessingToken] = useState<Token>();\n\n\n  useEffect(() => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n\n\n    const processingToken = localStorage.getItem(LocalStorageConstant.PROCESSINGTOKEN);\n    const dummyToken = {\n      date: new Date(),\n      tokenId: 0,\n      tokenNumber: 0,\n      tokenCategory: (operatorContext.category !== undefined ? operatorContext.category : '')\n    };\n\n    if (processingToken) {\n      const token = JSON.parse(processingToken);\n      token.date = new Date(token.date);\n      const processingDate = token.date;\n      const today = new Date();\n      const areDateSame = (processingDate.getDate() === today.getDate() &&\n        processingDate.getMonth() === today.getMonth() &&\n        processingDate.getFullYear() === today.getFullYear());\n\n      if (areDateSame) {\n        setProcessingToken(token as Token);\n      } else {\n        setProcessingToken(dummyToken);\n      }\n    } else {\n      setProcessingToken(dummyToken);\n    }\n\n    fetch('/users', requestOptions).then(response => response.json()).then(data => {\n      const currentUser = appContext?.loggedInUser;\n      if (currentUser) {\n        const operators = (data as FetchedUserData[])\n          .filter(userData => userData._userInfo.role === UserRoles.OPERATOR && appContext !== null && userData._userInfo.id !== currentUser.id)\n          .map(userData => userData._userInfo).filter(operator => operator.counter);\n\n        setAllOperators(allOperators => [...allOperators, ...operators]);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const handlePrimaryTokenProcessing = (processingType: ProcessingType) => {\n    const request = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      },\n      body: getBodyOfRequest(processingType)\n    }\n\n    const url = getURLFromProcessingType(processingType);\n\n    setMessage('Processing...');\n    fetch(url, request).then(response => response.json()).then(data => {\n      setAllProcessingToFalse();\n      setMessage('');\n      if (data.error) {\n        setMessage(data.error);\n      } else {\n        setProcessingToken((data as Token));\n        localStorage.setItem(LocalStorageConstant.PROCESSINGTOKEN, JSON.stringify(data as Token));\n      }\n    }).catch(error => {\n      setMessage(error.toString());\n      setAllProcessingToFalse();\n    });\n  }\n\n  const getBodyOfRequest = (processingType: ProcessingType) => {\n    if (processingType === ProcessingType.CALLAGAIN) {\n      return JSON.stringify({\n        category: processingToken?.tokenCategory ? processingToken.tokenCategory : \"\",\n        actedTokenNumber: processingToken?.tokenNumber\n      });\n    } else {\n      if (operatorContext.category === processingToken?.tokenCategory ||\n        processingToken?.tokenNumber === 0) {\n        return JSON.stringify({\n          category: operatorContext.category ? operatorContext.category : \"\",\n          actedTokenNumber: processingToken?.tokenNumber\n        });\n      } else {\n        return JSON.stringify({\n          category: operatorContext.category ? operatorContext.category : \"\",\n          actedTokenNumber: processingToken?.tokenNumber,\n          processedCategory: processingToken?.tokenCategory ? processingToken.tokenCategory : \"\"\n        });\n      }\n    }\n  }\n\n  const handleTokenForward = (forwardCounter: string) => {\n    setIsForwardProcessing(true);\n    setMessage('Processing...');\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      },\n      body: getForwardBody(forwardCounter)\n    }\n    fetch('tokencaller/forwardtoken', requestOptions).then(response => response.json()).then(data => {\n      setAllProcessingToFalse();\n      setMessage('');\n      if (data.error) {\n        setMessage(data.error);\n      } else {\n        setProcessingToken((data as Token));\n        localStorage.setItem(LocalStorageConstant.PROCESSINGTOKEN, JSON.stringify(data as Token));\n      }\n    }).catch(error => {\n      setMessage(error.toString());\n      setAllProcessingToFalse();\n    });\n  }\n\n  const getForwardBody = (forwardCounter: string) => {\n    if (operatorContext.category === processingToken?.tokenCategory ||\n      processingToken?.tokenNumber === 0) {\n      return JSON.stringify({\n        category: operatorContext.category ? operatorContext.category : \"\",\n        actedTokenNumber: processingToken?.tokenNumber,\n        counterToForward: forwardCounter\n      });\n    } else {\n      return JSON.stringify({\n        category: operatorContext.category ? operatorContext.category : \"\",\n        actedTokenNumber: processingToken?.tokenNumber,\n        processedCategory: processingToken?.tokenCategory ? processingToken.tokenCategory : \"\",\n        counterToForward: forwardCounter\n      });\n    }\n  }\n\n  const getURLFromProcessingType = (processingType: ProcessingType) => {\n    let url: string;\n    if (processingType === ProcessingType.BYPASS) {\n      setIsBypassProcessing(true);\n      url = '/tokencaller/bypasstoken';\n    } else if (processingType === ProcessingType.CALLAGAIN) {\n      setIsCallAgainProcessing(true);\n      url = '/tokencaller/callagaintoken';\n    } else if (processingType === ProcessingType.COMPLETED) {\n      setIsCompletedProcessing(true);\n      url = '/tokencaller/nexttoken'\n    } else {\n      url = ''\n    }\n\n    return url;\n  }\n\n  const setAllProcessingToFalse = () => {\n    setIsBypassProcessing(false);\n    setIsCompletedProcessing(false);\n    setIsCallAgainProcessing(false);\n    setIsForwardProcessing(false);\n  }\n\n  const propsToContentContainer: PropsToContentContainer = {\n    allOperators,\n    handlePrimaryTokenProcessing,\n    isBypassProcessing,\n    isCallAgainProcessing,\n    isCompletedProcessing,\n    isForwardProcessing,\n    message,\n    processingToken,\n    setAllOperators: (operators: UserInterface[]) => { setAllOperators(operators) },\n    setIsBypassProcessing: (status: boolean) => { setIsBypassProcessing(status) },\n    setIsCallAgainProcessing: (status: boolean) => { setIsCallAgainProcessing(status) },\n    setIsCompletedProcessing: (status: boolean) => { setIsCompletedProcessing(status) },\n    setIsForwardProcessing: (status: boolean) => { setIsForwardProcessing(status) },\n    setMessage: (message: string) => { setMessage(message) },\n    setProcessingToken: (token: Token | undefined) => { setProcessingToken(token) },\n    handleTokenForward\n  }\n\n  return (\n    <section className=\"grid-content\">\n      <ContentContainer props={propsToContentContainer} />\n    </section>\n  )\n}\n\nexport default Content\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components';\nimport colors from '../../Constants/colors';\nimport AppContext from '../App/contextHelper';\nimport Spinner from '../Spinner/Spinner';\nimport ConfigToElementToMapper from './ConfigToElementToMapper';\nimport PluginConfigElement from './PluginConfigElement';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  color: ${colors.darkBlack};\n\n  span {\n    display: flex;\n    margin: .3em;\n    align-items: center;\n  }\n\n  input {\n    margin: .3em;\n    cursor: pointer;\n  }\n\n  button {\n    width: 40%;\n    background: ${colors.blue};\n    color: ${colors.white};\n    border-radius: .3em;\n    border: none;\n    padding: .5em;\n    cursor: pointer;\n    align-self: center;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n  }\n\n  input[type=\"text\"], input[type=\"number\"] {\n    border: none;\n    border-bottom: 2px solid ${colors.lightBlack};\n    outline: none;\n    font-family: Arial, sans-serif;\n    font-size: 1em;\n    padding: .3em;\n    color: ${colors.green};\n  }\n\n  input[type=\"text\"]: focus, input[type=\"number\"]: focus {\n    border-bottom: 2px solid ${colors.blue};\n    color: ${colors.blue};\n  }\n  select {\n    border: none;\n    outline: none;\n    border-bottom: 2px solid ${colors.lightBlack};\n    padding: .3em;\n    margin: .3em;\n  }\n\n  select: focus {\n    border-bottom: 2px solid ${colors.green};\n  }\n\n  div.message {\n    margin-top: 1em;\n    font-size: .9em;\n    color: ${colors.green};\n  }\n`;\n\ninterface Props {\n  pluginConfigElements: PluginConfigElement[];\n  pluginId: number;\n}\n\nconst ConfigArrayToFormMapper: React.FC<Props> = (props: Props) => {\n\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const appContext = useContext(AppContext);\n\n  const formChildrens = props.pluginConfigElements.map((pluginConfigElement, index) => {\n    return <ConfigToElementToMapper pluginConfigElement={pluginConfigElement} key={index} />;\n  });\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setLoading(true);\n    setMessage(\"Updating...\");\n    const configElements: PluginConfigElement[] = getConfigElementsOfSubmittedForm(event);\n    updateConfig(configElements);\n  }\n\n  const getConfigElementsOfSubmittedForm = (event: React.FormEvent<HTMLFormElement>) => {\n    const configElements: PluginConfigElement[] = [];\n    props.pluginConfigElements.forEach(configElement => {\n      const element = event.currentTarget[configElement.name];\n      if (element instanceof RadioNodeList) {\n        setElementsFromCheckboxOrRadioInput(element, configElement);\n      } else {\n        (configElement.value as string) = element.value;\n      }\n      configElements.push(configElement);\n    });\n    return configElements;\n  }\n\n  const setElementsFromCheckboxOrRadioInput = (element: RadioNodeList, configElement: PluginConfigElement) => {\n    let values: string[] | string = [];\n    element.forEach((child) => {\n      if ((child as HTMLInputElement).type === \"checkbox\") {\n        if ((child as HTMLInputElement).checked) {\n          (values as string[]).push((child as HTMLInputElement).value);\n        }\n      } else {\n        if ((child as HTMLInputElement).checked) {\n          (values as string) = (child as HTMLInputElement).value;\n        }\n      }\n    });\n    configElement.value = values;\n  }\n\n  const updateConfig = (pluginConfigs: PluginConfigElement[]) => {\n    const bodyData = {\n      pluginsConfig: pluginConfigs\n    }\n    const requestMethod = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      },\n      body: JSON.stringify(bodyData)\n    }\n    fetch(`/plugins/config/${props.pluginId}`, requestMethod).then(response => response.json()).then(data => {\n      setMessage(data.success);\n      setLoading(false);\n    }).catch(error => {\n      setMessage(error.toString());\n    });\n  }\n\n\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      {formChildrens}\n      <button>Update {loading && <Spinner />}</button>\n      <div className=\"message\">\n        {message}\n      </div>\n    </StyledForm>\n  )\n}\n\nexport default ConfigArrayToFormMapper\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport colors from '../../Constants/colors';\nimport Plugin from '../../Interfaces/Plugin';\nimport AppContext from '../App/contextHelper';\nimport Spinner from '../Spinner/Spinner';\nimport ConfigArrayToFormMapper from './ConfigArrayToFormMapper';\nimport PluginConfigElement from './PluginConfigElement';\n\nconst StyledSection = styled.section`\n  font-family: Arial, sans-serif;\n\n  h2{\n    color: ${colors.blue};\n    border-bottom: 1px solid ${colors.blue};\n    padding: .3em;\n    margin: 0;\n    font-size: 1.2em;\n  }\n\n  article{\n    margin: 1em;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    p {\n      margin: 1em;\n    }\n  }\n\n`;\n\ninterface ConfigComponentProps {\n  pluginId: number;\n}\n\nconst ConfigComponent: React.FC<ConfigComponentProps> = (configProps: ConfigComponentProps) => {\n  const appContext = React.useContext(AppContext);\n\n  const [pluginConfigElements, setPluginConfigElements] = useState<PluginConfigElement[]>([]);\n  const [message, setMessage] = useState('');\n  const [selectedPlugin, setSelectedPlugin] = useState<Plugin>();\n\n\n  useEffect(() => {\n    const requestMethod = {\n      method: \"Get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n    fetch(`plugins/config/${configProps.pluginId}`, requestMethod).then(response => response.json()).then(data => {\n      if (data.error) {\n        setMessage(data.error);\n      } else {\n        setPluginConfigElements(data as PluginConfigElement[]);\n      }\n    });\n\n    fetch(`plugins/${configProps.pluginId}`, requestMethod).then(response => response.json()).then(data => {\n      setSelectedPlugin(data as Plugin);\n    });\n  }, [appContext?.token, configProps.pluginId]);\n\n  const handleSectionClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation();\n  }\n\n  return (\n    <StyledSection onClick={handleSectionClick}>\n      <h2>Settings For Plugin: {selectedPlugin?.pluginInfo.name}</h2>\n      {pluginConfigElements.length ?\n        <article><ConfigArrayToFormMapper pluginConfigElements={pluginConfigElements} pluginId={configProps.pluginId} /></article> :\n        <article><Spinner /> <p>{message}</p></article>}\n    </StyledSection>\n  )\n}\n\nexport default ConfigComponent;\n","import React, { useContext, useEffect, useState } from 'react';\nimport AppContext from '../App/contextHelper';\nimport { AdminContext } from '../UserDashBoard/AdminDashBoard/ContextHelper';\nimport Plugin from '../../Interfaces/Plugin';\nimport styled from 'styled-components';\nimport colors from '../../Constants/colors';\nimport Spinner from '../Spinner/Spinner';\n\n\nconst StyledSection = styled.section`\n  font-family: Arial, sans-serif;\n  color: ${colors.darkBlack};\n  h2{\n    font-size: 1.2em;\n    border-bottom: 2px solid ${colors.blue};\n    color: ${colors.blue};\n  }\n\n  form {\n    article{\n      display: flex;\n      justify-content: center;\n      *{\n        margin: .3em;\n      }\n\n      input[type=\"text\"] {\n        border: none;\n        outline: none;\n        border-bottom: 2px solid ${colors.blue};\n        color: ${colors.darkBlack};\n        font-size: 1em;\n      }\n\n      button {\n        border: none;\n        color: ${colors.white};\n        padding: .5em;\n        border-radius: .3em;\n\n        &:hover {\n          cursor: pointer;\n        }\n      }\n\n      button#getButton {\n        background: ${colors.blue};\n      }\n\n      button#submitButton {\n        background: ${colors.green};\n        display: flex;\n        justify-content: space-around;\n        width: 30%;\n        align-items: center;\n\n        *{\n          margin: .3em;\n        }\n      }\n    }\n  }\n\n  div.message{\n    margin: .8em;\n  }\n`;\n\ninterface ActivationComponentInterface {\n  pluginId: number;\n}\n\nconst PluginActivationComponent: React.FC<ActivationComponentInterface> = ({ pluginId }) => {\n  const appContext = useContext(AppContext);\n  const adminContext = useContext(AdminContext);\n\n  const [selectedPlugin, setSelectedPlugin] = useState<Plugin>();\n  const [serialKeyValue, setSerialKeyValue] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  useEffect(() => {\n    const requestMethod = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n\n    fetch(`/plugins/${pluginId}`, requestMethod).then(response => response.json()).then(data => {\n      setSelectedPlugin(data as Plugin);\n    });\n  }, []);\n\n  const handleSectionClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation();\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n    setMessage(\"Updating...\");\n\n    const requestMethod = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      },\n      body: JSON.stringify({\n        pluginId,\n        pluginValidatorId: serialKeyValue\n      })\n    }\n\n    fetch('/plugins/setvalidatorid', requestMethod).then(response => response.json()).then(data => {\n      if (data.error) {\n        setMessage(data.error);\n      } else {\n        adminContext.setReloadEnhancer();\n        setMessage(data.success);\n      }\n    }).catch(error => {\n      setMessage(error.toString());\n    });\n\n    setIsLoading(false);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSerialKeyValue(event.currentTarget.value);\n  }\n\n\n\n  return (\n    <StyledSection onClick={handleSectionClick}>\n      <h2>Activation for {selectedPlugin?.pluginInfo.name}</h2>\n      <form onSubmit={handleSubmit}>\n        <article>\n          <label>Serial Key: </label>\n          <input type=\"text\" value={serialKeyValue} onChange={handleChange} />\n          <button type=\"button\" id=\"getButton\">Get</button>\n        </article>\n        <article>\n          <button type=\"submit\" id=\"submitButton\">Activate {isLoading && <Spinner />}</button>\n        </article>\n      </form>\n      <div className=\"message\">{message}</div>\n    </StyledSection>\n  )\n}\n\nexport default PluginActivationComponent\n","import React, { useContext, useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport colors from '../../../../Constants/colors';\nimport Plugin, { PluginResponse } from '../../../../Interfaces/Plugin';\nimport AppContext from '../../../App/contextHelper';\nimport CardContainer from '../../../Cards/CardContainer';\nimport { FaPlug } from 'react-icons/fa';\nimport Spinner from '../../../Spinner/Spinner';\nimport Modal from '../../../Modal/Modal';\nimport PluginView from '../../../PluginView/PluginView';\nimport ConfirmationDialog from '../../../Dialogs/ConfirmationDialog';\nimport { AdminContext } from '../ContextHelper';\nimport ConfigComponent from '../../../PluginConfigFormGenerator/ConfigComponent';\nimport PluginActivationComponent from '../../../PluginActivationComponent/PluginActivationComponent';\n\nconst PluginCard = styled.section`\n  flex: 1 1 auto;\n  box-sizing: border-box;\n  box-shadow: 3px 3px 3px #ccc;\n  display: flex;\n  flex-direction: row;\n  padding: .5em;\n  border-radius: .3em;\n  margin: .3em;\n  align-items: center;\n\n  &:hover {\n    box-shadow: 3px 3px 6px #aaa;\n  }\n  \n  section {\n    padding: .7em;\n    background: ${colors.lightBlack};\n    color: ${colors.darkBlack};\n    display: flex;\n    align-items: center;\n    border-radius: 50%;\n    font-size: 1.2em;\n    margin: .5em;\n  }\n\n  article {\n    h3{\n      margin: 0;\n      padding: 0;\n      color: ${colors.green};\n      font-weight: normal;\n    }\n    article {\n      font-size: .9em;\n      font-style: italic;\n    }\n\n    button {\n      color: ${colors.white};\n      border: none;\n      padding: .4em;\n      border-radius: .3em;\n      margin: .3em;\n      cursor: pointer;\n    }\n\n    button#configuration {\n      background: ${colors.blue};\n    }\n\n    button#delete {\n      background: ${colors.red};\n    }\n    \n    button#registration {\n      background: ${colors.green};\n      justify-self: center;\n    }\n  }\n\n`;\n\nconst PluginManagement: React.FC = (): JSX.Element => {\n  const appContext = useContext(AppContext);\n  const adminContext = useContext(AdminContext);\n\n  const [pluginsResponse, setPluginsResponse] = useState<PluginResponse[]>([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [configModalVisible, setConfigModalVisible] = useState(false);\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\n  const [activationModalVisible, setActivationModalVisible] = useState(false);\n  const [selectedPluginId, setSelectedPluginId] = useState(0);\n  const [message, setMessage] = useState('Loading...');\n\n  useEffect(() => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n\n    fetch('/plugins', requestOptions).then(response => response.json()).then(data => {\n      if (data.error) {\n        setMessage(data.error);\n      } else {\n        const pluginsResponse = data as PluginResponse[];\n        setPluginsResponse(pluginsResponse);\n      }\n    });\n\n  }, [adminContext, appContext]);\n\n  const handlePluginCardClick = (pluginId: number) => {\n    setSelectedPluginId(pluginId);\n    setModalVisible(true);\n  }\n\n  const handleConfigClick = (event: React.MouseEvent<HTMLButtonElement>, pluginId: number) => {\n    event.stopPropagation();\n    setSelectedPluginId(pluginId);\n    setConfigModalVisible(true);\n  }\n\n  const handleDeleteClick = (event: React.MouseEvent<HTMLButtonElement>, pluginId: number) => {\n    event.stopPropagation();\n    setSelectedPluginId(pluginId);\n    setDeleteModalVisible(true);\n  }\n\n  const handleDeleteConfirm = (setLoading: (status: boolean) => void, setMessage: (message: string) => void) => {\n    setLoading(true);\n    const requestMethod = {\n      method: \"Delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n\n    fetch(`/plugins/${selectedPluginId}`, requestMethod).then(responset => responset.json()).then(data => {\n      adminContext.setReloadEnhancer();\n      setMessage(data.success);\n      setLoading(false);\n      setDeleteModalVisible(false);\n      adminContext.setReloadEnhancer();\n    }).catch(error => {\n      setMessage(error.toString());\n    });\n  }\n\n  const handleActivationClick = (event: React.MouseEvent<HTMLButtonElement>, pluginId: number) => {\n    event.stopPropagation();\n    setSelectedPluginId(pluginId);\n    setActivationModalVisible(true);\n  }\n\n  return (\n    <CardContainer>\n      {pluginsResponse.length ? pluginsResponse.map(pluginResponse =>\n        <PluginCard key={pluginResponse.plugin.pluginInfo.pluginId} onClick={() => { handlePluginCardClick(pluginResponse.plugin.pluginInfo.pluginId) }}>\n          <section><FaPlug /></section>\n          <article>\n            <h3>{pluginResponse.plugin.pluginInfo.name}</h3>\n            <article>Version : {pluginResponse.plugin.pluginInfo.version ? pluginResponse.plugin.pluginInfo.version : \"-\"}</article>\n            {pluginResponse.valid ?\n              <article>\n                <button id=\"configuration\" onClick={(event) => handleConfigClick(event, pluginResponse.plugin.pluginInfo.pluginId)}>Settings</button>\n                <button id=\"delete\" onClick={(event) => { handleDeleteClick(event, pluginResponse.plugin.pluginInfo.pluginId) }}>Delete</button>\n              </article> :\n              <article>\n                <button id=\"registration\" onClick={(event) => { handleActivationClick(event, pluginResponse.plugin.pluginInfo.pluginId) }}>Activate</button>\n                <button id=\"delete\" onClick={(event) => { handleDeleteClick(event, pluginResponse.plugin.pluginInfo.pluginId) }}>Delete</button>\n              </article>\n\n            }\n          </article>\n        </PluginCard>) : <><Spinner /> {message}</>}\n      <Modal modalVisibility={modalVisible} resetModalVisibility={() => setModalVisible(false)}>\n        <PluginView pluginID={selectedPluginId} />\n      </Modal>\n      <Modal modalVisibility={deleteModalVisible} resetModalVisibility={() => setDeleteModalVisible(false)}>\n        <ConfirmationDialog onConfirm={handleDeleteConfirm}\n          onReject={() => { setDeleteModalVisible(false) }}\n          title=\"Confirm Plugin Delete\"\n          body=\"Confirming your action will delete the plugin\">\n        </ConfirmationDialog>\n      </Modal>\n      <Modal modalVisibility={configModalVisible} resetModalVisibility={() => { setConfigModalVisible(false) }}>\n        <ConfigComponent pluginId={selectedPluginId} />\n      </Modal>\n      <Modal modalVisibility={activationModalVisible} resetModalVisibility={() => { setActivationModalVisible(false) }}>\n        <PluginActivationComponent pluginId={selectedPluginId} />\n      </Modal>\n    </CardContainer>\n  )\n}\n\nexport default PluginManagement\n","import React, { useEffect, useState } from 'react'\nimport { useContext } from 'react'\nimport HomeContents from '../Contents/HomeContents';\nimport TokenBasesContent from '../Contents/TokenBasesContent';\nimport UserContents from '../Contents/UserContents';\nimport { AdminContext, Categories } from '../ContextHelper';\nimport CustomersContent from '../Contents/CustomersContent';\nimport CounterContent from '../Contents/CounterContent';\nimport CategoryContent from '../Contents/CategoryContent';\nimport TokenCountContent from '../Contents/TokenCountContent';\nimport PluginManagement from '../Contents/PluginManagement';\n\nconst Content = () => {\n  const [content, setContent] = useState(<></>);\n  const adminContext = useContext(AdminContext);\n\n  useEffect(() => {\n    if (adminContext.category === Categories.HOME)\n      setContent(<HomeContents />);\n    else if (adminContext.category === Categories.USERS)\n      setContent(<UserContents />);\n    else if (adminContext.category === Categories.CUSTOMERS)\n      setContent(<CustomersContent />);\n    else if (adminContext.category === Categories.TOKENBASES)\n      setContent(<TokenBasesContent />);\n    else if (adminContext.category === Categories.COUNTERMANAGEMENT)\n      setContent(<CounterContent />);\n    else if (adminContext.category === Categories.CATEGORIES)\n      setContent(<CategoryContent />);\n    else if (adminContext.category === Categories.TOKENCOUNT)\n      setContent(<TokenCountContent />);\n    else if (adminContext.category === Categories.PLUGINMANAGEMENT)\n      setContent(<PluginManagement />);\n  }, [adminContext])\n\n  return (\n    <div className=\"grid-content\">\n      {content}\n    </div>\n  )\n}\n\nexport default Content\n","import React from 'react'\nimport DashboardLayout from '../DashboardLayout'\nimport DashboardHeader from './Containers/DashboardHeader';\nimport Sidebar from './Containers/Sidebar';\nimport Content from './Containers/Content';\nimport { useState } from 'react';\nimport { AdminContext, AdminContextInterface, Categories, HeaderCategories } from './ContextHelper';\n\nconst AdminDashBoard = () => {\n  const [category, setCategory] = useState(Categories.HOME);\n  const [headerCategory, setHeaderCategory] = useState(HeaderCategories.NOHEADERS);\n  const [tokenFetchURL, setTokenFetchURL] = useState('/tokenbase');\n  const [reloadEnhancer, setReloadEnhancerValue] = useState(false);\n\n  const beginningContext: AdminContextInterface = {\n    category: category,\n    setCategory: (category: Categories) => { setCategory(category) },\n    headerCategory,\n    setHeaderCategory: (headerCategory: HeaderCategories) => { setHeaderCategory(headerCategory) },\n    tokenFetchURL,\n    setTokenFetchURL,\n    reloadEnhancer,\n    setReloadEnhancer: () => { setReloadEnhancerValue(!reloadEnhancer) }\n  }\n\n  return (\n    <AdminContext.Provider value={beginningContext}>\n      <DashboardLayout>\n        <DashboardHeader />\n        <Content />\n        <Sidebar />\n      </DashboardLayout>\n    </AdminContext.Provider >\n  )\n}\n\nexport default AdminDashBoard\n","import React from \"react\";\nimport CategoryInterface from \"../../../Interfaces/CategoryInterface\";\n\nexport interface OperatorContextInterface {\n  category: string | undefined;\n  setCategory: (category: string | undefined) => void;\n  availableCategories: CategoryInterface[],\n  setAvailableCategories: (categories: CategoryInterface[]) => void;\n}\n\nconst OperatorDummyContext: OperatorContextInterface = {\n  category: '',\n  setCategory: () => { },\n  availableCategories: [],\n  setAvailableCategories: (categories: CategoryInterface[]) => { }\n}\n\nexport const OperatorContext = React.createContext<OperatorContextInterface>(OperatorDummyContext);\n","import styled from \"styled-components\";\nimport colors from \"../../../../Constants/colors\";\n\nexport const Container = styled.article`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  \n  @media (min-width:600px) {\n    transform: translate(-20%, 0);\n  }\n`\nexport const TokenDisplay = styled.div`\n  display: flex;\n  flex-direction: column;\n  width :100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  h3{\n    font-size: 1.1em;\n    color: ${colors.blue};\n    margin :1em 0 0 0;\n    padding: 0;\n  }\n  div.token {\n    font-size: 5em;\n    margin: .1em;\n    padding: 0;\n    border-bottom :3px solid ${colors.blue};\n    color: ${colors.green};\n    width: 3em;\n    text-align: center;\n  }\n  div.message {\n    color: ${colors.darkBlack};\n    margin: .5em;\n    text-align: center;\n    height: 1.25em;\n  }\n`;\nexport const Operation = styled.div`\n  width: 100%;\n\n  div.primary {\n    display: flex;\n    justify-content: center;\n\n    button {\n      margin: 1em;\n      padding: .5em;\n      border: 0;\n      background: ${colors.darkBlack};\n      color: ${colors.white};\n      cursor: pointer;\n\n      &:hover {\n        background: ${colors.blue};\n      }\n    }\n  }\n\n  div.secondary {\n    color: ${colors.darkBlack};\n    margin: 1em 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    div.forward, div.random{\n      margin: .5em 0;\n      \n      select {\n        outline: none;\n        border: none;\n        border-bottom: 2px solid ${colors.blue};\n        color: ${colors.lightBlack};\n        font-size: 1em;\n        margin: 0 .3em;\n      }\n\n      button {\n        padding: .5em;\n        background: ${colors.lightBlack};\n        border: none;\n        color: white;\n        cursor: pointer;\n        margin :0 .3em;\n\n        &:hover {\n          background: ${colors.blue};\n        }\n      }\n    }\n  }\n`;","import styled from \"styled-components\";\nimport colors from \"../../Constants/colors\";\n\nconst FormContainer = styled.section`\n  margin: 0;\n  padding: .3em;\n  color: ${colors.darkBlack};\n\n  h3{\n    color: ${colors.blue};\n    border-bottom: 2px solid ${colors.blue};\n    font-size: 1.1em;\n    margin: .5em 0;\n    padding: 0;\n  }\n\n  form {\n    font-size: .9em;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-bottom: 2px solid ${colors.blue};\n\n    .inputs{\n      select {\n        padding: .3em;\n        border: none;\n        border-bottom: 2px solid ${colors.blue};\n        color: ${colors.darkBlack};\n      }\n      input {\n        margin: 0 .3em;\n        border : none;\n        outline: none;\n        border-bottom: 2px solid ${colors.blue};\n        padding: .3em;\n      }\n    }\n    button {\n        border: none;\n        background: ${colors.darkBlack};\n        outline: none;\n        padding: .5em;\n        margin: .5em 0;\n        color: ${colors.white};\n        cursor: pointer;\n\n        &:hover {\n          background: ${colors.blue};\n        }\n      }\n  }\n\n  .message {\n    height: 1.2em;\n  }\n`;\n\nexport default FormContainer;","import React, { useContext, useState } from 'react';\nimport { useEffect } from 'react';\nimport CategoryInterface from '../../Interfaces/CategoryInterface';\nimport AppContext from '../App/contextHelper';\nimport Spinner from '../Spinner/Spinner';\nimport FormContainer from './RandomCall.style';\n\n\n\nconst RandomCallForm = () => {\n\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [tokenNumber, setTokenNumber] = useState('');\n  const [allCategories, setAllCategories] = useState<CategoryInterface[]>([{\n    category: \"\",\n    categoryName: \"Uncategorized\",\n    currentTokenCount: 0,\n    latestCustomerTokenCount: 0\n  }]);\n  const [isCallProcessOngoing, setIsCallProcessOngoing] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const appContext = useContext(AppContext);\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsCallProcessOngoing(true);\n    setMessage('Processing Your Call...');\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      },\n      body: JSON.stringify({\n        category: `${selectedCategory}`,\n        actedTokenNumber: `${tokenNumber}`\n      })\n    }\n\n    fetch('/tokencaller/callrandom', requestOptions).then(response => response.json()).then(data => {\n      setIsCallProcessOngoing(false);\n      if (data.error) {\n        setMessage(data.error);\n      } else {\n        setMessage(\"Random Calling Succeeded!!\");\n      }\n    }).catch(error => {\n      setMessage(error.toString());\n    })\n  }\n\n  const handleSelectedCategoryChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedCategory(event.currentTarget.value);\n  }\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTokenNumber(event.currentTarget.value);\n  }\n\n  useEffect(() => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n\n    fetch('tokenbase/getalltokencategories', requestOptions).then(response => response.json()).then(data => {\n      setAllCategories(allCategories => [...allCategories, ...(data as CategoryInterface[])]);\n    });\n\n  }, [appContext?.token]);\n\n  return (\n    <FormContainer onClick={(event) => { event.stopPropagation() }}>\n      <h3>Random Token Call</h3>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"inputs\">\n          Category:\n          <select onChange={handleSelectedCategoryChange}>\n            {allCategories.map(categoryInterface =>\n              <option value={categoryInterface.category} key={categoryInterface.category ? categoryInterface.category : \"-\"}>\n                {categoryInterface.category}-{categoryInterface.categoryName}\n              </option>)}\n          </select>\n          <input type=\"number\" placeholder=\"Token No.\" size={5} onChange={handleInputChange} />\n        </div>\n        <button>Call Random {isCallProcessOngoing && <Spinner />}</button>\n      </form>\n      <div className=\"message\">\n        {message}\n      </div>\n    </FormContainer>\n  );\n}\n\nexport default RandomCallForm;\n","import React, { useState } from 'react';\nimport { Container, Operation, TokenDisplay } from './Content.style';\nimport { LocalStorageConstant, ProcessingType, PropsToContentContainer } from './Content';\nimport Spinner from '../../../Spinner/Spinner';\nimport Modal from '../../../Modal/Modal';\nimport RandomCallForm from '../../../RandomCallForm/RandomCallForm';\n\n\nconst ContentContainer: React.FC<{ props: PropsToContentContainer }> = ({ props }) => {\n  const [selectedForwardCounter, setSelectedForwardCounter] = useState('');\n  const [randomCallModalVisible, setRandomCallModalVisible] = useState(false);\n\n  const handleDivDoubleClick = () => {\n    const processingToken = {\n      date: new Date(),\n      tokenId: 0,\n      tokenNumber: 0,\n      tokenCategory: \"\"\n    }\n    props.setProcessingToken(processingToken);\n    localStorage.setItem(LocalStorageConstant.PROCESSINGTOKEN, JSON.stringify(processingToken));\n  }\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedForwardCounter(event.currentTarget.value);\n  }\n\n  return (\n    <Container>\n      <TokenDisplay>\n        <h3>You are Currently Calling :</h3>\n        <div className=\"token\" onDoubleClick={handleDivDoubleClick}>\n          {props.processingToken ? `${props.processingToken.tokenCategory ? props.processingToken.tokenCategory : ''}${props.processingToken.tokenNumber}` : 0}\n        </div>\n        <div className=\"message\">{props.message}</div>\n      </TokenDisplay>\n      <Operation>\n        <div className=\"primary\">\n          <button onClick={() => { props.handlePrimaryTokenProcessing(ProcessingType.CALLAGAIN) }}>\n            Call Again {props.isCallAgainProcessing && <Spinner />}\n          </button>\n          <button onClick={() => { props.handlePrimaryTokenProcessing(ProcessingType.COMPLETED) }}>\n            Completed {props.isCompletedProcessing && <Spinner />}\n          </button>\n          <button onClick={() => { props.handlePrimaryTokenProcessing(ProcessingType.BYPASS) }}>\n            Bypass {props.isBypassProcessing && <Spinner />}\n          </button>\n        </div>\n        <div className=\"secondary\">\n          <div className=\"forward\">\n            Forward :\n            <select onChange={handleSelectChange}>\n              {props.allOperators.map(operator => <option value={operator.counter} key={operator.id}>{operator.counter}-{operator.username}</option>)}\n            </select>\n            <button onClick={() => { props.handleTokenForward(selectedForwardCounter) }}>\n              Forward {props.isForwardProcessing && <Spinner />}\n            </button>\n          </div>\n          <div className=\"random\">\n            <button onClick={() => { setRandomCallModalVisible(true) }}>Random Call</button>\n          </div>\n        </div>\n      </Operation>\n      <Modal modalVisibility={randomCallModalVisible} resetModalVisibility={() => { setRandomCallModalVisible(false) }}>\n        <RandomCallForm />\n      </Modal>\n    </Container>\n  )\n}\n\nexport default ContentContainer\n","import React, { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport CategoryInterface from '../../../Interfaces/CategoryInterface';\nimport AppContext from '../../App/contextHelper';\nimport DashboardLayout from '../DashboardLayout';\nimport Content from './Containers/Content';\nimport Header from './Containers/Header';\nimport { OperatorContext, OperatorContextInterface } from './ContextHelper';\n\nexport enum OperatorCategory {\n  CATEGORY = \"operatorCategory\"\n}\n\nconst OperatorDashboard = () => {\n  const appContext = useContext(AppContext);\n  const [category, setCategory] = useState<string | undefined>('');\n  const [availableCategories, setAvailableCategories] = useState<CategoryInterface[]>([{\n    category: undefined,\n    categoryName: 'Uncategorized',\n    currentTokenCount: 0,\n    latestCustomerTokenCount: 0\n  }]);\n\n  const saveCategory = (category: string | undefined) => {\n    let convertedCounter = category === undefined ? '' : category;\n    localStorage.setItem(OperatorCategory.CATEGORY, convertedCounter);\n    setCategory(category);\n  }\n\n  const initialContext: OperatorContextInterface = {\n    category,\n    setCategory: saveCategory,\n    availableCategories,\n    setAvailableCategories: (categories: CategoryInterface[]) => { setAvailableCategories(categories) }\n  }\n\n  useEffect(() => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n    const savedCategory = localStorage.getItem(OperatorCategory.CATEGORY);\n    const convertedCategory = (savedCategory) ? savedCategory : undefined;\n\n    fetch('tokenbase/getalltokencategories', requestOptions).then(response => response.json()).then(data => {\n      setAvailableCategories(categories => [...categories, ...(data as CategoryInterface[])]);\n      if ((data as CategoryInterface[]).find(categoryInterface => categoryInterface.category === convertedCategory)) {\n        setCategory(convertedCategory);\n      } else {\n        setCategory(undefined);\n      }\n    });\n\n  }, [appContext?.token]);\n\n  return (\n    <OperatorContext.Provider value={initialContext}>\n      <DashboardLayout>\n        <Header />\n        <Content />\n      </DashboardLayout>\n    </OperatorContext.Provider>\n  )\n}\n\nexport default OperatorDashboard;\n","import React, { useContext } from 'react'\nimport styled from 'styled-components';\nimport colors from '../../../../Constants/colors';\nimport AppContext from '../../../App/contextHelper';\nimport { OperatorContext } from '../ContextHelper';\n\nconst Section = styled.section`\n  color: ${colors.darkBlack};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-size: .9em; \n  width: 100%;\n  \n  @media (min-width:600px) {\n    transform: translate(-20%, 0);\n  }\n  \n  section {\n    padding: .1em;\n    flex: 0 0 auto;\n  }\n\n  section.category {\n    border-left: 2px solid ${colors.lightBlack};\n    padding-left: .5em;\n    \n    span select {\n        padding: 0;\n        margin: 0;\n        border: none;\n        outline: none;\n        border-bottom :2px solid ${colors.blue};\n        padding: .3em;\n    }\n  }\n`\n\n\nconst Header = () => {\n  const appContext = useContext(AppContext);\n  const operatorContext = useContext(OperatorContext);\n\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    operatorContext.setCategory(event.currentTarget.value ? event.currentTarget.value : undefined);\n  }\n\n  return (\n    <section className=\"grid-header\">\n      <Section>\n        <section>\n          Counter : <span className=\"counter\">{appContext?.loggedInUser?.counter}</span>\n        </section>\n        <section className=\"category\">\n          <span>Category : </span>\n          <span className=\"form\">\n            <select onChange={handleSelectChange} value={operatorContext.category}>\n              {operatorContext.availableCategories.map(category =>\n                <option value={category.category ? category.category : ''} key={category.category ? category.category : '-'}>\n                  {category.category} - {category.categoryName}\n                </option>)}\n            </select>\n          </span>\n        </section>\n      </Section>\n    </section>\n  )\n}\n\nexport default Header\n","import React from \"react\";\n\nexport enum RegistratorCategories {\n  CUSTOMERS = \"Customers\",\n  TOKENCOUNT = \"TokenCount\",\n  HOME = \"Home\"\n}\n\nexport enum HeaderCategories {\n  TODAYSTOKENBASES = \"TodaysTokenBases\",\n  ALLTOKENBASES = \"AllTokenBases\"\n}\n\nexport interface RegistratorContextInterface {\n  category: RegistratorCategories;\n  setCategory: (category: RegistratorCategories) => void;\n  headerCategory: HeaderCategories;\n  setHeaderCategory: (category: HeaderCategories) => void;\n}\n\nexport const dummyContext: RegistratorContextInterface = {\n  category: RegistratorCategories.CUSTOMERS,\n  setCategory: (category: RegistratorCategories) => { },\n  headerCategory: HeaderCategories.TODAYSTOKENBASES,\n  setHeaderCategory: (category: HeaderCategories) => { }\n}\n\nexport const RegistratorContext = React.createContext<RegistratorContextInterface>(dummyContext);","import UserInterface from \"../../Interfaces/UserInterface\";\nimport React from 'react';\n\nexport const initialState: State = {\n  connectionError: false,\n  isLoggedIn: false,\n  pageLoading: true,\n  superAdminExistance: false,\n  token: '',\n  user: null\n}\n\nexport enum ActionTypes {\n  SETSUPERADMINEXISTANCE = \"SetSuperAdminExistance\",\n  SETPAGELOADING = \"SetPageLoading\",\n  SETCONNECTIONERROR = \"setConnectionError\",\n  SETISLOGGEDIN = \"setIsLoggedIn\",\n  SETUSER = \"setUser\",\n  SETTOKEN = \"setToken\"\n}\n\nexport interface State {\n  superAdminExistance: boolean;\n  pageLoading: boolean;\n  connectionError: boolean;\n  isLoggedIn: boolean;\n  user: UserInterface | null;\n  token: string;\n}\n\nexport interface Action {\n  type: ActionTypes;\n  payLoad?: UserInterface | string | boolean | null;\n}\n\nconst appReducer: React.Reducer<State, Action> = (state: State, action: Action): State => {\n  switch (action.type) {\n    case ActionTypes.SETCONNECTIONERROR:\n      return { ...state, connectionError: action.payLoad as boolean };\n    case ActionTypes.SETISLOGGEDIN:\n      return { ...state, isLoggedIn: action.payLoad as boolean };\n    case ActionTypes.SETPAGELOADING:\n      return { ...state, pageLoading: action.payLoad as boolean };\n    case ActionTypes.SETSUPERADMINEXISTANCE:\n      return { ...state, superAdminExistance: action.payLoad as boolean };\n    case ActionTypes.SETUSER:\n      return { ...state, user: (action.payLoad && 'id' in (action.payLoad as UserInterface)) ? action.payLoad as UserInterface : null };\n    case ActionTypes.SETTOKEN:\n      return { ...state, token: (typeof action.payLoad === 'string') ? action.payLoad : '' };\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;","import styled from \"styled-components\";\nimport colors from \"../../../../Constants/colors\";\n\nconst ContentContainer = styled.div`\n    \n    padding: 1em .5em;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n    overflow: hidden;\n\n    div.search {\n      margin-top: 1.5em;\n      color: ${colors.white};\n      background: ${colors.red};\n      display: flex;\n      font-size: 2em;\n      border-radius: 2em;\n      border: 0;\n      cursor: pointer;\n      align-self: flex-end;\n      transition: all .4s;\n      overflow: hidden;\n      justify-content: flex-end;\n      flex: 0 0 1.5em;\n  \n      .search-icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex: 0 0 1.5em;\n      }\n  \n  \n      input {\n        border-radius: inherit;\n        background: ${colors.red};\n        color: ${colors.white};\n        border: 0;\n        outline: none;\n        width: 90%;\n        font-size: .7em;\n        padding-left: .5em;\n  \n        &::placeholder {\n          font-family: Arial, sans-serif;\n          color: ${colors.lightBlack};\n        }\n      }\n    }\n\n    section.list-container {\n      height: 100%;\n      overflow: scroll;\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      flex-wrap: wrap;\n      scrollbar-color: ${colors.red} ${colors.white};\n      scrollbar-width: 5px;\n\n      &::-webkit-scrollbar {\n        width: 7px;\n      }\n    \n      &::-webkit-scrollbar-thumb {\n        background-color: ${colors.red};\n        border-radius: 5px;\n      }\n    }\n\n\n    h2{\n      font-size: 1.5em;\n      margin: 0;\n      padding: 0;\n      color: ${colors.blue};\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n\n      section{\n        sup {\n          font-size: .5em;\n          box-sizing: border-box;\n          height: 2.3em;\n          width: 2.3em;\n          margin-left: .3em;\n          background: ${colors.red};\n          color: ${colors.white};\n          border-radius: 50%;\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          \n        }\n        span.delete{\n          color: red;\n        }\n      }\n\n      span{\n        font-size: 1.5em;\n        cursor: pointer;\n      }\n    }\n  `;\nexport default ContentContainer;\n","import React, { useContext, useEffect } from 'react'\nimport { useState } from 'react';\nimport Customer from '../../../../Interfaces/Customer';\nimport AppContext from '../../../App/contextHelper';\nimport { HeaderCategories, RegistratorContext } from '../ContextHelper';\nimport { MdAddCircle } from 'react-icons/md';\nimport { RiEraserFill } from 'react-icons/ri';\nimport Modal from '../../../Modal/Modal';\nimport CustomerCreationForm from '../../../CustomerForms/CustomerCreationForm';\nimport CustomerCard from '../../../Cards/CustomerCard';\nimport Search from '../../../Search/Search';\nimport ContentContainer from './CustomerContent.style';\nimport ConfirmationDialog from '../../../Dialogs/ConfirmationDialog';\nimport Spinner from '../../../Spinner/Spinner';\n\nconst CustomersContent = () => {\n  const appContext = useContext(AppContext);\n  const registratorContext = useContext(RegistratorContext);\n\n  const [allCustomers, setAllCustomers] = useState<Customer[]>([]);\n  const [displableCustomers, setDisplableCustomers] = useState<Customer[]>([]);\n  const [message, setMessage] = useState('');\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [confirmationModalVisibility, setConfirmationModalVisibility] = useState(false);\n\n\n  useEffect(() => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Berer ${appContext?.token}`\n      }\n    }\n\n    fetch('/customer', requestOptions).then(response => response.json()).then(data => {\n      if (data.error)\n        setMessage(data.error.toString());\n      else {\n        if (registratorContext.headerCategory === HeaderCategories.TODAYSTOKENBASES) {\n          const requiredCustomers = (data as Customer[]).filter(customer => {\n            const tokenDate = new Date(customer.token.date);\n            const today = new Date();\n            return tokenDate.getDate() === today.getDate() && tokenDate.getMonth() === today.getMonth() && tokenDate.getFullYear() === today.getFullYear();\n          });\n          setAllCustomers(requiredCustomers.sort((a, b) => (b.customerId - a.customerId)));\n          setDisplableCustomers(requiredCustomers.sort((a, b) => (b.customerId - a.customerId)));\n        } else {\n          setAllCustomers((data as Customer[]).sort((a, b) => (b.customerId - a.customerId)));\n          setDisplableCustomers((data as Customer[]).sort((a, b) => (b.customerId - a.customerId)));\n        }\n      }\n    });\n\n  }, [appContext?.token, registratorContext]);\n\n  const handleAddIconClick = (event: React.MouseEvent<HTMLHeadingElement>) => {\n    setModalVisibility(true);\n  }\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const filteredCustomers = allCustomers.filter(customer => customer.customerName.includes(event.currentTarget.value));\n    setDisplableCustomers(filteredCustomers);\n  }\n\n  const addNewCustomerInState = (customer: Customer) => {\n    setAllCustomers(allCustomers => [customer, ...allCustomers]);\n    setDisplableCustomers(allCustomers => [customer, ...allCustomers]);\n  }\n\n  const updateCustomerOnUI = (customer: Customer) => {\n    setAllCustomers(allCustomers => allCustomers.map(loopCustomer => {\n      if (customer.customerId === loopCustomer.customerId) {\n        return customer;\n      }\n      return loopCustomer;\n    }));\n\n    setDisplableCustomers(allCustomers => allCustomers.map(loopCustomer => {\n      if (customer.customerId === loopCustomer.customerId) {\n        return customer;\n      }\n      return loopCustomer;\n    }));\n  }\n\n  const handleEraseIconClick = () => {\n    setConfirmationModalVisibility(true);\n  }\n\n  const onConfirmClick = (setLoading: (status: boolean) => void, setMessage: (message: string) => void) => {\n    setLoading(true);\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n\n    fetch('/customer/delete/allcustomers', requestOptions).then(response => response.status).then(status => {\n      if (status === 200) {\n        setAllCustomers([]);\n        setDisplableCustomers([]);\n        setConfirmationModalVisibility(false);\n      } else {\n        setMessage(`Error occured with status: ${status}`);\n      }\n    });\n  }\n\n  return (\n    <ContentContainer>\n      <h2>\n        <section>Customers<sup>{allCustomers.length}</sup></section>\n        <section>\n          <span onClick={handleAddIconClick}><MdAddCircle /></span>\n          <span onClick={handleEraseIconClick} className=\"delete\"><RiEraserFill /></span>\n        </section>\n      </h2>\n      {allCustomers.length ? '' : message}\n      <section className=\"list-container\">\n        {allCustomers.length ? '' : <Spinner />}\n        {displableCustomers.map(customer => <CustomerCard customer={customer} key={customer.customerId} updateCustomerOnUI={updateCustomerOnUI} />)}\n      </section>\n      <Search handleSearchChange={handleSearchChange} placeholderText=\"Search By Customer Name\" />\n      <Modal modalVisibility={modalVisibility} resetModalVisibility={() => setModalVisibility(false)}>\n        <CustomerCreationForm updateCustomersList={addNewCustomerInState} modalClose={() => setModalVisibility(false)} />\n      </Modal>\n      <Modal modalVisibility={confirmationModalVisibility} resetModalVisibility={() => setConfirmationModalVisibility(false)}>\n        <ConfirmationDialog body=\"This will delete all Customers stored\" title=\"Delete All Customers?\" onConfirm={onConfirmClick} onReject={() => { setConfirmationModalVisibility(false) }} />\n      </Modal>\n\n    </ContentContainer >\n  )\n}\n\nexport default CustomersContent\n","import React, { useEffect } from 'react'\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport colors from '../../../../Constants/colors';\nimport CateogryInterface from '../../../../Interfaces/CategoryInterface';\nimport TokenBase, { TokenStatus } from '../../../../Interfaces/TokenBase';\nimport AppContext from '../../../App/contextHelper';\nimport CardContainer from '../../../Cards/CardContainer';\nimport Spinner from '../../../Spinner/Spinner';\n\nconst StyledSection = styled.section`\n  margin: .3em;\n  padding: .3em;\n  box-shadow: 3px 3px 3px #ccc;\n  border-radius: .3em;\n  flex: 1 1 auto;\n  color: ${colors.darkBlack};\n\n  h3{\n    color: ${colors.blue};\n    border-bottom: 2px solid ${colors.blue};\n    font-size: 1em;\n    margin: 0;\n  }\n\n  article {\n    padding: .3em;\n\n    p{\n      margin: 0;\n      paddig: 0;\n      font-size: .9em;\n\n      span {\n        font-weight: bold;\n      }\n\n      span.green {\n        color: ${colors.green};\n      }\n      span.blue{\n        color: ${colors.blue};\n      }\n      span.red{\n        color: ${colors.red};\n      }\n    }\n  }\n`;\n\ninterface CategoryCard {\n  symbol: string | undefined;\n  name: string;\n  totalTokens: number;\n  unprocessed: number;\n}\n\nconst HomeContents = () => {\n  const appContext = useContext(AppContext);\n  const [categoryCards, setCategoryCards] = useState<CategoryCard[]>([]);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${appContext?.token}`\n      }\n    }\n\n    fetch('/tokenbase/getalltokencategories', requestOptions).then(response => response.json()).then(category => {\n      const today = new Date();\n      fetch(`tokenbase/filterbydate/${today.toString()}`, requestOptions).then(response => response.json()).then(todaysTokens => {\n        if (todaysTokens.error) {\n          setMessage('No tokens in tokenbase');\n        } else {\n          (category as CateogryInterface[]).push({\n            category: undefined,\n            categoryName: 'Uncategorized',\n            currentTokenCount: 0,\n            latestCustomerTokenCount: 0\n          });\n          (category as CateogryInterface[]).forEach(categoryInterface => {\n            const tokensOfCategory = (todaysTokens as TokenBase[]).filter(tokenBase => tokenBase._token.tokenCategory === categoryInterface.category);\n            const name = categoryInterface.categoryName;\n            const totalTokens = tokensOfCategory.length;\n            const unprocessed = tokensOfCategory.filter(tokenbase => tokenbase._currentStatus === TokenStatus.UNPROCESSED).length;\n\n            const categoryCard: CategoryCard = {\n              name,\n              symbol: categoryInterface.category,\n              totalTokens,\n              unprocessed\n            }\n            setCategoryCards(cards => [categoryCard, ...cards]);\n          })\n        }\n      });\n    });\n\n  }, [appContext])\n\n  return (\n    <CardContainer>\n      {\n        categoryCards.length ?\n          categoryCards.map(categoryCard => {\n            return (\n              <StyledSection key={categoryCard.symbol ? categoryCard.symbol : '-'}>\n                <h3>Category: {categoryCard.symbol}</h3>\n                <article>\n                  <p>Name: <span className=\"green\">{categoryCard.name}</span></p>\n                  <p>Total Tokens: <span className=\"blue\">{categoryCard.totalTokens}</span></p>\n                  <p>Unprocessed: <span className=\"red\">{categoryCard.unprocessed}</span></p>\n                </article>\n              </StyledSection>\n            )\n          }) :\n          <div>\n            <p>{message}</p>\n            <Spinner />\n          </div>\n      }\n    </CardContainer>\n  )\n}\n\nexport default HomeContents;\n","import React, { useEffect, useState } from 'react';\nimport { useContext } from 'react';\nimport CateogryInterface from '../../../../Interfaces/CategoryInterface';\nimport AppContext from '../../../App/contextHelper';\nimport CardContainer from '../../../Cards/CardContainer';\nimport TokenCountCard from '../../../Cards/TokenCountCard';\n\n\nconst TokenCountContent = () => {\n  const [categories, setCategories] = useState<CateogryInterface[]>([]);\n  const appContext = useContext(AppContext);\n\n  useEffect(() => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${appContext?.token}`\n      }\n    }\n    fetch('tokenbase/getalltokencategories', requestOptions).then(response => response.json()).then(categoryInterfaces => {\n      const uncategorizedCategoryInterface: CateogryInterface = {\n        category: undefined,\n        categoryName: 'Uncategorized',\n        currentTokenCount: 0,\n        latestCustomerTokenCount: 0\n      };\n      (categoryInterfaces as CateogryInterface[]).unshift(uncategorizedCategoryInterface);\n      setCategories(categoryInterfaces);\n    });\n  }, [appContext]);\n\n  return (\n    <CardContainer>\n      {categories.map(category => <TokenCountCard categoryInterface={category} key={category.category ? category.category : '-'} />)}\n    </CardContainer>\n  )\n}\n\nexport default TokenCountContent\n","import React, { useContext } from 'react'\nimport CustomersContent from '../Contents/CustomersContent';\nimport HomeContents from '../Contents/HomeContents';\nimport TokenCountContent from '../Contents/TokenCountContent';\nimport { RegistratorCategories, RegistratorContext } from '../ContextHelper';\n\nconst Content = () => {\n  const registratorContext = useContext(RegistratorContext);\n  return (\n    <section className=\"grid-content\">\n      {registratorContext.category === RegistratorCategories.HOME && <HomeContents />}\n      {registratorContext.category === RegistratorCategories.CUSTOMERS && <CustomersContent />}\n      {registratorContext.category === RegistratorCategories.TOKENCOUNT && <TokenCountContent />}\n    </section>\n  )\n}\n\nexport default Content;\n","import React, { useContext } from 'react';\nimport { ImUserTie } from 'react-icons/im';\nimport { FaUserEdit } from 'react-icons/fa';\nimport { HeaderCategories, RegistratorContext } from '../ContextHelper';\n\nconst CustomersHeader = () => {\n  const registratorContext = useContext(RegistratorContext);\n\n  const handleHeaderIconClcik = (category: HeaderCategories) => {\n    registratorContext.setHeaderCategory(category);\n  }\n\n  return (\n    <nav>\n      <ul>\n        <li className={registratorContext.headerCategory === HeaderCategories.TODAYSTOKENBASES ? \"active\" : \"\"} onClick={() => { handleHeaderIconClcik(HeaderCategories.TODAYSTOKENBASES) }}>\n          <span >\n            <FaUserEdit />\n          </span> Today's Customers\n        </li>\n        <li className={registratorContext.headerCategory === HeaderCategories.ALLTOKENBASES ? \"active\" : \"\"} onClick={() => { handleHeaderIconClcik(HeaderCategories.ALLTOKENBASES) }}>\n          <span>\n            <ImUserTie />\n          </span> All Customers\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default CustomersHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport colors from '../../../../Constants/colors'\n\nconst StyledH2 = styled.h2`\n  color: ${colors.blue};\n  font-size: 1.3em;\n  padding-left: 1em;\n`\n\nconst HomeHeader = () => {\n  return (\n    <StyledH2>Today's Statistics</StyledH2>\n  )\n}\n\nexport default HomeHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport colors from '../../../../Constants/colors';\nimport { TiWarningOutline } from 'react-icons/ti';\n\nconst StyledHeading = styled.h2`\n  color: ${colors.red};\n  font-size: 1.1em;\n  font-weight: normal;\n\n  .warning{\n    font-size: 2em;\n    vertical-align: bottom;\n  }\n`;\n\nconst TokenCountHeader = () => {\n  return (\n    <StyledHeading><TiWarningOutline className=\"warning\" /> Caution!! Use Setting Functionalities Carefully</StyledHeading>\n  )\n}\n\nexport default TokenCountHeader\n","import React, { useEffect, useState } from 'react'\nimport { useContext } from 'react'\nimport styled from 'styled-components';\nimport colors from '../../../../Constants/colors';\nimport { RegistratorCategories, RegistratorContext } from '../ContextHelper';\nimport CustomersHeader from '../Headers/CustomersHeader';\nimport { TiThMenu } from 'react-icons/ti';\nimport { ImUsers } from 'react-icons/im';\nimport { GiCard7Clubs } from 'react-icons/gi';\nimport { FaHome } from 'react-icons/fa';\nimport HomeHeader from '../../RegistratorDashboard/Headers/HomeHeader';\nimport TokenCountHeader from '../Headers/TokenCountHeader';\n\nconst HamburgerHolder = styled.div`\n  font-size: 1.5em;\n  align-self: center;\n  color: ${colors.red};\n  cursor: pointer;\n\n  @media (min-width: 600px) {\n    display: none;\n  }\n\n  ul {\n    margin: 0;\n    padding: .6em 0;\n    list-style-type: none;\n    font-size: .7em;\n    position: absolute;\n    background: ${colors.white};\n    border: 1px solid ${colors.lightBlack};\n    width: 40%;\n    z-index: 100000;\n\n    li {\n      margin: 0;\n      padding: .5em;\n      box-sizing: border-box;\n      cursor: pointer;\n      color: ${colors.darkBlack};\n      \n      &:hover {\n        font-weight: bold;\n        color: ${colors.green};\n      }\n\n      span {\n        color: ${colors.darkBlack};\n        padding: .5em .3em;\n      }\n    }\n\n    li.active {\n      background: ${colors.lightBlack};\n      border-left: 5px solid ${colors.darkBlack};\n      color: ${colors.white};\n    }\n\n`;\n\n\nconst Header = () => {\n  const registratorContext = useContext(RegistratorContext);\n\n  const [header, setHeader] = useState(<></>);\n  const [activeAssign, setActiveAssign] = useState(RegistratorCategories.CUSTOMERS);\n  const [hamburgerExpand, setHamburgerExpand] = useState(false);\n\n  useEffect(() => {\n    setActiveAssign(registratorContext.category ? registratorContext.category : RegistratorCategories.HOME);\n    setHamburgerExpand(false);\n    if (registratorContext.category === RegistratorCategories.HOME)\n      setHeader(<HomeHeader />);\n    else if (registratorContext.category === RegistratorCategories.CUSTOMERS)\n      setHeader(<CustomersHeader />);\n    else if (registratorContext.category === RegistratorCategories.TOKENCOUNT)\n      setHeader(<TokenCountHeader />);\n    else\n      setHeader(<></>);\n  }, [registratorContext]);\n\n  const handleClick = (category: RegistratorCategories) => {\n    setActiveAssign(category);\n    registratorContext.setCategory(category);\n  }\n\n  const toggleHamburgerExpand = () => {\n    setHamburgerExpand(hamburgerExpand => !hamburgerExpand);\n  }\n\n  return (\n    <section className=\"grid-header\">\n      <HamburgerHolder>\n        <TiThMenu onClick={toggleHamburgerExpand} />\n        {hamburgerExpand &&\n          <ul>\n            <li className={activeAssign === RegistratorCategories.HOME ? 'active' : ''} onClick={() => handleClick(RegistratorCategories.HOME)}>\n              <span><FaHome /></span>Home\n            </li>\n            <li className={activeAssign === RegistratorCategories.CUSTOMERS ? 'active' : ''} onClick={() => handleClick(RegistratorCategories.CUSTOMERS)}>\n              <span><ImUsers /></span> Customers\n            </li>\n            <li className={activeAssign === RegistratorCategories.TOKENCOUNT ? 'active' : ''} onClick={() => handleClick(RegistratorCategories.TOKENCOUNT)}>\n              <span><GiCard7Clubs /></span>TokenCount\n            </li>\n          </ul>\n        }\n      </HamburgerHolder>\n      {header}\n    </section>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { ImUsers } from 'react-icons/im';\nimport { GiCard7Clubs } from 'react-icons/gi';\nimport { useContext } from 'react';\nimport { RegistratorCategories, RegistratorContext } from '../ContextHelper';\nimport { FaHome } from 'react-icons/fa';\n\nconst Sidebar = () => {\n  const registratorContext = useContext(RegistratorContext);\n\n  const setCategory = (category: RegistratorCategories) => {\n    registratorContext.setCategory(category);\n  }\n\n  return (\n    <nav className=\"grid-sidebar\">\n      <ul>\n        <li className={registratorContext.category === RegistratorCategories.HOME ? 'active' : ''} onClick={() => { setCategory(RegistratorCategories.HOME) }}>\n          <span><FaHome /></span>Home\n        </li>\n        <li className={registratorContext.category === RegistratorCategories.CUSTOMERS ? 'active' : ''} onClick={() => { setCategory(RegistratorCategories.CUSTOMERS) }}>\n          <span><ImUsers /></span>Customers\n        </li>\n        <li className={registratorContext.category === RegistratorCategories.TOKENCOUNT ? 'active' : ''} onClick={() => { setCategory(RegistratorCategories.TOKENCOUNT) }}>\n          <span><GiCard7Clubs /></span>TokenCount\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Sidebar\n","import React, { useState } from 'react'\nimport DashboardLayout from '../DashboardLayout'\nimport Content from './Containers/Content'\nimport Header from './Containers/Header'\nimport Sidebar from './Containers/Sidebar'\nimport { HeaderCategories, RegistratorCategories, RegistratorContext, RegistratorContextInterface } from './ContextHelper'\n\nconst RegistratorDashboard = () => {\n\n  const [registratorCategory, setRegistratorCategory] = useState(RegistratorCategories.HOME);\n  const [headerCategory, setHeaderCategory] = useState(HeaderCategories.TODAYSTOKENBASES);\n\n  const initialContext: RegistratorContextInterface = {\n    category: registratorCategory,\n    setCategory: (category => { setRegistratorCategory(category) }),\n    headerCategory: headerCategory,\n    setHeaderCategory: (category: HeaderCategories) => { setHeaderCategory(category) }\n  }\n\n  return (\n    <RegistratorContext.Provider value={initialContext}>\n      <DashboardLayout>\n        <Header />\n        <Content />\n        <Sidebar />\n      </DashboardLayout>\n    </RegistratorContext.Provider>\n  )\n}\n\nexport default RegistratorDashboard;\n","import React, { useContext } from 'react';\nimport UserRoles from '../../Constants/UserRoles';\nimport AppContext from '../App/contextHelper';\nimport Header from '../Header/Header';\nimport UsersViewer from '../UserViewer/UsersViewer';\nimport AdminDashBoard from './AdminDashBoard/AdminDashBoard';\nimport OperatorDashboard from './OperatorDashboard/OperatorDashboard';\nimport RegistratorDashboard from './RegistratorDashboard/RegistratorDashboard';\n\n\nconst UserDashBoard: React.FC = (): JSX.Element => {\n\n  const context = useContext(AppContext);\n  const superAdminCondition = context?.loggedInUser?.role === UserRoles.SUPERADMIN;\n  const adminCondition = context?.loggedInUser?.role === UserRoles.ADMIN;\n  const registratorCondition = context?.loggedInUser?.role === UserRoles.REGISTRATOR;\n  const operatorCondition = context?.loggedInUser?.role === UserRoles.OPERATOR;\n  return (\n    <>\n      {context?.loggedInUser && <Header />}\n      {superAdminCondition ? <UsersViewer userType={UserRoles.ADMIN} /> : <></>}\n      {adminCondition ? <AdminDashBoard /> : <></>}\n      {registratorCondition ? <RegistratorDashboard /> : <></>}\n      {operatorCondition ? <OperatorDashboard /> : <></>}\n    </>\n  );\n}\n\nexport default UserDashBoard;\n","import styled from 'styled-components';\nimport colors from '../../Constants/colors';\n\nconst AppWrapper = styled.div`\n    font-family: Arial, sans-serif;\n    height: 90vh;\n    width: 90vw;\n    background: ${colors.white};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${colors.red}\n    font-size: 100px;\n    margin: 2em auto 0;\n`;\n\nexport default AppWrapper;","import React from 'react';\nimport { Action, ActionTypes } from \"./appReducer\";\n\nexport const effectFunction = (dispatch: React.Dispatch<Action>) => {\n  verifySuperAdminExistance(dispatch);\n  setUserIfValidTokenPresent(dispatch);\n}\n\nconst verifySuperAdminExistance = (dispatch: React.Dispatch<Action>) => {\n  document.body.style.margin = '0px';\n  document.body.style.padding = '0px';\n  fetch('/users/superAdmin').then(response => response.json()).then(data => {\n    dispatch({ type: ActionTypes.SETPAGELOADING, payLoad: false });\n    if (data.length === 0) {\n      dispatch({ type: ActionTypes.SETSUPERADMINEXISTANCE, payLoad: false })\n    } else {\n      dispatch({ type: ActionTypes.SETSUPERADMINEXISTANCE, payLoad: true })\n    }\n  }).catch(error => {\n    dispatch({ type: ActionTypes.SETPAGELOADING, payLoad: false });\n    dispatch({ type: ActionTypes.SETCONNECTIONERROR, payLoad: true })\n  });\n}\n\nconst setUserIfValidTokenPresent = (dispatch: React.Dispatch<Action>) => {\n  const cookie = document.cookie;\n  const [, token] = cookie.split('=');\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      'Content-Type': \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }\n  fetch('/users/currentprofile', requestOptions).then(response => response.json()).then(data => {\n    if (data.error) {\n      dispatch({ type: ActionTypes.SETISLOGGEDIN, payLoad: false });\n      dispatch({ type: ActionTypes.SETUSER, payLoad: null });\n    } else {\n      const user = data._userInfo;\n      dispatch({ type: ActionTypes.SETUSER, payLoad: user });\n      dispatch({ type: ActionTypes.SETTOKEN, payLoad: token })\n      dispatch({ type: ActionTypes.SETISLOGGEDIN, payLoad: true });\n    }\n  });\n}\n\n","import React, { useEffect, useReducer } from 'react';\n\nimport LoginForm from '../LoginForm/LoginForm';\nimport UserCreationForm from '../UserCreationForm/UserCreationForm';\nimport UserRoles from '../../Constants/UserRoles';\nimport Spinner from '../Spinner/Spinner';\nimport UserDashBoard from '../UserDashBoard/UserDashBoard';\nimport UserInterface from '../../Interfaces/UserInterface';\nimport AppWrapper from './App.style';\nimport appReducer, { initialState } from './appReducer';\nimport { ActionTypes } from './appReducer';\nimport { effectFunction } from './helper';\nimport AppContext, { AppContextInterface } from './contextHelper';\n\n\nconst App: React.FC = (): JSX.Element => {\n\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  const setUserFn = (user: UserInterface | null) => {\n    dispatch({ type: ActionTypes.SETUSER, payLoad: user });\n  }\n  const setTokenFn = (token: string) => {\n    dispatch({ type: ActionTypes.SETTOKEN, payLoad: token });\n  }\n  const setUserLoggedInFn = () => {\n    dispatch({ type: ActionTypes.SETISLOGGEDIN, payLoad: true });\n  }\n\n  useEffect(() => {\n    effectFunction(dispatch);\n  }, []);\n\n  const initialContextObject: AppContextInterface = {\n    loggedInUser: state.user,\n    setLoggedInUser: setUserFn,\n    token: state.token,\n    setToken: setTokenFn\n  }\n\n\n\n  if (state.connectionError) {\n    return (\n      <AppWrapper>\n        Connection Error...\n      </AppWrapper>\n    );\n  } else {\n    if (state.pageLoading) {\n      return (\n        <AppWrapper>\n          <div className=\"spinner\">\n            <Spinner />\n          </div>\n        </AppWrapper>\n      );\n    } else if (!state.superAdminExistance) {\n      return (\n        <AppWrapper>\n          <UserCreationForm userType={UserRoles.SUPERADMIN} />\n        </AppWrapper>\n      );\n    } else if (state.isLoggedIn) {\n      return (\n        <AppWrapper>\n          <AppContext.Provider value={initialContextObject} >\n            <UserDashBoard />\n          </AppContext.Provider>\n        </AppWrapper>\n      );\n    } else {\n      return (\n        <AppWrapper>\n          <AppContext.Provider value={initialContextObject} >\n            <LoginForm setLoggedIn={setUserLoggedInFn} />\n          </AppContext.Provider>\n        </AppWrapper>\n      );\n    }\n  }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}